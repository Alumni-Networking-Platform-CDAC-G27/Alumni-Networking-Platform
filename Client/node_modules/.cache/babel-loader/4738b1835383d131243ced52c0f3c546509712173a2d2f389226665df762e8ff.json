{"ast":null,"code":"const BASE_URL='http://localhost:8080';const getAuthHeader=()=>{const token=localStorage.getItem(\"token\");return token&&token.length?{'Authorization':`Bearer ${token}`}:{};};export default{get:(endpoint,callback)=>{return fetch(BASE_URL+endpoint,{method:'GET',headers:{Accept:'application/json',...getAuthHeader()}}).then(checkStatus)// .then(data => data.json())\n.then(callback);},post:(endpoint,data,callback)=>{return fetch(BASE_URL+endpoint,{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json',...getAuthHeader()},body:JSON.stringify(data)}).then(checkStatus)// .then(res => res.json())\n.then(callback);},put:(endpoint,data,callback)=>{return fetch(BASE_URL+endpoint,{method:'PUT',headers:{Accept:'application/json','Content-Type':'application/json',...getAuthHeader()},body:JSON.stringify(data)}).then(checkStatus).then(callback);},delete:(endpoint,data,callback)=>{return fetch(BASE_URL+endpoint,{method:'DELETE',headers:{Accept:'application/json','Content-Type':'application/json',...getAuthHeader()},body:JSON.stringify(data)}).then(checkStatus).then(callback);},update:data=>{return fetch(BASE_URL+'/users/update',{method:'put',body:JSON.stringify(data),headers:{'Accept':'application/json','Content-Type':'application/json',...getAuthHeader()}}).then(checkStatus).then(()=>console.log('updated!!!'));// .catch(err => {\n//     console.log(err)\n// })\n},addPhoto:(endpoint,data,callback)=>{return fetch(BASE_URL+endpoint,{method:'POST',headers:{...getAuthHeader()},body:data}).then(checkStatus).then(callback);}};function checkStatus(response){if(response.status>=200&&response.status<300){return response.json();}else{var error=new Error(response.statusText);if(response.status===403&&response.url===BASE_URL+'/login'){error.message='Incorrect credentials!';error.response=response;throw error;}else if(response.status===403&&response.type==='cors'){console.log('err response: ',response);error.message='Your JWT token is expired. Please log in!';error.status=403;error.type='cors';throw error;}else if(response.status===400){console.log('err response: ',response);error.message='Error: Bad request';// error.message = response.message\nerror.status=400;error.type='cors';throw error;}// else if (response.status === 500) {\n//     console.log('err response: ', response)\n//     error.message = 'Something went wrong'\n//     error.status = 403;\n//     error.type = 'cors'\n//     throw error;\n// }\nelse{return response.json();}}}","map":{"version":3,"names":["BASE_URL","getAuthHeader","token","localStorage","getItem","length","get","endpoint","callback","fetch","method","headers","Accept","then","checkStatus","post","data","body","JSON","stringify","put","delete","update","console","log","addPhoto","response","status","json","error","Error","statusText","url","message","type"],"sources":["C:/Users/rijul/Downloads/Alumni/Alumani/Client/src/infrastructure/requester.js"],"sourcesContent":["const BASE_URL = 'http://localhost:8080';\n\nconst getAuthHeader = () => {\n    const token = localStorage.getItem(\"token\");\n\n    return (token && token.length)\n        ? { 'Authorization': `Bearer ${token}` }\n        : {}\n}\n\nexport default {\n    get: (endpoint, callback) => {\n        return fetch(BASE_URL + endpoint, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                ...getAuthHeader(),\n            },\n        }).then(checkStatus)\n            // .then(data => data.json())\n            .then(callback);\n    },\n\n    post: (endpoint, data, callback) => {\n        return fetch(BASE_URL + endpoint, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                ...getAuthHeader(),\n            },\n\n            body: JSON.stringify(data)\n        }).then(checkStatus)\n            // .then(res => res.json())\n            .then(callback);\n    },\n\n    put: (endpoint, data, callback) => {\n        return fetch(BASE_URL + endpoint, {\n            method: 'PUT',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                ...getAuthHeader(),\n            },\n            body: JSON.stringify(data)\n        }).then(checkStatus)\n            .then(callback);\n    },\n\n    delete: (endpoint, data, callback) => {\n        return fetch(BASE_URL + endpoint, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                ...getAuthHeader(),\n            },\n            body: JSON.stringify(data)\n        }).then(checkStatus)\n            .then(callback)\n    },\n\n    update: (data) => {\n        return fetch(BASE_URL + '/users/update', {\n            method: 'put',\n            body: JSON.stringify(data),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                ...getAuthHeader(),\n            }\n        }).then(checkStatus)\n            .then(() => console.log('updated!!!'))\n        // .catch(err => {\n        //     console.log(err)\n        // })\n\n    },\n\n    addPhoto: (endpoint, data, callback) => {\n        return fetch(BASE_URL + endpoint, {\n            method: 'POST',\n            headers: {\n                ...getAuthHeader()\n            },\n            body: data\n        }).then(checkStatus)\n            .then(callback)\n    }\n}\n\nfunction checkStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n        return response.json()\n    } else {\n        var error = new Error(response.statusText);\n        if (response.status === 403 && response.url === (BASE_URL + '/login')) {\n            error.message = 'Incorrect credentials!';\n            error.response = response;\n            throw error;\n        } else if (response.status === 403 && response.type === 'cors') {\n            console.log('err response: ', response)\n            error.message = 'Your JWT token is expired. Please log in!'\n            error.status = 403;\n            error.type = 'cors'\n            throw error;\n        } else if (response.status === 400) {\n            console.log('err response: ', response)\n            error.message = 'Error: Bad request'\n            // error.message = response.message\n            error.status = 400;\n            error.type = 'cors'\n            throw error;\n        }\n        // else if (response.status === 500) {\n        //     console.log('err response: ', response)\n        //     error.message = 'Something went wrong'\n        //     error.status = 403;\n        //     error.type = 'cors'\n        //     throw error;\n        // }\n        else {\n            return response.json();\n        }\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
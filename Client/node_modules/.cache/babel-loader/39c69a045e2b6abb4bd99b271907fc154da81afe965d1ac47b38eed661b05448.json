{"ast":null,"code":"import React from'react';import{userService}from'../../infrastructure';import placeholder_user_image from'../../assets/images/placeholder.png';const MessageNavBarRow=props=>{const{fromUserId:id,fromUserFirstName:firstName,fromUserLastName:lastName,content,time,count}=props;const profilePicUrl=props.fromUserProfilePicUrl||placeholder_user_image;let imgClassName='';if(profilePicUrl){imgClassName=userService.getImageSize(profilePicUrl);}let userNameFormatted=userService.formatUsername(firstName,lastName,18);let contentFormatted=userService.formatUsername(content,'',40);const dayTime=time.hour<=12?'AM':'PM';const month=time.month.substring(0,1)+time.month.substring(1,5).toLowerCase();const hour=time.hour<10?'0'+time.hour:time.hour;const minute=time.minute<10?'0'+time.minute:time.minute;return/*#__PURE__*/React.createElement(\"div\",{className:\"messagebox-navbar-friend-container\",onMouseDown:e=>props.triggerMessageLoad(id,firstName,lastName,profilePicUrl,e)},/*#__PURE__*/React.createElement(\"div\",{className:\"messagebox-navbar-friend-image\"},/*#__PURE__*/React.createElement(\"img\",{className:imgClassName,src:profilePicUrl,alt:\"profilePic\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"messagebox-navbar-username-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"message-wrapper\"},/*#__PURE__*/React.createElement(\"p\",{className:\"messagebox-navbar-username\"},userNameFormatted,\" \",/*#__PURE__*/React.createElement(\"span\",null,\"(\",count,\")\"),\" \"),/*#__PURE__*/React.createElement(\"p\",{className:\"message-navbar-time\"},\" \",time.dayOfMonth,\" \",month,\" \",hour,\":\",minute,\" \",dayTime)),/*#__PURE__*/React.createElement(\"p\",{className:\"message-navbar-content\"},contentFormatted)));};export default MessageNavBarRow;","map":{"version":3,"names":["React","userService","placeholder_user_image","MessageNavBarRow","props","fromUserId","id","fromUserFirstName","firstName","fromUserLastName","lastName","content","time","count","profilePicUrl","fromUserProfilePicUrl","imgClassName","getImageSize","userNameFormatted","formatUsername","contentFormatted","dayTime","hour","month","substring","toLowerCase","minute","createElement","className","onMouseDown","e","triggerMessageLoad","src","alt","dayOfMonth"],"sources":["C:/Users/rijul/Downloads/Alumni/Alumani/Client/src/components/home/MessageNavbarRow.js"],"sourcesContent":["import React from 'react';\nimport { userService } from '../../infrastructure';\nimport placeholder_user_image from '../../assets/images/placeholder.png';\n\nconst MessageNavBarRow = (props) => {\n    const {fromUserId: id, fromUserFirstName: firstName, fromUserLastName: lastName, content, time, count } = props;\n    const profilePicUrl = props.fromUserProfilePicUrl || placeholder_user_image\n\n    let imgClassName = '';\n    if (profilePicUrl) {\n        imgClassName = userService.getImageSize(profilePicUrl);\n    }\n\n    let userNameFormatted = userService.formatUsername(firstName, lastName, 18);\n    let contentFormatted = userService.formatUsername(content,'', 40);\n\n    const dayTime = time.hour <= 12 ? 'AM' : 'PM';\n    const month = time.month.substring(0, 1) + time.month.substring(1, 5).toLowerCase()\n    const hour = time.hour < 10 ? '0' + time.hour : time.hour;\n    const minute = time.minute < 10 ? '0' + time.minute : time.minute;\n\n    return (\n        <div className=\"messagebox-navbar-friend-container\" onMouseDown={(e) => props.triggerMessageLoad(id, firstName, lastName, profilePicUrl, e)}>\n            <div className=\"messagebox-navbar-friend-image\">\n                <img className={imgClassName} src={profilePicUrl} alt=\"profilePic\" />\n            </div>\n            <div className=\"messagebox-navbar-username-container\" >\n                <div className=\"message-wrapper\">\n                    <p className=\"messagebox-navbar-username\">{userNameFormatted} <span>({count})</span> </p>\n                    <p className=\"message-navbar-time\"> {time.dayOfMonth} {month} {hour}:{minute} {dayTime}</p>\n                </div>\n                <p className=\"message-navbar-content\">{contentFormatted}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default MessageNavBarRow;\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,sBAAsB,CAClD,MAAO,CAAAC,sBAAsB,KAAM,qCAAqC,CAExE,KAAM,CAAAC,gBAAgB,CAAIC,KAAK,EAAK,CAChC,KAAM,CAACC,UAAU,CAAEC,EAAE,CAAEC,iBAAiB,CAAEC,SAAS,CAAEC,gBAAgB,CAAEC,QAAQ,CAAEC,OAAO,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGT,KAAK,CAC/G,KAAM,CAAAU,aAAa,CAAGV,KAAK,CAACW,qBAAqB,EAAIb,sBAAsB,CAE3E,GAAI,CAAAc,YAAY,CAAG,EAAE,CACrB,GAAIF,aAAa,CAAE,CACfE,YAAY,CAAGf,WAAW,CAACgB,YAAY,CAACH,aAAa,CAAC,CAC1D,CAEA,GAAI,CAAAI,iBAAiB,CAAGjB,WAAW,CAACkB,cAAc,CAACX,SAAS,CAAEE,QAAQ,CAAE,EAAE,CAAC,CAC3E,GAAI,CAAAU,gBAAgB,CAAGnB,WAAW,CAACkB,cAAc,CAACR,OAAO,CAAC,EAAE,CAAE,EAAE,CAAC,CAEjE,KAAM,CAAAU,OAAO,CAAGT,IAAI,CAACU,IAAI,EAAI,EAAE,CAAG,IAAI,CAAG,IAAI,CAC7C,KAAM,CAAAC,KAAK,CAAGX,IAAI,CAACW,KAAK,CAACC,SAAS,CAAC,CAAC,CAAE,CAAC,CAAC,CAAGZ,IAAI,CAACW,KAAK,CAACC,SAAS,CAAC,CAAC,CAAE,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnF,KAAM,CAAAH,IAAI,CAAGV,IAAI,CAACU,IAAI,CAAG,EAAE,CAAG,GAAG,CAAGV,IAAI,CAACU,IAAI,CAAGV,IAAI,CAACU,IAAI,CACzD,KAAM,CAAAI,MAAM,CAAGd,IAAI,CAACc,MAAM,CAAG,EAAE,CAAG,GAAG,CAAGd,IAAI,CAACc,MAAM,CAAGd,IAAI,CAACc,MAAM,CAEjE,mBACI1B,KAAA,CAAA2B,aAAA,QAAKC,SAAS,CAAC,oCAAoC,CAACC,WAAW,CAAGC,CAAC,EAAK1B,KAAK,CAAC2B,kBAAkB,CAACzB,EAAE,CAAEE,SAAS,CAAEE,QAAQ,CAAEI,aAAa,CAAEgB,CAAC,CAAE,eACxI9B,KAAA,CAAA2B,aAAA,QAAKC,SAAS,CAAC,gCAAgC,eAC3C5B,KAAA,CAAA2B,aAAA,QAAKC,SAAS,CAAEZ,YAAa,CAACgB,GAAG,CAAElB,aAAc,CAACmB,GAAG,CAAC,YAAY,CAAE,CACnE,CAAC,cACNjC,KAAA,CAAA2B,aAAA,QAAKC,SAAS,CAAC,sCAAsC,eACjD5B,KAAA,CAAA2B,aAAA,QAAKC,SAAS,CAAC,iBAAiB,eAC5B5B,KAAA,CAAA2B,aAAA,MAAGC,SAAS,CAAC,4BAA4B,EAAEV,iBAAiB,CAAC,GAAC,cAAAlB,KAAA,CAAA2B,aAAA,aAAM,GAAC,CAACd,KAAK,CAAC,GAAO,CAAC,IAAI,CAAC,cACzFb,KAAA,CAAA2B,aAAA,MAAGC,SAAS,CAAC,qBAAqB,EAAC,GAAC,CAAChB,IAAI,CAACsB,UAAU,CAAC,GAAC,CAACX,KAAK,CAAC,GAAC,CAACD,IAAI,CAAC,GAAC,CAACI,MAAM,CAAC,GAAC,CAACL,OAAW,CACzF,CAAC,cACNrB,KAAA,CAAA2B,aAAA,MAAGC,SAAS,CAAC,wBAAwB,EAAER,gBAAoB,CAC1D,CACJ,CAAC,CAEd,CAAC,CAED,cAAe,CAAAjB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
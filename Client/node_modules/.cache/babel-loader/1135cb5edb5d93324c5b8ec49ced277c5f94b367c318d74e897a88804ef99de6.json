{"ast":null,"code":"import { FETCH_ALLPOSTS_BEGIN, FETCH_ALLPOSTS_SUCCESS, FETCH_ALLPOSTS_ERROR, REMOVE_POST_BEGIN, REMOVE_POST_SUCCESS, REMOVE_POST_ERROR, ADDLIKE_POST_SUCCESS, ADDLIKE_POST_BEGIN, ADDLIKE_POST_ERROR, CREATE_POST_SUCCESS, CREATE_POST_BEGIN, CREATE_POST_ERROR } from '../actions/actionTypes';\n\n// createPostReducer\nconst initialStateCreatePost = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst createPostReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateCreatePost;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case CREATE_POST_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case CREATE_POST_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n    case CREATE_POST_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\n\n// fetchAllPostsReducer\nconst initialStateAllPosts = {\n  allPostsArr: [],\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst fetchAllPostsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateAllPosts;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FETCH_ALLPOSTS_BEGIN:\n      return Object.assign({}, state, {\n        allPostsArr: [],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case FETCH_ALLPOSTS_SUCCESS:\n      return Object.assign({}, state, {\n        allPostsArr: [...action.payload],\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n    case FETCH_ALLPOSTS_ERROR:\n      return Object.assign({}, state, {\n        allPostsArr: [],\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\nconst initialStateRemovePost = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\n\n// removePostReducer\nconst removePostReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateRemovePost;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case REMOVE_POST_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case REMOVE_POST_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n    case REMOVE_POST_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\nconst initialStateAddLikePost = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\n\n// addLikePostReducer\nconst addLikePostReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateAddLikePost;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADDLIKE_POST_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case ADDLIKE_POST_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n    case ADDLIKE_POST_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\nexport { createPostReducer, fetchAllPostsReducer, removePostReducer, addLikePostReducer };","map":{"version":3,"names":["FETCH_ALLPOSTS_BEGIN","FETCH_ALLPOSTS_SUCCESS","FETCH_ALLPOSTS_ERROR","REMOVE_POST_BEGIN","REMOVE_POST_SUCCESS","REMOVE_POST_ERROR","ADDLIKE_POST_SUCCESS","ADDLIKE_POST_BEGIN","ADDLIKE_POST_ERROR","CREATE_POST_SUCCESS","CREATE_POST_BEGIN","CREATE_POST_ERROR","initialStateCreatePost","hasError","error","message","status","path","loading","createPostReducer","state","arguments","length","undefined","action","type","Object","assign","payload","initialStateAllPosts","allPostsArr","fetchAllPostsReducer","initialStateRemovePost","removePostReducer","initialStateAddLikePost","addLikePostReducer"],"sources":["C:/Users/Administrator/Documents/0011_Final_PROJECT/Alumni-Networking-Platform/Client/src/store/reducers/postReducer.js"],"sourcesContent":["import {\r\n    FETCH_ALLPOSTS_BEGIN, FETCH_ALLPOSTS_SUCCESS, FETCH_ALLPOSTS_ERROR,\r\n    REMOVE_POST_BEGIN, REMOVE_POST_SUCCESS, REMOVE_POST_ERROR,\r\n    ADDLIKE_POST_SUCCESS, ADDLIKE_POST_BEGIN, ADDLIKE_POST_ERROR,\r\n    CREATE_POST_SUCCESS, CREATE_POST_BEGIN, CREATE_POST_ERROR\r\n} from '../actions/actionTypes';\r\n\r\n// createPostReducer\r\nconst initialStateCreatePost = {\r\n    hasError: false,\r\n    error: '',\r\n    message: '',\r\n    status: '',\r\n    path: '',\r\n    loading: false,\r\n}\r\n\r\nconst createPostReducer = (state = initialStateCreatePost, action) => {\r\n    switch (action.type) {\r\n        case CREATE_POST_BEGIN:\r\n            return Object.assign({}, state, {\r\n                hasError: false,\r\n                error: '',\r\n                message: '',\r\n                status: '',\r\n                path: '',\r\n                loading: true,\r\n            })\r\n        case CREATE_POST_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                hasError: false,\r\n                error: '',\r\n                message: action.payload.message,\r\n                status: '',\r\n                path: '',\r\n                loading: false,\r\n            })\r\n        case CREATE_POST_ERROR:\r\n            return Object.assign({}, state, {\r\n                hasError: true,\r\n                error: action.error,\r\n                message: action.message,\r\n                status: action.status,\r\n                path: action.path,\r\n                loading: false,\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// fetchAllPostsReducer\r\nconst initialStateAllPosts = {\r\n    allPostsArr: [],\r\n    hasError: false,\r\n    error: '',\r\n    message: '',\r\n    status: '',\r\n    path: '',\r\n    loading: false,\r\n}\r\n\r\nconst fetchAllPostsReducer = (state = initialStateAllPosts, action) => {\r\n    switch (action.type) {\r\n        case FETCH_ALLPOSTS_BEGIN:\r\n            return Object.assign({}, state, {\r\n                allPostsArr: [],\r\n                hasError: false,\r\n                error: '',\r\n                message: '',\r\n                status: '',\r\n                path: '',\r\n                loading: true,\r\n            })\r\n        case FETCH_ALLPOSTS_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                allPostsArr: [...action.payload],\r\n                hasError: false,\r\n                error: '',\r\n                message: action.payload.message,\r\n                status: '',\r\n                path: '',\r\n                loading: false,\r\n            })\r\n        case FETCH_ALLPOSTS_ERROR:\r\n            return Object.assign({}, state, {\r\n                allPostsArr: [],\r\n                hasError: true,\r\n                error: action.error,\r\n                message: action.message,\r\n                status: action.status,\r\n                path: action.path,\r\n                loading: false,\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst initialStateRemovePost = {\r\n    hasError: false,\r\n    error: '',\r\n    message: '',\r\n    status: '',\r\n    path: '',\r\n    loading: false,\r\n}\r\n\r\n// removePostReducer\r\nconst removePostReducer = (state = initialStateRemovePost, action) => {\r\n    switch (action.type) {\r\n        case REMOVE_POST_BEGIN:\r\n            return Object.assign({}, state, {\r\n                hasError: false,\r\n                error: '',\r\n                message: '',\r\n                status: '',\r\n                path: '',\r\n                loading: true,\r\n            })\r\n        case REMOVE_POST_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                hasError: false,\r\n                error: '',\r\n                message: action.payload.message,\r\n                status: '',\r\n                path: '',\r\n                loading: false,\r\n            })\r\n        case REMOVE_POST_ERROR:\r\n            return Object.assign({}, state, {\r\n                hasError: true,\r\n                error: action.error,\r\n                message: action.message,\r\n                status: action.status,\r\n                path: action.path,\r\n                loading: false,\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst initialStateAddLikePost = {\r\n    hasError: false,\r\n    error: '',\r\n    message: '',\r\n    status: '',\r\n    path: '',\r\n    loading: false,\r\n}\r\n\r\n// addLikePostReducer\r\nconst addLikePostReducer = (state = initialStateAddLikePost, action) => {\r\n    switch (action.type) {\r\n        case ADDLIKE_POST_BEGIN:\r\n            return Object.assign({}, state, {\r\n                hasError: false,\r\n                error: '',\r\n                message: '',\r\n                status: '',\r\n                path: '',\r\n                loading: true,\r\n            })\r\n        case ADDLIKE_POST_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                hasError: false,\r\n                error: '',\r\n                message: action.payload.message,\r\n                status: '',\r\n                path: '',\r\n                loading: false,\r\n            })\r\n        case ADDLIKE_POST_ERROR:\r\n            return Object.assign({}, state, {\r\n                hasError: true,\r\n                error: action.error,\r\n                message: action.message,\r\n                status: action.status,\r\n                path: action.path,\r\n                loading: false,\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport { createPostReducer, fetchAllPostsReducer, removePostReducer, addLikePostReducer }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
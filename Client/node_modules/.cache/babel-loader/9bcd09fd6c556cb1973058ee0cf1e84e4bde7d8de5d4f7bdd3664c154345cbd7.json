{"ast":null,"code":"import{requester}from'../../infrastructure';import{FETCH_ALL_LOGS_SUCCESS,FETCH_ALL_LOGS_BEGIN,FETCH_ALL_LOGS_ERROR,FINDBYUSERNAME_LOGS_SUCCESS,FINDBYUSERNAME_LOGS_BEGIN,FINDBYUSERNAME_LOGS_ERROR,CLEARBYUSERNAME_LOGS_SUCCESS,CLEARBYUSERNAME_LOGS_BEGIN,CLEARBYUSERNAME_LOGS_ERROR,CLEAR_ALL_LOGS_SUCCESS,CLEAR_ALL_LOGS_BEGIN,CLEAR_ALL_LOGS_ERROR}from'./actionTypes';// fetchAllLogs\nfunction fetchAllLogsSuccess(response){return{type:FETCH_ALL_LOGS_SUCCESS,payload:response};}function fetchAllLogsBegin(){return{type:FETCH_ALL_LOGS_BEGIN};}function fetchAllLogsError(error,message,status,path){return{type:FETCH_ALL_LOGS_ERROR,error,message,status,path};}function fetchAllLogsAction(){return dispatch=>{dispatch(fetchAllLogsBegin());return requester.get('/logs/all',response=>{if(response.error){const{error,message,status,path}=response;dispatch(fetchAllLogsError(error,message,status,path));}else{// dispatch(changeAllPicturesAction(timeLineUserId));\ndispatch(fetchAllLogsSuccess(response));}}).catch(err=>{if(err.status===403&&err.message==='Your JWT token is expired. Please log in!'){localStorage.clear();}dispatch(fetchAllLogsError('',`Error: ${err.message}`,err.status,''));});};};// findByUserName\nfunction findByUserNameSuccess(response,search){return{type:FINDBYUSERNAME_LOGS_SUCCESS,payload:response,message:`Successfully loaded logs for \"${search}\".`};}function findByUserNameBegin(){return{type:FINDBYUSERNAME_LOGS_BEGIN};}function findByUserNameError(error,message,status,path){return{type:FINDBYUSERNAME_LOGS_ERROR,error,message,status,path};}function findLogsByUserNameAction(search){return dispatch=>{dispatch(findByUserNameBegin());return requester.get('/logs/findByUserName/'+search,response=>{if(response.error){const{error,message,status,path}=response;dispatch(findByUserNameError(error,message,status,path));}else{dispatch(fetchAllLogsSuccess(response));dispatch(findByUserNameSuccess(response,search));}}).catch(err=>{if(err.status===403&&err.message==='Your JWT token is expired. Please log in!'){localStorage.clear();}dispatch(findByUserNameError('',`Error: ${err.message}`,err.status,''));});};};// clearByUserName\nfunction clearByUserNameSuccess(response){return{type:CLEARBYUSERNAME_LOGS_SUCCESS,payload:response};}function clearByUserNameBegin(){return{type:CLEARBYUSERNAME_LOGS_BEGIN};}function clearByUserNameError(error,message,status,path){return{type:CLEARBYUSERNAME_LOGS_ERROR,error,message,status,path};}function clearLogsByUserNameAction(selected){return dispatch=>{dispatch(clearByUserNameBegin());return requester.delete('/logs/clearByName/'+selected,{},response=>{if(response.error){const{error,message,status,path}=response;dispatch(clearByUserNameError(error,message,status,path));}else{dispatch(clearByUserNameSuccess(response));dispatch(fetchAllLogsAction());}}).catch(err=>{if(err.status===403&&err.message==='Your JWT token is expired. Please log in!'){localStorage.clear();}dispatch(clearByUserNameError('',`Error: ${err.message}`,err.status,''));});};};// clearAllLogs\nfunction clearAllLogsSuccess(response){return{type:CLEAR_ALL_LOGS_SUCCESS,payload:response};}function clearAllLogsBegin(){return{type:CLEAR_ALL_LOGS_BEGIN};}function clearAllLogsError(error,message,status,path){return{type:CLEAR_ALL_LOGS_ERROR,error,message,status,path};}function clearAllLogsAction(){return dispatch=>{dispatch(clearAllLogsBegin());return requester.delete('/logs/clear',{},response=>{if(response.error){const{error,message,status,path}=response;dispatch(clearAllLogsError(error,message,status,path));}else{dispatch(clearAllLogsSuccess(response));}}).catch(err=>{if(err.status===403&&err.message==='Your JWT token is expired. Please log in!'){localStorage.clear();}dispatch(clearAllLogsError('',`Error: ${err.message}`,err.status,''));});};};export{fetchAllLogsAction,findLogsByUserNameAction,clearLogsByUserNameAction,clearAllLogsAction};","map":{"version":3,"names":["requester","FETCH_ALL_LOGS_SUCCESS","FETCH_ALL_LOGS_BEGIN","FETCH_ALL_LOGS_ERROR","FINDBYUSERNAME_LOGS_SUCCESS","FINDBYUSERNAME_LOGS_BEGIN","FINDBYUSERNAME_LOGS_ERROR","CLEARBYUSERNAME_LOGS_SUCCESS","CLEARBYUSERNAME_LOGS_BEGIN","CLEARBYUSERNAME_LOGS_ERROR","CLEAR_ALL_LOGS_SUCCESS","CLEAR_ALL_LOGS_BEGIN","CLEAR_ALL_LOGS_ERROR","fetchAllLogsSuccess","response","type","payload","fetchAllLogsBegin","fetchAllLogsError","error","message","status","path","fetchAllLogsAction","dispatch","get","catch","err","localStorage","clear","findByUserNameSuccess","search","findByUserNameBegin","findByUserNameError","findLogsByUserNameAction","clearByUserNameSuccess","clearByUserNameBegin","clearByUserNameError","clearLogsByUserNameAction","selected","delete","clearAllLogsSuccess","clearAllLogsBegin","clearAllLogsError","clearAllLogsAction"],"sources":["C:/Users/rijul/Downloads/Alumni/Alumani/Client/src/store/actions/logsActions.js"],"sourcesContent":["import { requester } from '../../infrastructure';\nimport {\n    FETCH_ALL_LOGS_SUCCESS, FETCH_ALL_LOGS_BEGIN, FETCH_ALL_LOGS_ERROR,\n    FINDBYUSERNAME_LOGS_SUCCESS, FINDBYUSERNAME_LOGS_BEGIN, FINDBYUSERNAME_LOGS_ERROR,\n    CLEARBYUSERNAME_LOGS_SUCCESS, CLEARBYUSERNAME_LOGS_BEGIN, CLEARBYUSERNAME_LOGS_ERROR,\n    CLEAR_ALL_LOGS_SUCCESS, CLEAR_ALL_LOGS_BEGIN, CLEAR_ALL_LOGS_ERROR,\n} from './actionTypes';\n\n// fetchAllLogs\nfunction fetchAllLogsSuccess(response) {\n    return {\n        type: FETCH_ALL_LOGS_SUCCESS,\n        payload: response\n    }\n}\n\nfunction fetchAllLogsBegin() {\n    return {\n        type: FETCH_ALL_LOGS_BEGIN,\n    }\n}\n\nfunction fetchAllLogsError(error, message, status, path) {\n    return {\n        type: FETCH_ALL_LOGS_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nfunction fetchAllLogsAction() {\n    return (dispatch) => {\n        dispatch(fetchAllLogsBegin())\n        return requester.get('/logs/all', (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(fetchAllLogsError(error, message, status, path));\n            } else {\n                // dispatch(changeAllPicturesAction(timeLineUserId));\n                dispatch(fetchAllLogsSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(fetchAllLogsError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n};\n\n// findByUserName\nfunction findByUserNameSuccess(response, search) {\n    return {\n        type: FINDBYUSERNAME_LOGS_SUCCESS,\n        payload: response,\n        message: `Successfully loaded logs for \"${search}\".`\n    }\n}\n\nfunction findByUserNameBegin() {\n    return {\n        type: FINDBYUSERNAME_LOGS_BEGIN,\n    }\n}\n\nfunction findByUserNameError(error, message, status, path) {\n    return {\n        type: FINDBYUSERNAME_LOGS_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nfunction findLogsByUserNameAction(search) {\n    return (dispatch) => {\n        dispatch(findByUserNameBegin())\n        return requester.get('/logs/findByUserName/' + search, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(findByUserNameError(error, message, status, path));\n            } else {\n                dispatch(fetchAllLogsSuccess(response));\n                dispatch(findByUserNameSuccess(response, search));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(findByUserNameError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n};\n\n// clearByUserName\nfunction clearByUserNameSuccess(response) {\n    return {\n        type: CLEARBYUSERNAME_LOGS_SUCCESS,\n        payload: response,\n    }\n}\n\nfunction clearByUserNameBegin() {\n    return {\n        type: CLEARBYUSERNAME_LOGS_BEGIN,\n    }\n}\n\nfunction clearByUserNameError(error, message, status, path) {\n    return {\n        type: CLEARBYUSERNAME_LOGS_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nfunction clearLogsByUserNameAction(selected) {\n    return (dispatch) => {\n        dispatch(clearByUserNameBegin())\n        return requester.delete('/logs/clearByName/' + selected, {}, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(clearByUserNameError(error, message, status, path));\n            } else {\n                dispatch(clearByUserNameSuccess(response));\n                dispatch(fetchAllLogsAction());\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(clearByUserNameError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n};\n\n// clearAllLogs\nfunction clearAllLogsSuccess(response) {\n    return {\n        type: CLEAR_ALL_LOGS_SUCCESS,\n        payload: response,\n    }\n}\n\nfunction clearAllLogsBegin() {\n    return {\n        type: CLEAR_ALL_LOGS_BEGIN,\n    }\n}\n\nfunction clearAllLogsError(error, message, status, path) {\n    return {\n        type: CLEAR_ALL_LOGS_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nfunction clearAllLogsAction() {\n    return (dispatch) => {\n        dispatch(clearAllLogsBegin())\n        return requester.delete('/logs/clear', {}, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(clearAllLogsError(error, message, status, path));\n            } else {\n                dispatch(clearAllLogsSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(clearAllLogsError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n};\n\nexport { fetchAllLogsAction, findLogsByUserNameAction, clearLogsByUserNameAction, clearAllLogsAction };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
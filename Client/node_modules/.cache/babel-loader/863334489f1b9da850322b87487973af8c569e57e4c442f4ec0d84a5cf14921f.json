{"ast":null,"code":"import React,{Fragment,Component}from'react';import{userService}from'../../infrastructure';import TextareaAutosize from'react-autosize-textarea';export default class WriteComment extends Component{constructor(props){super(props);this.handleBlur=field=>event=>{this.setState({touched:{...this.state.touched,[field]:true}});};this.validate=content=>{return{content:content.length===0};};this.state={content:'',imageUrl:'',createCommentData:'',touched:{content:false}};this.handleBlur=this.handleBlur.bind(this);this.onChangeHandler=this.onChangeHandler.bind(this);this.onSubmitHandler=this.onSubmitHandler.bind(this);}componentDidUpdate(prevProps,prevState){const loading=this.props.createCommentData.loading||this.props.loadingAllPosts;if(!loading&&this.state.createCommentData!==this.props.createCommentData){this.setState({content:'',imageUrl:'',createCommentData:this.props.createCommentData});}}onSubmitHandler(event){event.preventDefault();if(!this.canBeSubmitted()){return;}const postId=this.props.postId;const{content,imageUrl}=this.state;this.props.createComment(postId,content,imageUrl);}onChangeHandler(event){this.setState({[event.target.name]:event.target.value});}canBeSubmitted(){const{content}=this.state;const errors=this.validate(content);const isDisabled=Object.keys(errors).some(x=>errors[x]);return!isDisabled;}render(){const{content}=this.state;const errors=this.validate(content);const isEnabled=!Object.keys(errors).some(x=>errors[x]);const displayButon=isEnabled?'':'hidden';const loggedInUserProfilePicUrl=this.props.loggedInUser.profilePicUrl;const imageClass=userService.getImageSize(loggedInUserProfilePicUrl);const loggedInUserFirstName=this.props.loggedInUser.firstName;const formattedName=userService.formatUsername(loggedInUserFirstName);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"section\",{className:\"comment-section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"write-comment\",id:\"create-comment-button-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"post\"},/*#__PURE__*/React.createElement(\"div\",{className:\"post-image\"},/*#__PURE__*/React.createElement(\"img\",{className:imageClass,src:loggedInUserProfilePicUrl,alt:\"\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"post-area-container\"},/*#__PURE__*/React.createElement(\"form\",{className:\"\",onSubmit:this.onSubmitHandler},/*#__PURE__*/React.createElement(\"div\",{className:\"\",id:\"post-textarea-form-group\"},/*#__PURE__*/React.createElement(TextareaAutosize,{name:\"content\",id:\"content\",className:\"post-textarea\",value:this.state.content,onChange:this.onChangeHandler,onBlur:this.handleBlur('content'),\"aria-describedby\":\"contentHelp\",placeholder:`Write a comment, ${formattedName}!`})),/*#__PURE__*/React.createElement(\"div\",{className:\"text-center\"},/*#__PURE__*/React.createElement(\"button\",{disabled:!isEnabled,style:{'visibility':`${displayButon}`},type:\"submit\",className:\"btn uiButtonGroup post-button-fbPhotoCurationControl App-button-primary \"},\"POST\"))))))));}}","map":{"version":3,"names":["React","Fragment","Component","userService","TextareaAutosize","WriteComment","constructor","props","handleBlur","field","event","setState","touched","state","validate","content","length","imageUrl","createCommentData","bind","onChangeHandler","onSubmitHandler","componentDidUpdate","prevProps","prevState","loading","loadingAllPosts","preventDefault","canBeSubmitted","postId","createComment","target","name","value","errors","isDisabled","Object","keys","some","x","render","isEnabled","displayButon","loggedInUserProfilePicUrl","loggedInUser","profilePicUrl","imageClass","getImageSize","loggedInUserFirstName","firstName","formattedName","formatUsername","createElement","className","id","src","alt","onSubmit","onChange","onBlur","placeholder","disabled","style","type"],"sources":["C:/Users/rijul/Downloads/Alumni/Alumani/Client/src/components/home/WriteComment.js"],"sourcesContent":["import React, { Fragment, Component } from 'react';\nimport { userService} from '../../infrastructure';\nimport TextareaAutosize from 'react-autosize-textarea';\n\nexport default class WriteComment extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            content: '',\n            imageUrl: '',\n            createCommentData: '',\n            touched: {\n                content: false,\n            }\n        };\n\n        this.handleBlur = this.handleBlur.bind(this);\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const loading = this.props.createCommentData.loading || this.props.loadingAllPosts;\n\n        if (!loading && this.state.createCommentData !== this.props.createCommentData) {\n            this.setState({\n                content: '',\n                imageUrl: '',\n                createCommentData: this.props.createCommentData,\n            })\n        }\n    }\n\n    onSubmitHandler(event) {\n        event.preventDefault();\n\n        if (!this.canBeSubmitted()) {\n            return;\n        }\n        const postId = this.props.postId;\n        const { content, imageUrl } = this.state;\n\n        this.props.createComment(postId, content, imageUrl )\n    }\n\n    onChangeHandler(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleBlur = (field) => (event) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true }\n        });\n    }\n\n    canBeSubmitted() {\n        const { content } = this.state;\n        const errors = this.validate(content);\n        const isDisabled = Object.keys(errors).some(x => errors[x])\n        return !isDisabled;\n    }\n\n    validate = (content) => {\n        return {\n            content: content.length === 0,\n        }\n    }\n\n    render() {\n        const { content } = this.state;\n        const errors = this.validate(content);\n        const isEnabled = !Object.keys(errors).some(x => errors[x]);\n        const displayButon = isEnabled ? '' : 'hidden';\n\n        const loggedInUserProfilePicUrl = this.props.loggedInUser.profilePicUrl;\n        const imageClass = userService.getImageSize(loggedInUserProfilePicUrl);\n        const loggedInUserFirstName = this.props.loggedInUser.firstName;\n        const formattedName = userService.formatUsername(loggedInUserFirstName);\n\n        return (\n            <Fragment>\n                <section className=\"comment-section\">\n                    <div className=\"write-comment\" id=\"create-comment-button-container\">\n                        <div className=\"post\">\n                            <div className=\"post-image\">\n                                <img className={imageClass} src={loggedInUserProfilePicUrl} alt=\"\" />\n                            </div>\n                            <div className=\"post-area-container\">\n                                <form className=\"\" onSubmit={this.onSubmitHandler}>\n                                    <div className=\"\" id=\"post-textarea-form-group\">\n                                        <TextareaAutosize\n                                            name=\"content\"\n                                            id=\"content\"\n                                            className=\"post-textarea\"\n                                            value={this.state.content}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('content')}\n                                            aria-describedby=\"contentHelp\"\n                                            placeholder={`Write a comment, ${formattedName}!`}\n                                        >\n                                        </TextareaAutosize>\n                                    </div>\n\n                                    <div className=\"text-center\">\n                                        <button disabled={!isEnabled} style={{ 'visibility': `${displayButon}` }} type=\"submit\" className=\"btn uiButtonGroup post-button-fbPhotoCurationControl App-button-primary \">POST</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </Fragment>\n        )\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
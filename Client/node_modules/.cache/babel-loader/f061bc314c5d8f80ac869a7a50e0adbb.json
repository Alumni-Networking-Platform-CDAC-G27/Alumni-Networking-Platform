{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\Alumani\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\Alumani\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\Alumani\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\Alumani\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\Alumani\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\Alumani\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\Alumani\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\Alumani\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\Alumani\\\\Client\\\\src\\\\components\\\\home\\\\MessageBox.js\";\nimport React, { Component, Fragment } from 'react';\nimport { userService } from '../../infrastructure';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport FriendChatBox from './FriendChatBox';\nimport FriendMessage from './FriendMessage';\nimport '../user/css/UserAllPage.css';\nimport './css/MessageBox.css';\nimport { connect } from 'react-redux';\nimport { fetchAllChatFriendsAction, updateUserStatusAction } from '../../store/actions/userActions';\nimport { fetchAllMessagesAction, addMessageAction, fetchAllUnreadMessagesAction } from '../../store/actions/messageActions';\nimport Stomp from \"stompjs\";\nimport SockJS from \"sockjs-client\";\nvar MessageBox = /*#__PURE__*/function (_Component) {\n  _inherits(MessageBox, _Component);\n  function MessageBox(props) {\n    var _this;\n    _classCallCheck(this, MessageBox);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageBox).call(this, props));\n    _this.initializeWebSocketConnection = function () {\n      var ws = new SockJS(_this.serverUrl);\n      _this.stompClient = Stomp.over(ws);\n      var headers = _this.getAuthHeader();\n      _this.stompClient.connect(headers, function (frame) {\n        if (_this._isMounted) {\n          _this.setState({\n            clientConnected: true\n          });\n          _this.stompClient.subscribe(\"/user/queue/position-update\", function (message) {\n            if (message.body) {\n              var messageBody = JSON.parse(message.body);\n              if (_this._isMounted && (messageBody.fromUserId === _this.state.chatUserId || messageBody.fromUserId === userService.getUserId())) {\n                _this.props.addMessage(messageBody);\n              }\n              if (messageBody.fromUserId !== userService.getUserId()) {\n                var formattedUserNames = userService.formatUsername(messageBody.fromUserFirstName, messageBody.fromUserLastName);\n                toast.info(/*#__PURE__*/React.createElement(ToastComponent.infoToast, {\n                  text: \"You have a new message from \".concat(formattedUserNames, \"!\"),\n                  __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 40\n                  }\n                }), {\n                  position: toast.POSITION.TOP_RIGHT\n                });\n                _this.props.loadAllUnreadMessages();\n              }\n            }\n          });\n          _this.stompClient.subscribe(\"/chat/login\", function (message) {\n            if (message.body) {\n              var parsedBody = JSON.parse(message.body);\n              _this.changeUserOnlineStatus(parsedBody);\n            }\n          });\n          _this.stompClient.subscribe(\"/chat/logout\", function (message) {\n            if (message.body) {\n              var parsedBody = JSON.parse(message.body);\n              _this.changeUserOnlineStatus(parsedBody);\n            }\n          });\n        }\n      }, function () {\n        toast.error(/*#__PURE__*/React.createElement(ToastComponent.errorToast, {\n          text: \"Lost connection to \".concat(_this.serverUrl, \". Refresh the page to reconnect.\"),\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }\n        }), {\n          position: toast.POSITION.TOP_RIGHT\n        });\n\n        //// Callback for automatically reconnecting to the server\n        // setTimeout(() => {\n        //     toast.error(<ToastComponent.errorToast text={`Lost connection to ${this.serverUrl}. Trying to reconnect.`} />, {\n        //         position: toast.POSITION.TOP_RIGHT\n        //     });\n        //     this.initializeWebSocketConnection();\n        // }, 10000);\n      });\n    };\n    _this.getAuthHeader = function () {\n      var token = localStorage.getItem(\"token\");\n      return token && token.length ? {\n        'Authorization': \"Bearer \".concat(token)\n      } : {};\n    };\n    _this.getAllMessages = function (chatUserId) {\n      _this.props.fetchAllMessages(chatUserId);\n    };\n    _this.loadAllChatFriends = function () {\n      var userId = userService.getUserId();\n      _this.props.loadAllChatFriends(userId);\n    };\n    _this.handleBlur = function (field) {\n      return function (event) {\n        _this.setState({\n          touched: _objectSpread({}, _this.state.touched, _defineProperty({}, field, true))\n        });\n      };\n    };\n    _this.validate = function (content) {\n      return {\n        content: content.length === 0\n      };\n    };\n    _this.changeHeight = function () {\n      var userBoxHeight = _this.state.userBoxHeight;\n      if (userBoxHeight === '') {\n        _this.setState({\n          userBoxHeight: 'toggle'\n        });\n      } else {\n        _this.setState({\n          userBoxHeight: ''\n        });\n      }\n    };\n    _this.changeChatBoxHeight = function () {\n      var chatBoxHeight = _this.state.chatBoxHeight;\n      if (chatBoxHeight === '') {\n        _this.setState({\n          chatBoxHeight: 'toggle-chat-container'\n        });\n      } else {\n        _this.setState({\n          chatBoxHeight: ''\n        });\n      }\n    };\n    _this.changeChatBoxDisplay = function () {\n      var chatBoxDisplay = _this.state.chatBoxDisplay;\n      if (chatBoxDisplay === '') {\n        _this.setState({\n          chatBoxDisplay: 'display-none'\n        });\n      } else {\n        _this.setState({\n          chatBoxDisplay: ''\n        });\n      }\n    };\n    _this.showUserChatBox = function (data, event) {\n      var id = data.id,\n        firstName = data.firstName,\n        lastName = data.lastName,\n        profilePicUrl = data.profilePicUrl;\n      var chatUserNameFormatted = userService.formatUsername(firstName, lastName, 18);\n      _this.setState({\n        chatUserId: id,\n        chatUserFirstName: firstName,\n        chatUserLastName: lastName,\n        chatUserNameFormatted: chatUserNameFormatted,\n        chatUserProfilePicUrl: profilePicUrl,\n        shouldScrollDown: true,\n        chatBoxDisplay: '',\n        chatBoxHeight: '',\n        content: ''\n      }, function () {\n        _this.getAllMessages(id);\n      });\n    };\n    _this.closeUserChatBox = function () {\n      _this.setState({\n        chatBoxDisplay: 'display-none'\n      });\n    };\n    _this.getOnlineUserCount = function () {\n      var usersCount = _this.props.friendsChatArr.filter(function (user) {\n        return user.online === true;\n      });\n      return usersCount.length;\n    };\n    _this.state = {\n      loggedInUserId: '',\n      chatUserId: '',\n      chatUserFirstName: '',\n      chatUserLastName: '',\n      chatUserNameFormatted: '',\n      chatUserProfilePicUrl: '',\n      userBoxHeight: 'toggle',\n      chatBoxHeight: '',\n      chatBoxDisplay: 'display-none',\n      content: '',\n      shouldScrollDown: false,\n      friendsArrLength: 0,\n      clientConnected: false,\n      touched: {\n        content: false\n      }\n    };\n    _this._isMounted = false;\n    _this.serverUrl = userService.getBaseUrl() + '/socket';\n    _this.stompClient = null;\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeHandler = _this.onChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmitHandler = _this.onSubmitHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showUserChatBox = _this.showUserChatBox.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeChatBoxDisplay = _this.changeChatBoxDisplay.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getAllMessages = _this.getAllMessages.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadAllChatFriends = _this.loadAllChatFriends.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(MessageBox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userId = userService.getUserId();\n      this.setState({\n        loggedInUserId: userId\n      });\n      this.initializeWebSocketConnection();\n      this.loadAllChatFriends();\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n      if (this.props.allMessagesArr !== prevProps.allMessagesArr) {\n        this.setState({\n          content: ''\n        }, function () {\n          if (_this2.state.shouldScrollDown) {\n            _this2.scrollDown();\n          } else {\n            _this2.setState({\n              shouldScrollDown: true\n            }, _this2.scrollTop());\n          }\n        });\n      }\n      if (this.props.friendsChatArr.length !== prevProps.friendsChatArr.length) {\n        this.setState({\n          chatBoxDisplay: 'display-none'\n        });\n      }\n      if (this.props.triggerMessageLoad !== prevProps.triggerMessageLoad) {\n        var userData = this.props.triggerMessageLoad;\n        this.showUserChatBox(userData);\n      }\n      var errorMessage = this.getErrorMessage(prevProps, prevState);\n      var successMessage = this.getSuccessMessage(prevProps, prevState);\n      if (errorMessage) {\n        toast.error(/*#__PURE__*/React.createElement(ToastComponent.errorToast, {\n          text: errorMessage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }\n        }), {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else if (successMessage) {\n        toast.success(/*#__PURE__*/React.createElement(ToastComponent.successToast, {\n          text: successMessage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 27\n          }\n        }), {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.stompClient.disconnect();\n      this._isMounted = false;\n    }\n  }, {\n    key: \"getSuccessMessage\",\n    value: function getSuccessMessage(prevProps, prevState) {\n      if (!this.props.fetchAllChatFriends.hasError && this.props.fetchAllChatFriends.message && this.props.fetchAllChatFriends !== prevProps.fetchAllChatFriends) {\n        return this.props.fetchAllChatFriends.message;\n      } else if (!this.props.fetchAllMessages.hasError && this.props.fetchAllMessages.message && this.props.fetchAllMessages !== prevProps.fetchAllMessages) {\n        return this.props.fetchAllMessages.message;\n      }\n      return null;\n    }\n  }, {\n    key: \"getErrorMessage\",\n    value: function getErrorMessage(prevProps, prevState) {\n      if (this.props.fetchAllChatFriends.hasError && prevProps.fetchAllChatFriends.error !== this.props.fetchAllChatFriends.error) {\n        return this.props.fetchAllChatFriends.message || 'Server Error';\n      } else if (this.props.fetchAllMessages.hasError && prevProps.fetchAllMessages.error !== this.props.fetchAllMessages.error) {\n        return this.props.fetchAllMessages.message || 'Server Error';\n      }\n      return null;\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(payload) {\n      this.stompClient.send(\"/app/message\", {}, JSON.stringify(payload));\n      this.setState({\n        content: ''\n      });\n    }\n  }, {\n    key: \"onSubmitHandler\",\n    value: function onSubmitHandler(event) {\n      event.preventDefault();\n      if (!this.canBeSubmitted()) {\n        return;\n      }\n      var _this$state = this.state,\n        toUserId = _this$state.chatUserId,\n        content = _this$state.content;\n      if (this.state.clientConnected) {\n        this.sendMessage({\n          toUserId: toUserId,\n          content: content\n        });\n      } else {\n        toast.error(/*#__PURE__*/React.createElement(ToastComponent.errorToast, {\n          text: \"StompClient is disconnected\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }\n        }), {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    }\n  }, {\n    key: \"onChangeHandler\",\n    value: function onChangeHandler(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"canBeSubmitted\",\n    value: function canBeSubmitted() {\n      var content = this.state.content;\n      var errors = this.validate(content);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      return !isDisabled;\n    }\n  }, {\n    key: \"scrollToBottom\",\n    value: function scrollToBottom() {\n      var e = document.getElementById('chat-content');\n      e.scrollTop = e.scrollHeight - e.getBoundingClientRect().height;\n    }\n  }, {\n    key: \"scrollTop\",\n    value: function scrollTop() {\n      var container = document.getElementById('chat-content');\n      container.scrollTop = 0;\n    }\n  }, {\n    key: \"scrollDown\",\n    value: function scrollDown() {\n      var container = document.getElementById('chat-content');\n      container.scrollTop = container.scrollHeight;\n    }\n  }, {\n    key: \"changeUserOnlineStatus\",\n    value: function changeUserOnlineStatus(webSocketMessage) {\n      var id = webSocketMessage.userId,\n        online = webSocketMessage.online;\n      this.props.updateUserStatus({\n        id: id,\n        online: online\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      if (!this.state.clientConnected) {\n        console.log('Connecting...');\n        return /*#__PURE__*/React.createElement(\"h1\", {\n          className: \"text-center pt-5 mt-5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 20\n          }\n        }, \"Connecting...\");\n      }\n      var content = this.state.content;\n      var errors = this.validate(content);\n      var isEnabled = !Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var displayButon = isEnabled ? '' : 'hidden';\n      var loggedInUserFirstName = userService.getFirstName();\n      var userBoxHeight = this.state.userBoxHeight;\n      var chatBoxHeight = this.state.chatBoxHeight;\n      var chatBoxDisplay = this.state.chatBoxDisplay;\n      var _this$state2 = this.state,\n        chatUserProfilePicUrl = _this$state2.chatUserProfilePicUrl,\n        chatUserNameFormatted = _this$state2.chatUserNameFormatted;\n      var imageClassUserPick = userService.getImageSize(chatUserProfilePicUrl);\n      var firstNameFormatted = userService.formatUsername(loggedInUserFirstName);\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"section\", {\n        className: \"messagebox-container \".concat(userBoxHeight),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"messagebox-header\",\n        onClick: this.changeHeight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"messagebox-chat-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-location-arrow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"chat-title\",\n        style: {\n          color: ' #333'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 25\n        }\n      }, \"Chat \\u2022 \", this.getOnlineUserCount())), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"messagebox-friendsChatArr-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }\n      }, this.props.friendsChatArr.map(function (friend) {\n        return /*#__PURE__*/React.createElement(FriendChatBox, Object.assign({\n          key: friend.id,\n          showUserChatBox: _this3.showUserChatBox\n        }, friend, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 29\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"chat-container \".concat(chatBoxHeight, \" \").concat(chatBoxDisplay),\n        id: \"chat-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-friend-container\",\n        onClick: this.changeChatBoxHeight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-friend-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: imageClassUserPick,\n        src: chatUserProfilePicUrl,\n        alt: \"bender\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-username-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"chat-username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 29\n        }\n      }, chatUserNameFormatted))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"close-button-container\",\n        onClick: this.closeUserChatBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btn chat-uiButtonGroup chat-fbPhotoCurationControl  chat-delete-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-times\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 114\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-content\",\n        id: \"chat-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 25\n        }\n      }, this.props.allMessagesArr.map(function (message) {\n        return /*#__PURE__*/React.createElement(FriendMessage, Object.assign({\n          key: message.id\n        }, message, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 33\n          }\n        }));\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-area-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.onSubmitHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        id: \"chat-textarea-form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n        name: \"content\",\n        id: \"content\",\n        className: \"chat-textarea\",\n        value: this.state.content,\n        onChange: this.onChangeHandler,\n        onBlur: this.handleBlur('content'),\n        \"aria-describedby\": \"contentHelp\",\n        placeholder: \"Type your message, \".concat(firstNameFormatted, \"?\"),\n        maxRows: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        disabled: !isEnabled,\n        style: {\n          'visibility': \"\".concat(displayButon)\n        },\n        type: \"submit\",\n        className: \"btn fas fa-location-arrow App-button-primary send-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 45\n        }\n      })))))))));\n    }\n  }]);\n  return MessageBox;\n}(Component);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    friendsChatArr: state.fetchAllChatFriends.friendsChatArr,\n    fetchAllChatFriends: state.fetchAllChatFriends,\n    allMessagesArr: state.fetchAllMessages.allMessagesArr,\n    fetchAllMessages: state.fetchAllMessages,\n    triggerMessageLoad: state.triggerMessageLoad\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loadAllChatFriends: function loadAllChatFriends(userId) {\n      dispatch(fetchAllChatFriendsAction(userId));\n    },\n    fetchAllMessages: function fetchAllMessages(chatUserId) {\n      dispatch(fetchAllMessagesAction(chatUserId));\n    },\n    updateUserStatus: function updateUserStatus(userData) {\n      dispatch(updateUserStatusAction(userData));\n    },\n    addMessage: function addMessage(messageBody) {\n      dispatch(addMessageAction(messageBody));\n    },\n    loadAllUnreadMessages: function loadAllUnreadMessages() {\n      dispatch(fetchAllUnreadMessagesAction());\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBox);","map":{"version":3,"names":["React","Component","Fragment","userService","toast","ToastComponent","TextareaAutosize","FriendChatBox","FriendMessage","connect","fetchAllChatFriendsAction","updateUserStatusAction","fetchAllMessagesAction","addMessageAction","fetchAllUnreadMessagesAction","Stomp","SockJS","MessageBox","_Component","_inherits","props","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","initializeWebSocketConnection","ws","serverUrl","stompClient","over","headers","getAuthHeader","frame","_isMounted","setState","clientConnected","subscribe","message","body","messageBody","JSON","parse","fromUserId","state","chatUserId","getUserId","addMessage","formattedUserNames","formatUsername","fromUserFirstName","fromUserLastName","info","createElement","infoToast","text","concat","__self","_assertThisInitialized","__source","fileName","_jsxFileName","lineNumber","columnNumber","position","POSITION","TOP_RIGHT","loadAllUnreadMessages","parsedBody","changeUserOnlineStatus","error","errorToast","token","localStorage","getItem","length","getAllMessages","fetchAllMessages","loadAllChatFriends","userId","handleBlur","field","event","touched","_objectSpread","_defineProperty","validate","content","changeHeight","userBoxHeight","changeChatBoxHeight","chatBoxHeight","changeChatBoxDisplay","chatBoxDisplay","showUserChatBox","data","id","firstName","lastName","profilePicUrl","chatUserNameFormatted","chatUserFirstName","chatUserLastName","chatUserProfilePicUrl","shouldScrollDown","closeUserChatBox","getOnlineUserCount","usersCount","friendsChatArr","filter","user","online","loggedInUserId","friendsArrLength","getBaseUrl","bind","onChangeHandler","onSubmitHandler","_createClass","key","value","componentDidMount","componentDidUpdate","prevProps","prevState","_this2","allMessagesArr","scrollDown","scrollTop","triggerMessageLoad","userData","errorMessage","getErrorMessage","successMessage","getSuccessMessage","success","successToast","componentWillUnmount","disconnect","fetchAllChatFriends","hasError","sendMessage","payload","send","stringify","preventDefault","canBeSubmitted","_this$state","toUserId","target","name","errors","isDisabled","Object","keys","some","x","scrollToBottom","e","document","getElementById","scrollHeight","getBoundingClientRect","height","container","webSocketMessage","updateUserStatus","render","_this3","console","log","className","isEnabled","displayButon","loggedInUserFirstName","getFirstName","_this$state2","imageClassUserPick","getImageSize","firstNameFormatted","onClick","style","color","map","friend","assign","src","alt","onSubmit","onChange","onBlur","placeholder","maxRows","disabled","type","mapStateToProps","mapDispatchToProps","dispatch"],"sources":["C:/Users/Administrator/Downloads/Alumani/Client/src/components/home/MessageBox.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { userService } from '../../infrastructure';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport FriendChatBox from './FriendChatBox';\nimport FriendMessage from './FriendMessage';\nimport '../user/css/UserAllPage.css';\nimport './css/MessageBox.css';\nimport { connect } from 'react-redux';\nimport { fetchAllChatFriendsAction, updateUserStatusAction } from '../../store/actions/userActions';\nimport { fetchAllMessagesAction, addMessageAction, fetchAllUnreadMessagesAction } from '../../store/actions/messageActions';\n\nimport Stomp from \"stompjs\";\nimport SockJS from \"sockjs-client\";\n\nclass MessageBox extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            loggedInUserId: '',\n            chatUserId: '',\n            chatUserFirstName: '',\n            chatUserLastName: '',\n            chatUserNameFormatted: '',\n            chatUserProfilePicUrl: '',\n            userBoxHeight: 'toggle',\n            chatBoxHeight: '',\n            chatBoxDisplay: 'display-none',\n            content: '',\n            shouldScrollDown: false,\n            friendsArrLength: 0,\n            clientConnected: false,\n            touched: {\n                content: false,\n            }\n        };\n\n        this._isMounted = false;\n\n        this.serverUrl = userService.getBaseUrl() + '/socket'\n        this.stompClient = null;\n\n        this.handleBlur = this.handleBlur.bind(this);\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\n        this.showUserChatBox = this.showUserChatBox.bind(this);\n        this.changeChatBoxDisplay = this.changeChatBoxDisplay.bind(this);\n        this.getAllMessages = this.getAllMessages.bind(this);\n        this.loadAllChatFriends = this.loadAllChatFriends.bind(this);\n    }\n\n    componentDidMount() {\n        const userId = userService.getUserId();\n        this.setState({\n            loggedInUserId: userId,\n        });\n\n        this.initializeWebSocketConnection();\n        this.loadAllChatFriends();\n\n        this._isMounted = true;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.allMessagesArr !== prevProps.allMessagesArr) {\n            this.setState({\n                content: '',\n            }, () => {\n                if (this.state.shouldScrollDown) {\n                    this.scrollDown();\n                } else {\n                    this.setState({ shouldScrollDown: true }, this.scrollTop())\n                }\n            });\n        }\n\n        if (this.props.friendsChatArr.length !== prevProps.friendsChatArr.length) {\n            this.setState({\n                chatBoxDisplay: 'display-none'\n            })\n        }\n\n        if (this.props.triggerMessageLoad !== prevProps.triggerMessageLoad) {\n            const userData = this.props.triggerMessageLoad;\n            this.showUserChatBox(userData)\n        }\n\n        const errorMessage = this.getErrorMessage(prevProps, prevState);\n        const successMessage = this.getSuccessMessage(prevProps, prevState)\n\n        if (errorMessage) {\n            toast.error(<ToastComponent.errorToast text={errorMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        } else if (successMessage) {\n            toast.success(<ToastComponent.successToast text={successMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        this.stompClient.disconnect();\n        this._isMounted = false;\n    }\n\n    getSuccessMessage(prevProps, prevState) {\n        if (!this.props.fetchAllChatFriends.hasError && this.props.fetchAllChatFriends.message && this.props.fetchAllChatFriends !== prevProps.fetchAllChatFriends) {\n            return this.props.fetchAllChatFriends.message;\n        }\n        else if (!this.props.fetchAllMessages.hasError && this.props.fetchAllMessages.message && this.props.fetchAllMessages !== prevProps.fetchAllMessages) {\n            return this.props.fetchAllMessages.message;\n        }\n        return null;\n    }\n\n    getErrorMessage(prevProps, prevState) {\n        if (this.props.fetchAllChatFriends.hasError && prevProps.fetchAllChatFriends.error !== this.props.fetchAllChatFriends.error) {\n            return this.props.fetchAllChatFriends.message || 'Server Error';\n        }\n        else if (this.props.fetchAllMessages.hasError && prevProps.fetchAllMessages.error !== this.props.fetchAllMessages.error) {\n            return this.props.fetchAllMessages.message || 'Server Error';\n        }\n\n        return null;\n    }\n\n    initializeWebSocketConnection = () => {\n        const ws = new SockJS(this.serverUrl);\n        this.stompClient = Stomp.over(ws);\n        const headers = this.getAuthHeader();\n\n        this.stompClient.connect(headers, (frame) => {\n            if (this._isMounted) {\n                this.setState({ clientConnected: true });\n                this.stompClient.subscribe(\"/user/queue/position-update\", (message) => {\n                    if (message.body) {\n                        const messageBody = JSON.parse(message.body);\n                        if (this._isMounted && (messageBody.fromUserId === this.state.chatUserId || messageBody.fromUserId === userService.getUserId())) {\n                            this.props.addMessage(messageBody)\n                        }\n\n                        if (messageBody.fromUserId !== userService.getUserId()) {\n                            const formattedUserNames = userService.formatUsername(messageBody.fromUserFirstName, messageBody.fromUserLastName)\n\n                            toast.info(<ToastComponent.infoToast text={`You have a new message from ${formattedUserNames}!`} />, {\n                                position: toast.POSITION.TOP_RIGHT\n                            });\n\n                            this.props.loadAllUnreadMessages();\n                        }\n                    }\n                });\n\n                this.stompClient.subscribe(\"/chat/login\", (message) => {\n                    if (message.body) {\n                        const parsedBody = JSON.parse(message.body);\n                        this.changeUserOnlineStatus(parsedBody);\n                    }\n                });\n\n                this.stompClient.subscribe(\"/chat/logout\", (message) => {\n                    if (message.body) {\n                        const parsedBody = JSON.parse(message.body);\n                        this.changeUserOnlineStatus(parsedBody);\n                    }\n                });\n            }\n        }, () => {\n            toast.error(<ToastComponent.errorToast text={`Lost connection to ${this.serverUrl}. Refresh the page to reconnect.`} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n\n            //// Callback for automatically reconnecting to the server\n            // setTimeout(() => {\n            //     toast.error(<ToastComponent.errorToast text={`Lost connection to ${this.serverUrl}. Trying to reconnect.`} />, {\n            //         position: toast.POSITION.TOP_RIGHT\n            //     });\n            //     this.initializeWebSocketConnection();\n            // }, 10000);\n        });\n    }\n\n    sendMessage(payload) {\n        this.stompClient.send(\"/app/message\", {}, JSON.stringify(payload));\n        this.setState({ content: '' })\n    }\n\n    getAuthHeader = () => {\n        const token = localStorage.getItem(\"token\");\n        return (token && token.length)\n            ? { 'Authorization': `Bearer ${token}` }\n            : {}\n    }\n\n    getAllMessages = (chatUserId) => {\n        this.props.fetchAllMessages(chatUserId);\n    }\n\n    loadAllChatFriends = () => {\n        const userId = userService.getUserId();\n        this.props.loadAllChatFriends(userId);\n    }\n\n    onSubmitHandler(event) {\n        event.preventDefault();\n\n        if (!this.canBeSubmitted()) {\n            return;\n        }\n\n        const { chatUserId: toUserId, content } = this.state;\n\n        if (this.state.clientConnected) {\n            this.sendMessage({ toUserId, content });\n        } else {\n            toast.error(<ToastComponent.errorToast text={`StompClient is disconnected`} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n    }\n\n    onChangeHandler(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleBlur = (field) => (event) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true }\n        });\n    }\n\n    canBeSubmitted() {\n        const { content } = this.state;\n        const errors = this.validate(content);\n        const isDisabled = Object.keys(errors).some(x => errors[x])\n        return !isDisabled;\n    }\n\n    validate = (content) => {\n        return {\n            content: content.length === 0,\n        }\n    }\n\n    changeHeight = () => {\n        const userBoxHeight = this.state.userBoxHeight;\n        if (userBoxHeight === '') {\n            this.setState({ userBoxHeight: 'toggle' })\n        } else {\n            this.setState({ userBoxHeight: '' })\n        }\n    }\n\n    changeChatBoxHeight = () => {\n        const chatBoxHeight = this.state.chatBoxHeight;\n        if (chatBoxHeight === '') {\n            this.setState({ chatBoxHeight: 'toggle-chat-container' })\n        } else {\n            this.setState({ chatBoxHeight: '' })\n        }\n    }\n\n    changeChatBoxDisplay = () => {\n        const chatBoxDisplay = this.state.chatBoxDisplay;\n        if (chatBoxDisplay === '') {\n            this.setState({ chatBoxDisplay: 'display-none' })\n        } else {\n            this.setState({ chatBoxDisplay: '' })\n        }\n    }\n\n    showUserChatBox = (data, event) => {\n        const { id, firstName, lastName, profilePicUrl } = data\n        let chatUserNameFormatted = userService.formatUsername(firstName, lastName, 18)\n        this.setState({\n            chatUserId: id,\n            chatUserFirstName: firstName,\n            chatUserLastName: lastName,\n            chatUserNameFormatted,\n            chatUserProfilePicUrl: profilePicUrl,\n            shouldScrollDown: true,\n            chatBoxDisplay: '',\n            chatBoxHeight: '',\n            content: '',\n        }, () => {\n            this.getAllMessages(id);\n        })\n    }\n\n    closeUserChatBox = () => {\n        this.setState({ chatBoxDisplay: 'display-none' })\n    }\n\n    scrollToBottom() {\n        const e = document.getElementById('chat-content');\n        e.scrollTop = e.scrollHeight - e.getBoundingClientRect().height;\n    }\n\n    scrollTop() {\n        const container = document.getElementById('chat-content');\n        container.scrollTop = 0;\n    }\n\n    scrollDown() {\n        const container = document.getElementById('chat-content');\n        container.scrollTop = container.scrollHeight\n    }\n\n    getOnlineUserCount = () => {\n        let usersCount = this.props.friendsChatArr.filter(user => { return user.online === true });\n        return usersCount.length;\n    }\n\n    changeUserOnlineStatus(webSocketMessage) {\n        const { userId: id, online } = webSocketMessage;\n        this.props.updateUserStatus({ id, online });\n    }\n\n    render() {\n        if (!this.state.clientConnected) {\n            console.log('Connecting...')\n            return <h1 className=\"text-center pt-5 mt-5\">Connecting...</h1>\n        }\n\n        const { content } = this.state;\n        const errors = this.validate(content);\n        const isEnabled = !Object.keys(errors).some(x => errors[x]);\n        const displayButon = isEnabled ? '' : 'hidden';\n        const loggedInUserFirstName = userService.getFirstName();\n        const userBoxHeight = this.state.userBoxHeight;\n        const chatBoxHeight = this.state.chatBoxHeight;\n        const chatBoxDisplay = this.state.chatBoxDisplay;\n\n        const { chatUserProfilePicUrl, chatUserNameFormatted } = this.state;\n        const imageClassUserPick = userService.getImageSize(chatUserProfilePicUrl);\n        const firstNameFormatted = userService.formatUsername(loggedInUserFirstName);\n\n        return (\n            <Fragment>\n                <section className={`messagebox-container ${userBoxHeight}`} >\n                    <div className=\"messagebox-header\" onClick={this.changeHeight}>\n                        <div className=\"messagebox-chat-icon\">\n                            <i className=\"fas fa-location-arrow\"></i>\n                        </div>\n                        <h4 className=\"chat-title\" style={{ color: ' #333' }}>\n                            Chat &bull; {this.getOnlineUserCount()}\n                        </h4>\n                    </div>\n                    <div className=\"messagebox-friendsChatArr-wrapper\">\n\n                        {this.props.friendsChatArr.map((friend) =>\n                            <FriendChatBox\n                                key={friend.id}\n                                showUserChatBox={this.showUserChatBox}\n                                {...friend}\n                            />\n                        )}\n                    </div>\n                </section>\n                <section className={`chat-container ${chatBoxHeight} ${chatBoxDisplay}`} id=\"chat-container\">\n                    <div className=\"chat-friend-container\" onClick={this.changeChatBoxHeight}>\n                        <div className=\"chat-friend-image\">\n                            <img className={imageClassUserPick} src={chatUserProfilePicUrl} alt=\"bender\" />\n                        </div>\n                        <div className=\"chat-username-container\" >\n                            <p className=\"chat-username\">{chatUserNameFormatted}</p>\n                        </div>\n                    </div>\n\n                    <div className=\"close-button-container\" onClick={this.closeUserChatBox}>\n                        <div className=\"btn chat-uiButtonGroup chat-fbPhotoCurationControl  chat-delete-button\" ><i className=\"fas fa-times\"></i></div>\n                    </div>\n\n                    <div className=\"content-wrapper\">\n\n                        <div className=\"chat-content\" id=\"chat-content\">\n                            {this.props.allMessagesArr.map((message) =>\n                                <FriendMessage\n                                    key={message.id}\n                                    {...message}\n                                />\n                            )}\n                        </div>\n                        <div className=\"chat-footer\">\n                            <div className=\"chat-input-group\">\n                                <div className=\"chat-area-container\">\n                                    <form onSubmit={this.onSubmitHandler}>\n                                        <div className=\"\" id=\"chat-textarea-form-group\">\n                                            <TextareaAutosize\n                                                name=\"content\"\n                                                id=\"content\"\n                                                className=\"chat-textarea\"\n                                                value={this.state.content}\n                                                onChange={this.onChangeHandler}\n                                                onBlur={this.handleBlur('content')}\n                                                aria-describedby=\"contentHelp\"\n                                                placeholder={`Type your message, ${firstNameFormatted}?`}\n                                                maxRows={6}\n                                            >\n                                            </TextareaAutosize>\n                                        </div>\n\n                                        <div className=\"text-center\">\n                                            <button disabled={!isEnabled} style={{ 'visibility': `${displayButon}` }} type=\"submit\" className=\"btn fas fa-location-arrow App-button-primary send-btn\"></button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </section>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        friendsChatArr: state.fetchAllChatFriends.friendsChatArr,\n        fetchAllChatFriends: state.fetchAllChatFriends,\n\n        allMessagesArr: state.fetchAllMessages.allMessagesArr,\n        fetchAllMessages: state.fetchAllMessages,\n\n        triggerMessageLoad: state.triggerMessageLoad,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadAllChatFriends: (userId) => { dispatch(fetchAllChatFriendsAction(userId)) },\n        fetchAllMessages: (chatUserId) => { dispatch(fetchAllMessagesAction(chatUserId)) },\n        updateUserStatus: (userData) => { dispatch(updateUserStatusAction(userData)) },\n        addMessage: (messageBody) => { dispatch(addMessageAction(messageBody)) },\n        loadAllUnreadMessages: () => { dispatch(fetchAllUnreadMessagesAction()) },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBox);"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,cAAc,QAAQ,WAAW;AAC1C,OAAOC,gBAAgB,MAAM,yBAAyB;AACtD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,6BAA6B;AACpC,OAAO,sBAAsB;AAC7B,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,yBAAyB,EAAEC,sBAAsB,QAAQ,iCAAiC;AACnG,SAASC,sBAAsB,EAAEC,gBAAgB,EAAEC,4BAA4B,QAAQ,oCAAoC;AAE3H,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,eAAe;AAAC,IAE7BC,UAAU,0BAAAC,UAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,UAAA;EACZ,SAAAD,WAAYG,KAAK,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAL,UAAA;IACfI,KAAA,GAAAE,0BAAA,OAAAC,eAAA,CAAAP,UAAA,EAAAQ,IAAA,OAAML,KAAK;IAACC,KAAA,CA+GhBK,6BAA6B,GAAG,YAAM;MAClC,IAAMC,EAAE,GAAG,IAAIX,MAAM,CAACK,KAAA,CAAKO,SAAS,CAAC;MACrCP,KAAA,CAAKQ,WAAW,GAAGd,KAAK,CAACe,IAAI,CAACH,EAAE,CAAC;MACjC,IAAMI,OAAO,GAAGV,KAAA,CAAKW,aAAa,CAAC,CAAC;MAEpCX,KAAA,CAAKQ,WAAW,CAACpB,OAAO,CAACsB,OAAO,EAAE,UAACE,KAAK,EAAK;QACzC,IAAIZ,KAAA,CAAKa,UAAU,EAAE;UACjBb,KAAA,CAAKc,QAAQ,CAAC;YAAEC,eAAe,EAAE;UAAK,CAAC,CAAC;UACxCf,KAAA,CAAKQ,WAAW,CAACQ,SAAS,CAAC,6BAA6B,EAAE,UAACC,OAAO,EAAK;YACnE,IAAIA,OAAO,CAACC,IAAI,EAAE;cACd,IAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACJ,OAAO,CAACC,IAAI,CAAC;cAC5C,IAAIlB,KAAA,CAAKa,UAAU,KAAKM,WAAW,CAACG,UAAU,KAAKtB,KAAA,CAAKuB,KAAK,CAACC,UAAU,IAAIL,WAAW,CAACG,UAAU,KAAKxC,WAAW,CAAC2C,SAAS,CAAC,CAAC,CAAC,EAAE;gBAC7HzB,KAAA,CAAKD,KAAK,CAAC2B,UAAU,CAACP,WAAW,CAAC;cACtC;cAEA,IAAIA,WAAW,CAACG,UAAU,KAAKxC,WAAW,CAAC2C,SAAS,CAAC,CAAC,EAAE;gBACpD,IAAME,kBAAkB,GAAG7C,WAAW,CAAC8C,cAAc,CAACT,WAAW,CAACU,iBAAiB,EAAEV,WAAW,CAACW,gBAAgB,CAAC;gBAElH/C,KAAK,CAACgD,IAAI,cAACpD,KAAA,CAAAqD,aAAA,CAAChD,cAAc,CAACiD,SAAS;kBAACC,IAAI,iCAAAC,MAAA,CAAiCR,kBAAkB,MAAI;kBAAAS,MAAA,EAAAC,sBAAA,CAAAA,sBAAA,CAAArC,KAAA;kBAAAsC,QAAA;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA;gBAAA,CAAE,CAAC,EAAE;kBACjGC,QAAQ,EAAE5D,KAAK,CAAC6D,QAAQ,CAACC;gBAC7B,CAAC,CAAC;gBAEF7C,KAAA,CAAKD,KAAK,CAAC+C,qBAAqB,CAAC,CAAC;cACtC;YACJ;UACJ,CAAC,CAAC;UAEF9C,KAAA,CAAKQ,WAAW,CAACQ,SAAS,CAAC,aAAa,EAAE,UAACC,OAAO,EAAK;YACnD,IAAIA,OAAO,CAACC,IAAI,EAAE;cACd,IAAM6B,UAAU,GAAG3B,IAAI,CAACC,KAAK,CAACJ,OAAO,CAACC,IAAI,CAAC;cAC3ClB,KAAA,CAAKgD,sBAAsB,CAACD,UAAU,CAAC;YAC3C;UACJ,CAAC,CAAC;UAEF/C,KAAA,CAAKQ,WAAW,CAACQ,SAAS,CAAC,cAAc,EAAE,UAACC,OAAO,EAAK;YACpD,IAAIA,OAAO,CAACC,IAAI,EAAE;cACd,IAAM6B,UAAU,GAAG3B,IAAI,CAACC,KAAK,CAACJ,OAAO,CAACC,IAAI,CAAC;cAC3ClB,KAAA,CAAKgD,sBAAsB,CAACD,UAAU,CAAC;YAC3C;UACJ,CAAC,CAAC;QACN;MACJ,CAAC,EAAE,YAAM;QACLhE,KAAK,CAACkE,KAAK,cAACtE,KAAA,CAAAqD,aAAA,CAAChD,cAAc,CAACkE,UAAU;UAAChB,IAAI,wBAAAC,MAAA,CAAwBnC,KAAA,CAAKO,SAAS,qCAAmC;UAAA6B,MAAA,EAAAC,sBAAA,CAAAA,sBAAA,CAAArC,KAAA;UAAAsC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,CAAE,CAAC,EAAE;UACrHC,QAAQ,EAAE5D,KAAK,CAAC6D,QAAQ,CAACC;QAC7B,CAAC,CAAC;;QAEF;QACA;QACA;QACA;QACA;QACA;QACA;MACJ,CAAC,CAAC;IACN,CAAC;IAAA7C,KAAA,CAODW,aAAa,GAAG,YAAM;MAClB,IAAMwC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,OAAQF,KAAK,IAAIA,KAAK,CAACG,MAAM,GACvB;QAAE,eAAe,YAAAnB,MAAA,CAAYgB,KAAK;MAAG,CAAC,GACtC,CAAC,CAAC;IACZ,CAAC;IAAAnD,KAAA,CAEDuD,cAAc,GAAG,UAAC/B,UAAU,EAAK;MAC7BxB,KAAA,CAAKD,KAAK,CAACyD,gBAAgB,CAAChC,UAAU,CAAC;IAC3C,CAAC;IAAAxB,KAAA,CAEDyD,kBAAkB,GAAG,YAAM;MACvB,IAAMC,MAAM,GAAG5E,WAAW,CAAC2C,SAAS,CAAC,CAAC;MACtCzB,KAAA,CAAKD,KAAK,CAAC0D,kBAAkB,CAACC,MAAM,CAAC;IACzC,CAAC;IAAA1D,KAAA,CA0BD2D,UAAU,GAAG,UAACC,KAAK;MAAA,OAAK,UAACC,KAAK,EAAK;QAC/B7D,KAAA,CAAKc,QAAQ,CAAC;UACVgD,OAAO,EAAAC,aAAA,KAAO/D,KAAA,CAAKuB,KAAK,CAACuC,OAAO,EAAAE,eAAA,KAAGJ,KAAK,EAAG,IAAI;QACnD,CAAC,CAAC;MACN,CAAC;IAAA;IAAA5D,KAAA,CASDiE,QAAQ,GAAG,UAACC,OAAO,EAAK;MACpB,OAAO;QACHA,OAAO,EAAEA,OAAO,CAACZ,MAAM,KAAK;MAChC,CAAC;IACL,CAAC;IAAAtD,KAAA,CAEDmE,YAAY,GAAG,YAAM;MACjB,IAAMC,aAAa,GAAGpE,KAAA,CAAKuB,KAAK,CAAC6C,aAAa;MAC9C,IAAIA,aAAa,KAAK,EAAE,EAAE;QACtBpE,KAAA,CAAKc,QAAQ,CAAC;UAAEsD,aAAa,EAAE;QAAS,CAAC,CAAC;MAC9C,CAAC,MAAM;QACHpE,KAAA,CAAKc,QAAQ,CAAC;UAAEsD,aAAa,EAAE;QAAG,CAAC,CAAC;MACxC;IACJ,CAAC;IAAApE,KAAA,CAEDqE,mBAAmB,GAAG,YAAM;MACxB,IAAMC,aAAa,GAAGtE,KAAA,CAAKuB,KAAK,CAAC+C,aAAa;MAC9C,IAAIA,aAAa,KAAK,EAAE,EAAE;QACtBtE,KAAA,CAAKc,QAAQ,CAAC;UAAEwD,aAAa,EAAE;QAAwB,CAAC,CAAC;MAC7D,CAAC,MAAM;QACHtE,KAAA,CAAKc,QAAQ,CAAC;UAAEwD,aAAa,EAAE;QAAG,CAAC,CAAC;MACxC;IACJ,CAAC;IAAAtE,KAAA,CAEDuE,oBAAoB,GAAG,YAAM;MACzB,IAAMC,cAAc,GAAGxE,KAAA,CAAKuB,KAAK,CAACiD,cAAc;MAChD,IAAIA,cAAc,KAAK,EAAE,EAAE;QACvBxE,KAAA,CAAKc,QAAQ,CAAC;UAAE0D,cAAc,EAAE;QAAe,CAAC,CAAC;MACrD,CAAC,MAAM;QACHxE,KAAA,CAAKc,QAAQ,CAAC;UAAE0D,cAAc,EAAE;QAAG,CAAC,CAAC;MACzC;IACJ,CAAC;IAAAxE,KAAA,CAEDyE,eAAe,GAAG,UAACC,IAAI,EAAEb,KAAK,EAAK;MAAA,IACvBc,EAAE,GAAyCD,IAAI,CAA/CC,EAAE;QAAEC,SAAS,GAA8BF,IAAI,CAA3CE,SAAS;QAAEC,QAAQ,GAAoBH,IAAI,CAAhCG,QAAQ;QAAEC,aAAa,GAAKJ,IAAI,CAAtBI,aAAa;MAC9C,IAAIC,qBAAqB,GAAGjG,WAAW,CAAC8C,cAAc,CAACgD,SAAS,EAAEC,QAAQ,EAAE,EAAE,CAAC;MAC/E7E,KAAA,CAAKc,QAAQ,CAAC;QACVU,UAAU,EAAEmD,EAAE;QACdK,iBAAiB,EAAEJ,SAAS;QAC5BK,gBAAgB,EAAEJ,QAAQ;QAC1BE,qBAAqB,EAArBA,qBAAqB;QACrBG,qBAAqB,EAAEJ,aAAa;QACpCK,gBAAgB,EAAE,IAAI;QACtBX,cAAc,EAAE,EAAE;QAClBF,aAAa,EAAE,EAAE;QACjBJ,OAAO,EAAE;MACb,CAAC,EAAE,YAAM;QACLlE,KAAA,CAAKuD,cAAc,CAACoB,EAAE,CAAC;MAC3B,CAAC,CAAC;IACN,CAAC;IAAA3E,KAAA,CAEDoF,gBAAgB,GAAG,YAAM;MACrBpF,KAAA,CAAKc,QAAQ,CAAC;QAAE0D,cAAc,EAAE;MAAe,CAAC,CAAC;IACrD,CAAC;IAAAxE,KAAA,CAiBDqF,kBAAkB,GAAG,YAAM;MACvB,IAAIC,UAAU,GAAGtF,KAAA,CAAKD,KAAK,CAACwF,cAAc,CAACC,MAAM,CAAC,UAAAC,IAAI,EAAI;QAAE,OAAOA,IAAI,CAACC,MAAM,KAAK,IAAI;MAAC,CAAC,CAAC;MAC1F,OAAOJ,UAAU,CAAChC,MAAM;IAC5B,CAAC;IAxSGtD,KAAA,CAAKuB,KAAK,GAAG;MACToE,cAAc,EAAE,EAAE;MAClBnE,UAAU,EAAE,EAAE;MACdwD,iBAAiB,EAAE,EAAE;MACrBC,gBAAgB,EAAE,EAAE;MACpBF,qBAAqB,EAAE,EAAE;MACzBG,qBAAqB,EAAE,EAAE;MACzBd,aAAa,EAAE,QAAQ;MACvBE,aAAa,EAAE,EAAE;MACjBE,cAAc,EAAE,cAAc;MAC9BN,OAAO,EAAE,EAAE;MACXiB,gBAAgB,EAAE,KAAK;MACvBS,gBAAgB,EAAE,CAAC;MACnB7E,eAAe,EAAE,KAAK;MACtB+C,OAAO,EAAE;QACLI,OAAO,EAAE;MACb;IACJ,CAAC;IAEDlE,KAAA,CAAKa,UAAU,GAAG,KAAK;IAEvBb,KAAA,CAAKO,SAAS,GAAGzB,WAAW,CAAC+G,UAAU,CAAC,CAAC,GAAG,SAAS;IACrD7F,KAAA,CAAKQ,WAAW,GAAG,IAAI;IAEvBR,KAAA,CAAK2D,UAAU,GAAG3D,KAAA,CAAK2D,UAAU,CAACmC,IAAI,CAAAzD,sBAAA,CAAAA,sBAAA,CAAArC,KAAA,EAAK,CAAC;IAC5CA,KAAA,CAAK+F,eAAe,GAAG/F,KAAA,CAAK+F,eAAe,CAACD,IAAI,CAAAzD,sBAAA,CAAAA,sBAAA,CAAArC,KAAA,EAAK,CAAC;IACtDA,KAAA,CAAKgG,eAAe,GAAGhG,KAAA,CAAKgG,eAAe,CAACF,IAAI,CAAAzD,sBAAA,CAAAA,sBAAA,CAAArC,KAAA,EAAK,CAAC;IACtDA,KAAA,CAAKyE,eAAe,GAAGzE,KAAA,CAAKyE,eAAe,CAACqB,IAAI,CAAAzD,sBAAA,CAAAA,sBAAA,CAAArC,KAAA,EAAK,CAAC;IACtDA,KAAA,CAAKuE,oBAAoB,GAAGvE,KAAA,CAAKuE,oBAAoB,CAACuB,IAAI,CAAAzD,sBAAA,CAAAA,sBAAA,CAAArC,KAAA,EAAK,CAAC;IAChEA,KAAA,CAAKuD,cAAc,GAAGvD,KAAA,CAAKuD,cAAc,CAACuC,IAAI,CAAAzD,sBAAA,CAAAA,sBAAA,CAAArC,KAAA,EAAK,CAAC;IACpDA,KAAA,CAAKyD,kBAAkB,GAAGzD,KAAA,CAAKyD,kBAAkB,CAACqC,IAAI,CAAAzD,sBAAA,CAAAA,sBAAA,CAAArC,KAAA,EAAK,CAAC;IAAC,OAAAA,KAAA;EACjE;EAACiG,YAAA,CAAArG,UAAA;IAAAsG,GAAA;IAAAC,KAAA,WAAAC,kBAAA,EAEmB;MAChB,IAAM1C,MAAM,GAAG5E,WAAW,CAAC2C,SAAS,CAAC,CAAC;MACtC,IAAI,CAACX,QAAQ,CAAC;QACV6E,cAAc,EAAEjC;MACpB,CAAC,CAAC;MAEF,IAAI,CAACrD,6BAA6B,CAAC,CAAC;MACpC,IAAI,CAACoD,kBAAkB,CAAC,CAAC;MAEzB,IAAI,CAAC5C,UAAU,GAAG,IAAI;IAC1B;EAAC;IAAAqF,GAAA;IAAAC,KAAA,WAAAE,mBAEkBC,SAAS,EAAEC,SAAS,EAAE;MAAA,IAAAC,MAAA;MACrC,IAAI,IAAI,CAACzG,KAAK,CAAC0G,cAAc,KAAKH,SAAS,CAACG,cAAc,EAAE;QACxD,IAAI,CAAC3F,QAAQ,CAAC;UACVoD,OAAO,EAAE;QACb,CAAC,EAAE,YAAM;UACL,IAAIsC,MAAI,CAACjF,KAAK,CAAC4D,gBAAgB,EAAE;YAC7BqB,MAAI,CAACE,UAAU,CAAC,CAAC;UACrB,CAAC,MAAM;YACHF,MAAI,CAAC1F,QAAQ,CAAC;cAAEqE,gBAAgB,EAAE;YAAK,CAAC,EAAEqB,MAAI,CAACG,SAAS,CAAC,CAAC,CAAC;UAC/D;QACJ,CAAC,CAAC;MACN;MAEA,IAAI,IAAI,CAAC5G,KAAK,CAACwF,cAAc,CAACjC,MAAM,KAAKgD,SAAS,CAACf,cAAc,CAACjC,MAAM,EAAE;QACtE,IAAI,CAACxC,QAAQ,CAAC;UACV0D,cAAc,EAAE;QACpB,CAAC,CAAC;MACN;MAEA,IAAI,IAAI,CAACzE,KAAK,CAAC6G,kBAAkB,KAAKN,SAAS,CAACM,kBAAkB,EAAE;QAChE,IAAMC,QAAQ,GAAG,IAAI,CAAC9G,KAAK,CAAC6G,kBAAkB;QAC9C,IAAI,CAACnC,eAAe,CAACoC,QAAQ,CAAC;MAClC;MAEA,IAAMC,YAAY,GAAG,IAAI,CAACC,eAAe,CAACT,SAAS,EAAEC,SAAS,CAAC;MAC/D,IAAMS,cAAc,GAAG,IAAI,CAACC,iBAAiB,CAACX,SAAS,EAAEC,SAAS,CAAC;MAEnE,IAAIO,YAAY,EAAE;QACd/H,KAAK,CAACkE,KAAK,cAACtE,KAAA,CAAAqD,aAAA,CAAChD,cAAc,CAACkE,UAAU;UAAChB,IAAI,EAAE4E,YAAa;UAAA1E,MAAA;UAAAE,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,CAAE,CAAC,EAAE;UAC3DC,QAAQ,EAAE5D,KAAK,CAAC6D,QAAQ,CAACC;QAC7B,CAAC,CAAC;MACN,CAAC,MAAM,IAAImE,cAAc,EAAE;QACvBjI,KAAK,CAACmI,OAAO,cAACvI,KAAA,CAAAqD,aAAA,CAAChD,cAAc,CAACmI,YAAY;UAACjF,IAAI,EAAE8E,cAAe;UAAA5E,MAAA;UAAAE,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,CAAE,CAAC,EAAE;UACjEC,QAAQ,EAAE5D,KAAK,CAAC6D,QAAQ,CAACC;QAC7B,CAAC,CAAC;MACN;IACJ;EAAC;IAAAqD,GAAA;IAAAC,KAAA,WAAAiB,qBAAA,EAEsB;MACnB,IAAI,CAAC5G,WAAW,CAAC6G,UAAU,CAAC,CAAC;MAC7B,IAAI,CAACxG,UAAU,GAAG,KAAK;IAC3B;EAAC;IAAAqF,GAAA;IAAAC,KAAA,WAAAc,kBAEiBX,SAAS,EAAEC,SAAS,EAAE;MACpC,IAAI,CAAC,IAAI,CAACxG,KAAK,CAACuH,mBAAmB,CAACC,QAAQ,IAAI,IAAI,CAACxH,KAAK,CAACuH,mBAAmB,CAACrG,OAAO,IAAI,IAAI,CAAClB,KAAK,CAACuH,mBAAmB,KAAKhB,SAAS,CAACgB,mBAAmB,EAAE;QACxJ,OAAO,IAAI,CAACvH,KAAK,CAACuH,mBAAmB,CAACrG,OAAO;MACjD,CAAC,MACI,IAAI,CAAC,IAAI,CAAClB,KAAK,CAACyD,gBAAgB,CAAC+D,QAAQ,IAAI,IAAI,CAACxH,KAAK,CAACyD,gBAAgB,CAACvC,OAAO,IAAI,IAAI,CAAClB,KAAK,CAACyD,gBAAgB,KAAK8C,SAAS,CAAC9C,gBAAgB,EAAE;QACjJ,OAAO,IAAI,CAACzD,KAAK,CAACyD,gBAAgB,CAACvC,OAAO;MAC9C;MACA,OAAO,IAAI;IACf;EAAC;IAAAiF,GAAA;IAAAC,KAAA,WAAAY,gBAEeT,SAAS,EAAEC,SAAS,EAAE;MAClC,IAAI,IAAI,CAACxG,KAAK,CAACuH,mBAAmB,CAACC,QAAQ,IAAIjB,SAAS,CAACgB,mBAAmB,CAACrE,KAAK,KAAK,IAAI,CAAClD,KAAK,CAACuH,mBAAmB,CAACrE,KAAK,EAAE;QACzH,OAAO,IAAI,CAAClD,KAAK,CAACuH,mBAAmB,CAACrG,OAAO,IAAI,cAAc;MACnE,CAAC,MACI,IAAI,IAAI,CAAClB,KAAK,CAACyD,gBAAgB,CAAC+D,QAAQ,IAAIjB,SAAS,CAAC9C,gBAAgB,CAACP,KAAK,KAAK,IAAI,CAAClD,KAAK,CAACyD,gBAAgB,CAACP,KAAK,EAAE;QACrH,OAAO,IAAI,CAAClD,KAAK,CAACyD,gBAAgB,CAACvC,OAAO,IAAI,cAAc;MAChE;MAEA,OAAO,IAAI;IACf;EAAC;IAAAiF,GAAA;IAAAC,KAAA,WAAAqB,YA0DWC,OAAO,EAAE;MACjB,IAAI,CAACjH,WAAW,CAACkH,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,EAAEtG,IAAI,CAACuG,SAAS,CAACF,OAAO,CAAC,CAAC;MAClE,IAAI,CAAC3G,QAAQ,CAAC;QAAEoD,OAAO,EAAE;MAAG,CAAC,CAAC;IAClC;EAAC;IAAAgC,GAAA;IAAAC,KAAA,WAAAH,gBAkBenC,KAAK,EAAE;MACnBA,KAAK,CAAC+D,cAAc,CAAC,CAAC;MAEtB,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC,CAAC,EAAE;QACxB;MACJ;MAAC,IAAAC,WAAA,GAEyC,IAAI,CAACvG,KAAK;QAAhCwG,QAAQ,GAAAD,WAAA,CAApBtG,UAAU;QAAY0C,OAAO,GAAA4D,WAAA,CAAP5D,OAAO;MAErC,IAAI,IAAI,CAAC3C,KAAK,CAACR,eAAe,EAAE;QAC5B,IAAI,CAACyG,WAAW,CAAC;UAAEO,QAAQ,EAARA,QAAQ;UAAE7D,OAAO,EAAPA;QAAQ,CAAC,CAAC;MAC3C,CAAC,MAAM;QACHnF,KAAK,CAACkE,KAAK,cAACtE,KAAA,CAAAqD,aAAA,CAAChD,cAAc,CAACkE,UAAU;UAAChB,IAAI,+BAAgC;UAAAE,MAAA;UAAAE,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,CAAE,CAAC,EAAE;UAC5EC,QAAQ,EAAE5D,KAAK,CAAC6D,QAAQ,CAACC;QAC7B,CAAC,CAAC;MACN;IACJ;EAAC;IAAAqD,GAAA;IAAAC,KAAA,WAAAJ,gBAEelC,KAAK,EAAE;MACnB,IAAI,CAAC/C,QAAQ,CAAAkD,eAAA,KACRH,KAAK,CAACmE,MAAM,CAACC,IAAI,EAAGpE,KAAK,CAACmE,MAAM,CAAC7B,KAAK,CAC1C,CAAC;IACN;EAAC;IAAAD,GAAA;IAAAC,KAAA,WAAA0B,eAAA,EAQgB;MAAA,IACL3D,OAAO,GAAK,IAAI,CAAC3C,KAAK,CAAtB2C,OAAO;MACf,IAAMgE,MAAM,GAAG,IAAI,CAACjE,QAAQ,CAACC,OAAO,CAAC;MACrC,IAAMiE,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,CAACI,IAAI,CAAC,UAAAC,CAAC;QAAA,OAAIL,MAAM,CAACK,CAAC,CAAC;MAAA,EAAC;MAC3D,OAAO,CAACJ,UAAU;IACtB;EAAC;IAAAjC,GAAA;IAAAC,KAAA,WAAAqC,eAAA,EAyDgB;MACb,IAAMC,CAAC,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;MACjDF,CAAC,CAAC9B,SAAS,GAAG8B,CAAC,CAACG,YAAY,GAAGH,CAAC,CAACI,qBAAqB,CAAC,CAAC,CAACC,MAAM;IACnE;EAAC;IAAA5C,GAAA;IAAAC,KAAA,WAAAQ,UAAA,EAEW;MACR,IAAMoC,SAAS,GAAGL,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;MACzDI,SAAS,CAACpC,SAAS,GAAG,CAAC;IAC3B;EAAC;IAAAT,GAAA;IAAAC,KAAA,WAAAO,WAAA,EAEY;MACT,IAAMqC,SAAS,GAAGL,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;MACzDI,SAAS,CAACpC,SAAS,GAAGoC,SAAS,CAACH,YAAY;IAChD;EAAC;IAAA1C,GAAA;IAAAC,KAAA,WAAAnD,uBAOsBgG,gBAAgB,EAAE;MAAA,IACrBrE,EAAE,GAAaqE,gBAAgB,CAAvCtF,MAAM;QAAMgC,MAAM,GAAKsD,gBAAgB,CAA3BtD,MAAM;MAC1B,IAAI,CAAC3F,KAAK,CAACkJ,gBAAgB,CAAC;QAAEtE,EAAE,EAAFA,EAAE;QAAEe,MAAM,EAANA;MAAO,CAAC,CAAC;IAC/C;EAAC;IAAAQ,GAAA;IAAAC,KAAA,WAAA+C,OAAA,EAEQ;MAAA,IAAAC,MAAA;MACL,IAAI,CAAC,IAAI,CAAC5H,KAAK,CAACR,eAAe,EAAE;QAC7BqI,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC5B,oBAAO1K,KAAA,CAAAqD,aAAA;UAAIsH,SAAS,EAAC,uBAAuB;UAAAlH,MAAA;UAAAE,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,GAAC,eAAiB,CAAC;MACnE;MAAC,IAEOwB,OAAO,GAAK,IAAI,CAAC3C,KAAK,CAAtB2C,OAAO;MACf,IAAMgE,MAAM,GAAG,IAAI,CAACjE,QAAQ,CAACC,OAAO,CAAC;MACrC,IAAMqF,SAAS,GAAG,CAACnB,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,CAACI,IAAI,CAAC,UAAAC,CAAC;QAAA,OAAIL,MAAM,CAACK,CAAC,CAAC;MAAA,EAAC;MAC3D,IAAMiB,YAAY,GAAGD,SAAS,GAAG,EAAE,GAAG,QAAQ;MAC9C,IAAME,qBAAqB,GAAG3K,WAAW,CAAC4K,YAAY,CAAC,CAAC;MACxD,IAAMtF,aAAa,GAAG,IAAI,CAAC7C,KAAK,CAAC6C,aAAa;MAC9C,IAAME,aAAa,GAAG,IAAI,CAAC/C,KAAK,CAAC+C,aAAa;MAC9C,IAAME,cAAc,GAAG,IAAI,CAACjD,KAAK,CAACiD,cAAc;MAAC,IAAAmF,YAAA,GAEQ,IAAI,CAACpI,KAAK;QAA3D2D,qBAAqB,GAAAyE,YAAA,CAArBzE,qBAAqB;QAAEH,qBAAqB,GAAA4E,YAAA,CAArB5E,qBAAqB;MACpD,IAAM6E,kBAAkB,GAAG9K,WAAW,CAAC+K,YAAY,CAAC3E,qBAAqB,CAAC;MAC1E,IAAM4E,kBAAkB,GAAGhL,WAAW,CAAC8C,cAAc,CAAC6H,qBAAqB,CAAC;MAE5E,oBACI9K,KAAA,CAAAqD,aAAA,CAACnD,QAAQ;QAAAuD,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACL/D,KAAA,CAAAqD,aAAA;QAASsH,SAAS,0BAAAnH,MAAA,CAA0BiC,aAAa,CAAG;QAAAhC,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACxD/D,KAAA,CAAAqD,aAAA;QAAKsH,SAAS,EAAC,mBAAmB;QAACS,OAAO,EAAE,IAAI,CAAC5F,YAAa;QAAA/B,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAC1D/D,KAAA,CAAAqD,aAAA;QAAKsH,SAAS,EAAC,sBAAsB;QAAAlH,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACjC/D,KAAA,CAAAqD,aAAA;QAAGsH,SAAS,EAAC,uBAAuB;QAAAlH,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAI,CACvC,CAAC,eACN/D,KAAA,CAAAqD,aAAA;QAAIsH,SAAS,EAAC,YAAY;QAACU,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAA7H,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAC,cACtC,EAAC,IAAI,CAAC2C,kBAAkB,CAAC,CACrC,CACH,CAAC,eACN1G,KAAA,CAAAqD,aAAA;QAAKsH,SAAS,EAAC,mCAAmC;QAAAlH,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAE7C,IAAI,CAAC3C,KAAK,CAACwF,cAAc,CAAC2E,GAAG,CAAC,UAACC,MAAM;QAAA,oBAClCxL,KAAA,CAAAqD,aAAA,CAAC9C,aAAa,EAAAkJ,MAAA,CAAAgC,MAAA;UACVlE,GAAG,EAAEiE,MAAM,CAACxF,EAAG;UACfF,eAAe,EAAE0E,MAAI,CAAC1E;QAAgB,GAClC0F,MAAM;UAAA/H,MAAA,EAAA+G,MAAA;UAAA7G,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,EACb,CAAC;MAAA,CACN,CACC,CACA,CAAC,eACV/D,KAAA,CAAAqD,aAAA;QAASsH,SAAS,oBAAAnH,MAAA,CAAoBmC,aAAa,OAAAnC,MAAA,CAAIqC,cAAc,CAAG;QAACG,EAAE,EAAC,gBAAgB;QAAAvC,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACxF/D,KAAA,CAAAqD,aAAA;QAAKsH,SAAS,EAAC,uBAAuB;QAACS,OAAO,EAAE,IAAI,CAAC1F,mBAAoB;QAAAjC,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACrE/D,KAAA,CAAAqD,aAAA;QAAKsH,SAAS,EAAC,mBAAmB;QAAAlH,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAC9B/D,KAAA,CAAAqD,aAAA;QAAKsH,SAAS,EAAEM,kBAAmB;QAACS,GAAG,EAAEnF,qBAAsB;QAACoF,GAAG,EAAC,QAAQ;QAAAlI,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAC7E,CAAC,eACN/D,KAAA,CAAAqD,aAAA;QAAKsH,SAAS,EAAC,yBAAyB;QAAAlH,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACpC/D,KAAA,CAAAqD,aAAA;QAAGsH,SAAS,EAAC,eAAe;QAAAlH,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAEqC,qBAAyB,CACtD,CACJ,CAAC,eAENpG,KAAA,CAAAqD,aAAA;QAAKsH,SAAS,EAAC,wBAAwB;QAACS,OAAO,EAAE,IAAI,CAAC3E,gBAAiB;QAAAhD,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACnE/D,KAAA,CAAAqD,aAAA;QAAKsH,SAAS,EAAC,wEAAwE;QAAAlH,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAAE/D,KAAA,CAAAqD,aAAA;QAAGsH,SAAS,EAAC,cAAc;QAAAlH,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAI,CAAM,CAC7H,CAAC,eAEN/D,KAAA,CAAAqD,aAAA;QAAKsH,SAAS,EAAC,iBAAiB;QAAAlH,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAE5B/D,KAAA,CAAAqD,aAAA;QAAKsH,SAAS,EAAC,cAAc;QAAC3E,EAAE,EAAC,cAAc;QAAAvC,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAC1C,IAAI,CAAC3C,KAAK,CAAC0G,cAAc,CAACyD,GAAG,CAAC,UAACjJ,OAAO;QAAA,oBACnCtC,KAAA,CAAAqD,aAAA,CAAC7C,aAAa,EAAAiJ,MAAA,CAAAgC,MAAA;UACVlE,GAAG,EAAEjF,OAAO,CAAC0D;QAAG,GACZ1D,OAAO;UAAAmB,MAAA,EAAA+G,MAAA;UAAA7G,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,EACd,CAAC;MAAA,CACN,CACC,CAAC,eACN/D,KAAA,CAAAqD,aAAA;QAAKsH,SAAS,EAAC,aAAa;QAAAlH,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACxB/D,KAAA,CAAAqD,aAAA;QAAKsH,SAAS,EAAC,kBAAkB;QAAAlH,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAC7B/D,KAAA,CAAAqD,aAAA;QAAKsH,SAAS,EAAC,qBAAqB;QAAAlH,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAChC/D,KAAA,CAAAqD,aAAA;QAAMuI,QAAQ,EAAE,IAAI,CAACvE,eAAgB;QAAA5D,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACjC/D,KAAA,CAAAqD,aAAA;QAAKsH,SAAS,EAAC,EAAE;QAAC3E,EAAE,EAAC,0BAA0B;QAAAvC,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAC3C/D,KAAA,CAAAqD,aAAA,CAAC/C,gBAAgB;QACbgJ,IAAI,EAAC,SAAS;QACdtD,EAAE,EAAC,SAAS;QACZ2E,SAAS,EAAC,eAAe;QACzBnD,KAAK,EAAE,IAAI,CAAC5E,KAAK,CAAC2C,OAAQ;QAC1BsG,QAAQ,EAAE,IAAI,CAACzE,eAAgB;QAC/B0E,MAAM,EAAE,IAAI,CAAC9G,UAAU,CAAC,SAAS,CAAE;QACnC,oBAAiB,aAAa;QAC9B+G,WAAW,wBAAAvI,MAAA,CAAwB2H,kBAAkB,MAAI;QACzDa,OAAO,EAAE,CAAE;QAAAvI,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAEG,CACjB,CAAC,eAEN/D,KAAA,CAAAqD,aAAA;QAAKsH,SAAS,EAAC,aAAa;QAAAlH,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACxB/D,KAAA,CAAAqD,aAAA;QAAQ4I,QAAQ,EAAE,CAACrB,SAAU;QAACS,KAAK,EAAE;UAAE,YAAY,KAAA7H,MAAA,CAAKqH,YAAY;QAAG,CAAE;QAACqB,IAAI,EAAC,QAAQ;QAACvB,SAAS,EAAC,uDAAuD;QAAAlH,MAAA;QAAAE,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAS,CACjK,CACH,CACL,CACJ,CACJ,CACJ,CAEA,CACH,CAAC;IAEnB;EAAC;EAAA,OAAA9C,UAAA;AAAA,EAnZoBhB,SAAS;AAsZlC,IAAMkM,eAAe,GAAG,SAAlBA,eAAeA,CAAIvJ,KAAK,EAAK;EAC/B,OAAO;IACHgE,cAAc,EAAEhE,KAAK,CAAC+F,mBAAmB,CAAC/B,cAAc;IACxD+B,mBAAmB,EAAE/F,KAAK,CAAC+F,mBAAmB;IAE9Cb,cAAc,EAAElF,KAAK,CAACiC,gBAAgB,CAACiD,cAAc;IACrDjD,gBAAgB,EAAEjC,KAAK,CAACiC,gBAAgB;IAExCoD,kBAAkB,EAAErF,KAAK,CAACqF;EAC9B,CAAC;AACL,CAAC;AAED,IAAMmE,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,QAAQ,EAAK;EACrC,OAAO;IACHvH,kBAAkB,EAAE,SAApBA,kBAAkBA,CAAGC,MAAM,EAAK;MAAEsH,QAAQ,CAAC3L,yBAAyB,CAACqE,MAAM,CAAC,CAAC;IAAC,CAAC;IAC/EF,gBAAgB,EAAE,SAAlBA,gBAAgBA,CAAGhC,UAAU,EAAK;MAAEwJ,QAAQ,CAACzL,sBAAsB,CAACiC,UAAU,CAAC,CAAC;IAAC,CAAC;IAClFyH,gBAAgB,EAAE,SAAlBA,gBAAgBA,CAAGpC,QAAQ,EAAK;MAAEmE,QAAQ,CAAC1L,sBAAsB,CAACuH,QAAQ,CAAC,CAAC;IAAC,CAAC;IAC9EnF,UAAU,EAAE,SAAZA,UAAUA,CAAGP,WAAW,EAAK;MAAE6J,QAAQ,CAACxL,gBAAgB,CAAC2B,WAAW,CAAC,CAAC;IAAC,CAAC;IACxE2B,qBAAqB,EAAE,SAAvBA,qBAAqBA,CAAA,EAAQ;MAAEkI,QAAQ,CAACvL,4BAA4B,CAAC,CAAC,CAAC;IAAC;EAC5E,CAAC;AACL,CAAC;AAED,eAAeL,OAAO,CAAC0L,eAAe,EAAEC,kBAAkB,CAAC,CAACnL,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}
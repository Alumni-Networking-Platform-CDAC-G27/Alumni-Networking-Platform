{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\0011_Final_PROJECT\\\\Alumni-Networking-Platform\\\\Client\\\\src\\\\components\\\\home\\\\MainSharedContent.jsx\";\nimport React, { Fragment, Component } from 'react';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport Post from './Post';\nimport './css/MainSharedContent.css';\nimport WritePost from './WritePost';\nimport WriteComment from './WriteComment';\nimport { connect } from 'react-redux';\nimport { createPostAction, fetchAllPostsAction, removePostAction, addLikePostAction } from '../../store/actions/postActions';\nimport { createCommentAction, removeCommentAction, addLikeCommentAction } from '../../store/actions/commentActions';\nimport { changeCurrentTimeLineUserAction, changeAllFriendsAction } from '../../store/actions/userActions';\nimport { changeAllPicturesAction } from '../../store/actions/pictureActions';\nclass MainSharedContent extends Component {\n  constructor(props) {\n    super(props);\n    this.componentDidMount = () => {\n      const currentTimeLineUserId = this.props.match.params.id;\n      this.setState({\n        currentTimeLineUserId\n      });\n      if (currentTimeLineUserId !== this.props.timeLineUser.id) {\n        this.initialDataLoad(currentTimeLineUserId);\n      } else {\n        this.getAllPosts(currentTimeLineUserId);\n      }\n    };\n    this.initialDataLoad = currentTimeLineUserId => {\n      this.setState({\n        currentTimeLineUserId\n      }, () => {\n        this.props.changeTimeLineUser(currentTimeLineUserId);\n        this.props.changeAllPictures(currentTimeLineUserId);\n        this.props.changeAllFriends(currentTimeLineUserId);\n        this.getAllPosts(currentTimeLineUserId);\n      });\n    };\n    this.addLike = postId => {\n      const loggedInUserId = this.props.loggedInUser.id;\n      const timelineUserId = this.props.timeLineUser.id;\n      this.props.addLikePost(loggedInUserId, postId, timelineUserId);\n    };\n    this.addLikeComment = (commentId, event) => {\n      const loggedInUserId = this.props.loggedInUser.id;\n      const timelineUserId = this.props.timeLineUser.id;\n      this.props.addLikeComment(loggedInUserId, commentId, timelineUserId);\n    };\n    this.state = {\n      currentTimeLineUserId: '',\n      allPostsArr: []\n    };\n    this.getAllPosts = this.getAllPosts.bind(this);\n    this.addLike = this.addLike.bind(this);\n    this.removePost = this.removePost.bind(this);\n    this.addLikeComment = this.addLikeComment.bind(this);\n    this.removeComment = this.removeComment.bind(this);\n    this.createPost = this.createPost.bind(this);\n    this.createComment = this.createComment.bind(this);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentTimeLineUserId !== this.props.match.params.id) {\n      this.initialDataLoad(this.props.match.params.id);\n    }\n    const loading = this.props.fetchAllPosts.loading || this.props.removePost.loading || this.props.removeCommentData.loading || this.props.addLikePostData.loading || this.props.addLikeCommentData.loading || this.props.createPostData.loading || this.props.createCommentData.loading;\n    if (!loading && this.state.allPostsArr !== this.props.allPostsArr) {\n      this.setState({\n        allPostsArr: this.props.allPostsArr\n      });\n    }\n    const errorMessage = this.getErrorMessage(prevProps, prevState);\n    const successMessage = this.getSuccessMessage(prevProps, prevState);\n    if (errorMessage) {\n      toast.error(/*#__PURE__*/React.createElement(ToastComponent.errorToast, {\n        text: errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }), {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    } else if (successMessage) {\n      toast.success(/*#__PURE__*/React.createElement(ToastComponent.successToast, {\n        text: successMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 27\n        }\n      }), {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n  }\n  getSuccessMessage(prevProps, prevState) {\n    if (!this.props.fetchAllPosts.hasError && this.props.fetchAllPosts.message && this.props.fetchAllPosts !== prevProps.fetchAllPosts) {\n      return this.props.fetchAllPosts.message;\n    } else if (!this.props.removePostData.hasError && this.props.removePostData.message && this.props.removePostData !== prevProps.removePostData) {\n      return this.props.removePostData.message;\n    } else if (!this.props.removeCommentData.hasError && this.props.removeCommentData.message && this.props.removeCommentData !== prevProps.removeCommentData) {\n      return this.props.removeCommentData.message;\n    } else if (!this.props.addLikePostData.hasError && this.props.addLikePostData.message && this.props.addLikePostData !== prevProps.addLikePostData) {\n      return this.props.addLikePostData.message;\n    } else if (!this.props.addLikeCommentData.hasError && this.props.addLikeCommentData.message && this.props.addLikeCommentData !== prevProps.addLikeCommentData) {\n      return this.props.addLikeCommentData.message;\n    } else if (!this.props.createPostData.hasError && this.props.createPostData.message && this.props.createPostData !== prevProps.createPostData) {\n      return this.props.createPostData.message;\n    } else if (!this.props.createCommentData.hasError && this.props.createCommentData.message && this.props.createCommentData !== prevProps.createCommentData) {\n      return this.props.createCommentData.message;\n    }\n    return null;\n  }\n  getErrorMessage(prevProps, prevState) {\n    if (this.props.fetchAllPosts.hasError && prevProps.fetchAllPosts.error !== this.props.fetchAllPosts.error) {\n      return this.props.fetchAllPosts.message || 'Server Error';\n    } else if (this.props.removePostData.hasError && prevProps.removePostData.error !== this.props.removePostData.error) {\n      return this.props.removePostData.message || 'Server Error';\n    } else if (this.props.removeCommentData.hasError && prevProps.removeCommentData.error !== this.props.removeCommentData.error) {\n      return this.props.removeCommentData.message || 'Server Error';\n    } else if (this.props.addLikePostData.hasError && prevProps.addLikePostData.error !== this.props.addLikePostData.error) {\n      return this.props.addLikePostData.message || 'Server Error';\n    } else if (this.props.addLikeCommentData.hasError && prevProps.addLikeCommentData.error !== this.props.addLikeCommentData.error) {\n      return this.props.addLikeCommentData.message || 'Server Error';\n    } else if (this.props.createPostData.hasError && prevProps.createPostData.error !== this.props.createPostData.error) {\n      return this.props.createPostData.message || 'Server Error';\n    } else if (this.props.createCommentData.hasError && prevProps.createCommentData.error !== this.props.createCommentData.error) {\n      return this.props.createCommentData.message || 'Server Error';\n    }\n    return null;\n  }\n  getAllPosts(timelineUserId) {\n    this.props.loadAllPosts(timelineUserId);\n  }\n  createPost(content, imageUrl) {\n    const loggedInUserId = this.props.loggedInUser.id;\n    const timelineUserId = this.props.timeLineUser.id;\n    this.props.createPost(timelineUserId, loggedInUserId, content, imageUrl);\n  }\n  createComment(postId, content, imageUrl) {\n    const loggedInUserId = this.props.loggedInUser.id;\n    const timelineUserId = this.props.timeLineUser.id;\n    this.props.createComment(postId, loggedInUserId, timelineUserId, content, imageUrl);\n  }\n  removePost(postId) {\n    const loggedInUserId = this.props.loggedInUser.id;\n    const timelineUserId = this.props.timeLineUser.id;\n    this.props.removePost(loggedInUserId, postId, timelineUserId);\n  }\n  removeComment(commentId) {\n    const loggedInUserId = this.props.loggedInUser.id;\n    const timelineUserId = this.props.timeLineUser.id;\n    this.props.removeComment(loggedInUserId, commentId, timelineUserId);\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"article\", {\n      className: \"main-article-shared-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(WritePost, {\n      loggedInUser: this.props.loggedInUser,\n      createPost: this.createPost,\n      createPostData: this.props.createPostData,\n      loadingAllPosts: this.props.fetchAllPosts.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"post-content-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, this.state.allPostsArr.map((post, index) => /*#__PURE__*/React.createElement(Fragment, {\n      key: post.postId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Post, Object.assign({\n      addLike: this.addLike,\n      removePost: this.removePost,\n      addLikeComment: this.addLikeComment,\n      removeComment: this.removeComment\n    }, post, {\n      timelineUserId: this.props.timeLineUser.id,\n      currentLoggedInUserId: this.props.loggedInUser.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(WriteComment, {\n      timelineUserId: this.props.timeLineUser.id,\n      loggedInUser: this.props.loggedInUser,\n      getAllPosts: this.getAllPosts,\n      createComment: this.createComment,\n      createCommentData: this.props.createCommentData,\n      loadingAllPosts: this.props.fetchAllPosts.loading,\n      postId: post.postId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 33\n      }\n    }))))));\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    loggedInUser: state.loggedInUserData,\n    timeLineUser: state.timeLineUserData,\n    allPostsArr: state.fetchAllPosts.allPostsArr,\n    fetchAllPosts: state.fetchAllPosts,\n    createPostData: state.createPost,\n    removePostData: state.removePost,\n    addLikePostData: state.addLikePost,\n    createCommentData: state.createComment,\n    removeCommentData: state.removeComment,\n    addLikeCommentData: state.addLikeComment\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadAllPosts: userId => {\n      dispatch(fetchAllPostsAction(userId));\n    },\n    createPost: (loggedInUserId, postId, timelineUserId) => {\n      dispatch(createPostAction(loggedInUserId, postId, timelineUserId));\n    },\n    removePost: (loggedInUserId, postId, timelineUserId) => {\n      dispatch(removePostAction(loggedInUserId, postId, timelineUserId));\n    },\n    addLikePost: (loggedInUserId, postId, timelineUserId) => {\n      dispatch(addLikePostAction(loggedInUserId, postId, timelineUserId));\n    },\n    createComment: (postId, loggedInUserId, timelineUserId, content, imageUrl) => {\n      dispatch(createCommentAction(postId, loggedInUserId, timelineUserId, content, imageUrl));\n    },\n    removeComment: (loggedInUserId, commentId, timelineUserId) => {\n      dispatch(removeCommentAction(loggedInUserId, commentId, timelineUserId));\n    },\n    addLikeComment: (loggedInUserId, commentId, timelineUserId) => {\n      dispatch(addLikeCommentAction(loggedInUserId, commentId, timelineUserId));\n    },\n    changeTimeLineUser: userId => {\n      dispatch(changeCurrentTimeLineUserAction(userId));\n    },\n    changeAllFriends: userId => {\n      dispatch(changeAllFriendsAction(userId));\n    },\n    changeAllPictures: userId => {\n      dispatch(changeAllPicturesAction(userId));\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MainSharedContent);","map":{"version":3,"names":["React","Fragment","Component","toast","ToastComponent","Post","WritePost","WriteComment","connect","createPostAction","fetchAllPostsAction","removePostAction","addLikePostAction","createCommentAction","removeCommentAction","addLikeCommentAction","changeCurrentTimeLineUserAction","changeAllFriendsAction","changeAllPicturesAction","MainSharedContent","constructor","props","componentDidMount","currentTimeLineUserId","match","params","id","setState","timeLineUser","initialDataLoad","getAllPosts","changeTimeLineUser","changeAllPictures","changeAllFriends","addLike","postId","loggedInUserId","loggedInUser","timelineUserId","addLikePost","addLikeComment","commentId","event","state","allPostsArr","bind","removePost","removeComment","createPost","createComment","componentDidUpdate","prevProps","prevState","loading","fetchAllPosts","removeCommentData","addLikePostData","addLikeCommentData","createPostData","createCommentData","errorMessage","getErrorMessage","successMessage","getSuccessMessage","error","createElement","errorToast","text","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","position","POSITION","TOP_RIGHT","success","successToast","hasError","message","removePostData","loadAllPosts","content","imageUrl","render","className","loadingAllPosts","map","post","index","key","Object","assign","currentLoggedInUserId","mapStateToProps","loggedInUserData","timeLineUserData","mapDispatchToProps","dispatch","userId"],"sources":["C:/Users/Administrator/Documents/0011_Final_PROJECT/Alumni-Networking-Platform/Client/src/components/home/MainSharedContent.jsx"],"sourcesContent":["import React, { Fragment, Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { ToastComponent } from '../common';\r\nimport Post from './Post';\r\nimport './css/MainSharedContent.css'\r\nimport WritePost from './WritePost';\r\nimport WriteComment from './WriteComment';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { createPostAction, fetchAllPostsAction, removePostAction, addLikePostAction } from '../../store/actions/postActions';\r\nimport { createCommentAction, removeCommentAction, addLikeCommentAction } from '../../store/actions/commentActions';\r\nimport { changeCurrentTimeLineUserAction, changeAllFriendsAction } from '../../store/actions/userActions';\r\nimport { changeAllPicturesAction } from '../../store/actions/pictureActions';\r\n\r\nclass MainSharedContent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            currentTimeLineUserId: '',\r\n            allPostsArr: [],\r\n        };\r\n\r\n        this.getAllPosts = this.getAllPosts.bind(this);\r\n        this.addLike = this.addLike.bind(this);\r\n        this.removePost = this.removePost.bind(this);\r\n        this.addLikeComment = this.addLikeComment.bind(this);\r\n        this.removeComment = this.removeComment.bind(this);\r\n        this.createPost = this.createPost.bind(this);\r\n        this.createComment = this.createComment.bind(this);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const currentTimeLineUserId = this.props.match.params.id\r\n        this.setState({ currentTimeLineUserId });\r\n\r\n        if (currentTimeLineUserId !== this.props.timeLineUser.id) {\r\n            this.initialDataLoad(currentTimeLineUserId);\r\n        }else{\r\n            this.getAllPosts(currentTimeLineUserId);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.currentTimeLineUserId !== this.props.match.params.id) {\r\n            this.initialDataLoad(this.props.match.params.id);\r\n        }\r\n\r\n        const loading = this.props.fetchAllPosts.loading || this.props.removePost.loading ||\r\n            this.props.removeCommentData.loading || this.props.addLikePostData.loading ||\r\n            this.props.addLikeCommentData.loading || this.props.createPostData.loading ||\r\n            this.props.createCommentData.loading;\r\n\r\n        if (!loading && this.state.allPostsArr !== this.props.allPostsArr) {\r\n            this.setState({\r\n                allPostsArr: this.props.allPostsArr\r\n            })\r\n        }\r\n\r\n        const errorMessage = this.getErrorMessage(prevProps, prevState);\r\n        const successMessage = this.getSuccessMessage(prevProps, prevState)\r\n\r\n        if (errorMessage) {\r\n            toast.error(<ToastComponent.errorToast text={errorMessage} />, {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        } else if (successMessage) {\r\n            toast.success(<ToastComponent.successToast text={successMessage} />, {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }\r\n\r\n    getSuccessMessage(prevProps, prevState) {\r\n        if (!this.props.fetchAllPosts.hasError && this.props.fetchAllPosts.message && this.props.fetchAllPosts !== prevProps.fetchAllPosts) {\r\n            return this.props.fetchAllPosts.message;\r\n        }\r\n        else if (!this.props.removePostData.hasError && this.props.removePostData.message && this.props.removePostData !== prevProps.removePostData) {\r\n            return this.props.removePostData.message;\r\n\r\n        } else if (!this.props.removeCommentData.hasError && this.props.removeCommentData.message && this.props.removeCommentData !== prevProps.removeCommentData) {\r\n            return this.props.removeCommentData.message;\r\n        }\r\n        else if (!this.props.addLikePostData.hasError && this.props.addLikePostData.message && this.props.addLikePostData !== prevProps.addLikePostData) {\r\n            return this.props.addLikePostData.message;\r\n        }\r\n        else if (!this.props.addLikeCommentData.hasError && this.props.addLikeCommentData.message && this.props.addLikeCommentData !== prevProps.addLikeCommentData) {\r\n            return this.props.addLikeCommentData.message;\r\n        }\r\n        else if (!this.props.createPostData.hasError && this.props.createPostData.message && this.props.createPostData !== prevProps.createPostData) {\r\n            return this.props.createPostData.message;\r\n        }\r\n        else if (!this.props.createCommentData.hasError && this.props.createCommentData.message && this.props.createCommentData !== prevProps.createCommentData) {\r\n            return this.props.createCommentData.message;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getErrorMessage(prevProps, prevState) {\r\n        if (this.props.fetchAllPosts.hasError && prevProps.fetchAllPosts.error !== this.props.fetchAllPosts.error) {\r\n            return this.props.fetchAllPosts.message || 'Server Error';\r\n        }\r\n        else if (this.props.removePostData.hasError && prevProps.removePostData.error !== this.props.removePostData.error) {\r\n            return this.props.removePostData.message || 'Server Error';\r\n\r\n        } else if (this.props.removeCommentData.hasError && prevProps.removeCommentData.error !== this.props.removeCommentData.error) {\r\n            return this.props.removeCommentData.message || 'Server Error';\r\n        }\r\n        else if (this.props.addLikePostData.hasError && prevProps.addLikePostData.error !== this.props.addLikePostData.error) {\r\n            return this.props.addLikePostData.message || 'Server Error';\r\n        }\r\n        else if (this.props.addLikeCommentData.hasError && prevProps.addLikeCommentData.error !== this.props.addLikeCommentData.error) {\r\n            return this.props.addLikeCommentData.message || 'Server Error';\r\n        }\r\n        else if (this.props.createPostData.hasError && prevProps.createPostData.error !== this.props.createPostData.error) {\r\n            return this.props.createPostData.message || 'Server Error';\r\n        }\r\n        else if (this.props.createCommentData.hasError && prevProps.createCommentData.error !== this.props.createCommentData.error) {\r\n            return this.props.createCommentData.message || 'Server Error';\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    initialDataLoad = (currentTimeLineUserId) => {\r\n        this.setState({ currentTimeLineUserId },\r\n            () => {\r\n                this.props.changeTimeLineUser(currentTimeLineUserId);\r\n                this.props.changeAllPictures(currentTimeLineUserId);\r\n                this.props.changeAllFriends(currentTimeLineUserId);\r\n                this.getAllPosts(currentTimeLineUserId);\r\n            }\r\n        )\r\n    }\r\n\r\n    getAllPosts(timelineUserId) {\r\n        this.props.loadAllPosts(timelineUserId);\r\n    }\r\n\r\n    createPost(content, imageUrl) {\r\n        const loggedInUserId = this.props.loggedInUser.id;\r\n        const timelineUserId = this.props.timeLineUser.id;\r\n        this.props.createPost(timelineUserId, loggedInUserId, content, imageUrl);\r\n    }\r\n\r\n    createComment(postId, content, imageUrl) {\r\n        const loggedInUserId = this.props.loggedInUser.id;\r\n        const timelineUserId = this.props.timeLineUser.id;\r\n        this.props.createComment(postId, loggedInUserId, timelineUserId, content, imageUrl);\r\n    }\r\n\r\n    removePost(postId) {\r\n        const loggedInUserId = this.props.loggedInUser.id;\r\n        const timelineUserId = this.props.timeLineUser.id;\r\n        this.props.removePost(loggedInUserId, postId, timelineUserId);\r\n    }\r\n\r\n    addLike = (postId) => {\r\n        const loggedInUserId = this.props.loggedInUser.id;\r\n        const timelineUserId = this.props.timeLineUser.id;\r\n        this.props.addLikePost(loggedInUserId, postId, timelineUserId);\r\n    }\r\n\r\n    removeComment(commentId) {\r\n        const loggedInUserId = this.props.loggedInUser.id;\r\n        const timelineUserId = this.props.timeLineUser.id;\r\n        this.props.removeComment(loggedInUserId, commentId, timelineUserId);\r\n    }\r\n\r\n    addLikeComment = (commentId, event) => {\r\n        const loggedInUserId = this.props.loggedInUser.id;\r\n        const timelineUserId = this.props.timeLineUser.id;\r\n        this.props.addLikeComment(loggedInUserId, commentId, timelineUserId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment >\r\n                <article className=\"main-article-shared-content\">\r\n                    <WritePost\r\n                        loggedInUser={this.props.loggedInUser}\r\n                        createPost={this.createPost}\r\n                        createPostData={this.props.createPostData}\r\n                        loadingAllPosts={this.props.fetchAllPosts.loading}\r\n                    />\r\n                    <section className=\"post-content-section\">\r\n                        {this.state.allPostsArr.map((post, index) =>\r\n                            <Fragment key={post.postId}>\r\n                                <Post\r\n                                    addLike={this.addLike}\r\n                                    removePost={this.removePost}\r\n                                    addLikeComment={this.addLikeComment}\r\n                                    removeComment={this.removeComment}\r\n                                    {...post}\r\n                                    timelineUserId={this.props.timeLineUser.id}\r\n                                    currentLoggedInUserId={this.props.loggedInUser.id}\r\n                                />\r\n\r\n                                <WriteComment\r\n                                    timelineUserId={this.props.timeLineUser.id}\r\n                                    loggedInUser={this.props.loggedInUser}\r\n                                    getAllPosts={this.getAllPosts}\r\n                                    createComment={this.createComment}\r\n                                    createCommentData={this.props.createCommentData}\r\n                                    loadingAllPosts={this.props.fetchAllPosts.loading}\r\n                                    postId={post.postId}\r\n                                />\r\n                            </Fragment >\r\n                        )}\r\n                    </section>\r\n                </article>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state.loggedInUserData,\r\n        timeLineUser: state.timeLineUserData,\r\n\r\n        allPostsArr: state.fetchAllPosts.allPostsArr,\r\n        fetchAllPosts: state.fetchAllPosts,\r\n\r\n        createPostData: state.createPost,\r\n        removePostData: state.removePost,\r\n        addLikePostData: state.addLikePost,\r\n\r\n        createCommentData: state.createComment,\r\n        removeCommentData: state.removeComment,\r\n        addLikeCommentData: state.addLikeComment,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loadAllPosts: (userId) => { dispatch(fetchAllPostsAction(userId)) },\r\n        createPost: (loggedInUserId, postId, timelineUserId) => { dispatch(createPostAction(loggedInUserId, postId, timelineUserId)) },\r\n        removePost: (loggedInUserId, postId, timelineUserId) => { dispatch(removePostAction(loggedInUserId, postId, timelineUserId)) },\r\n        addLikePost: (loggedInUserId, postId, timelineUserId) => { dispatch(addLikePostAction(loggedInUserId, postId, timelineUserId)) },\r\n        createComment: (postId, loggedInUserId, timelineUserId, content, imageUrl) => { dispatch(createCommentAction(postId, loggedInUserId, timelineUserId, content, imageUrl)) },\r\n        removeComment: (loggedInUserId, commentId, timelineUserId) => { dispatch(removeCommentAction(loggedInUserId, commentId, timelineUserId)) },\r\n        addLikeComment: (loggedInUserId, commentId, timelineUserId) => { dispatch(addLikeCommentAction(loggedInUserId, commentId, timelineUserId)) },\r\n        changeTimeLineUser: (userId) => { dispatch(changeCurrentTimeLineUserAction(userId)) },\r\n        changeAllFriends: (userId) => { dispatch(changeAllFriendsAction(userId)) },\r\n        changeAllPictures: (userId) => { dispatch(changeAllPicturesAction(userId)) },\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainSharedContent);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
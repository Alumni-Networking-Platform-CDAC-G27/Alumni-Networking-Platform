{"ast":null,"code":"import { ADD_PICTURE_SUCCESS, ADD_PICTURE_BEGIN, ADD_PICTURE_ERROR, REMOVE_PICTURE_SUCCESS, REMOVE_PICTURE_BEGIN, REMOVE_PICTURE_ERROR, FETCH_PICTURE_SUCCESS, FETCH_PICTURE_BEGIN, FETCH_PICTURE_ERROR, CHANGE_PICTURES_SUCCESS, CHANGE_PICTURES_BEGIN, CHANGE_PICTURES_ERROR, UPDATE_PICTURES } from '../actions/actionTypes';\n\n// addPictureReducer\nconst initialStateAddPicture = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nfunction addPictureReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateAddPicture;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_PICTURE_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case ADD_PICTURE_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n    case ADD_PICTURE_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}\n\n// removePictureReducer\nconst initialStateRemovePicture = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nfunction removePictureReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateRemovePicture;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case REMOVE_PICTURE_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case REMOVE_PICTURE_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n    case REMOVE_PICTURE_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}\n\n// fetchPictureArrReducer\nconst initialStateFetchPicture = {\n  picturesArr: [],\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nfunction fetchPictureReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateFetchPicture;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FETCH_PICTURE_BEGIN:\n      return Object.assign({}, state, {\n        picturesArr: [],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case FETCH_PICTURE_SUCCESS:\n      return Object.assign({}, state, {\n        picturesArr: [...action.payload],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      });\n    case FETCH_PICTURE_ERROR:\n      return Object.assign({}, state, {\n        picturesArr: [],\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    case UPDATE_PICTURES:\n      return Object.assign({}, state, {\n        picturesArr: [...action.payload],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      });\n    default:\n      return state;\n  }\n}\n\n// changePictureReducer\nconst initialStateChangePicture = {\n  picturesArr: [],\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nfunction changePictureReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateChangePicture;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case CHANGE_PICTURES_BEGIN:\n      return Object.assign({}, state, {\n        picturesArr: [],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case CHANGE_PICTURES_SUCCESS:\n      return Object.assign({}, state, {\n        picturesArr: [...action.payload],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      });\n    case CHANGE_PICTURES_ERROR:\n      return Object.assign({}, state, {\n        picturesArr: [],\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}\nexport { addPictureReducer, removePictureReducer, fetchPictureReducer, changePictureReducer };","map":{"version":3,"names":["ADD_PICTURE_SUCCESS","ADD_PICTURE_BEGIN","ADD_PICTURE_ERROR","REMOVE_PICTURE_SUCCESS","REMOVE_PICTURE_BEGIN","REMOVE_PICTURE_ERROR","FETCH_PICTURE_SUCCESS","FETCH_PICTURE_BEGIN","FETCH_PICTURE_ERROR","CHANGE_PICTURES_SUCCESS","CHANGE_PICTURES_BEGIN","CHANGE_PICTURES_ERROR","UPDATE_PICTURES","initialStateAddPicture","hasError","error","message","status","path","loading","addPictureReducer","state","arguments","length","undefined","action","type","Object","assign","payload","initialStateRemovePicture","removePictureReducer","initialStateFetchPicture","picturesArr","fetchPictureReducer","initialStateChangePicture","changePictureReducer"],"sources":["C:/Users/Administrator/Documents/0011_Final_PROJECT/Alumni-Networking-Platform/Client/src/store/reducers/pictureReducer.js"],"sourcesContent":["import {\r\n    ADD_PICTURE_SUCCESS, ADD_PICTURE_BEGIN, ADD_PICTURE_ERROR,\r\n    REMOVE_PICTURE_SUCCESS, REMOVE_PICTURE_BEGIN, REMOVE_PICTURE_ERROR,\r\n    FETCH_PICTURE_SUCCESS, FETCH_PICTURE_BEGIN, FETCH_PICTURE_ERROR,\r\n    CHANGE_PICTURES_SUCCESS, CHANGE_PICTURES_BEGIN, CHANGE_PICTURES_ERROR, UPDATE_PICTURES,\r\n} from '../actions/actionTypes';\r\n\r\n// addPictureReducer\r\nconst initialStateAddPicture = {\r\n    hasError: false,\r\n    error: '',\r\n    message: '',\r\n    status: '',\r\n    path: '',\r\n    loading: false,\r\n}\r\n\r\nfunction addPictureReducer(state = initialStateAddPicture, action) {\r\n    switch (action.type) {\r\n        case ADD_PICTURE_BEGIN:\r\n            return Object.assign({}, state, {\r\n                hasError: false,\r\n                error: '',\r\n                message: '',\r\n                status: '',\r\n                path: '',\r\n                loading: true,\r\n            })\r\n        case ADD_PICTURE_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                hasError: false,\r\n                error: '',\r\n                message: action.payload.message,\r\n                status: '',\r\n                path: '',\r\n                loading: false,\r\n            })\r\n        case ADD_PICTURE_ERROR:\r\n            return Object.assign({}, state, {\r\n                hasError: true,\r\n                error: action.error,\r\n                message: action.message,\r\n                status: action.status,\r\n                path: action.path,\r\n                loading: false,\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// removePictureReducer\r\nconst initialStateRemovePicture = {\r\n    hasError: false,\r\n    error: '',\r\n    message: '',\r\n    status: '',\r\n    path: '',\r\n    loading: false,\r\n}\r\n\r\nfunction removePictureReducer(state = initialStateRemovePicture, action) {\r\n    switch (action.type) {\r\n        case REMOVE_PICTURE_BEGIN:\r\n            return Object.assign({}, state, {\r\n                hasError: false,\r\n                error: '',\r\n                message: '',\r\n                status: '',\r\n                path: '',\r\n                loading: true,\r\n            })\r\n        case REMOVE_PICTURE_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                hasError: false,\r\n                error: '',\r\n                message: action.payload.message,\r\n                status: '',\r\n                path: '',\r\n                loading: false,\r\n            })\r\n        case REMOVE_PICTURE_ERROR:\r\n            return Object.assign({}, state, {\r\n                hasError: true,\r\n                error: action.error,\r\n                message: action.message,\r\n                status: action.status,\r\n                path: action.path,\r\n                loading: false,\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// fetchPictureArrReducer\r\nconst initialStateFetchPicture = {\r\n    picturesArr: [],\r\n    hasError: false,\r\n    error: '',\r\n    message: '',\r\n    status: '',\r\n    path: '',\r\n    loading: false,\r\n}\r\n\r\nfunction fetchPictureReducer(state = initialStateFetchPicture, action) {\r\n    switch (action.type) {\r\n        case FETCH_PICTURE_BEGIN:\r\n            return Object.assign({}, state, {\r\n                picturesArr: [],\r\n                hasError: false,\r\n                error: '',\r\n                message: '',\r\n                status: '',\r\n                path: '',\r\n                loading: true,\r\n            })\r\n        case FETCH_PICTURE_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                picturesArr: [...action.payload],\r\n                hasError: false,\r\n                error: '',\r\n                message: '',\r\n                status: '',\r\n                path: '',\r\n                loading: false,\r\n            })\r\n        case FETCH_PICTURE_ERROR:\r\n            return Object.assign({}, state, {\r\n                picturesArr: [],\r\n                hasError: true,\r\n                error: action.error,\r\n                message: action.message,\r\n                status: action.status,\r\n                path: action.path,\r\n                loading: false,\r\n            })\r\n        case UPDATE_PICTURES:\r\n            return Object.assign({}, state, {\r\n                picturesArr: [...action.payload],\r\n                hasError: false,\r\n                error: '',\r\n                message: '',\r\n                status: '',\r\n                path: '',\r\n                loading: false,\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// changePictureReducer\r\nconst initialStateChangePicture = {\r\n    picturesArr: [],\r\n    hasError: false,\r\n    error: '',\r\n    message: '',\r\n    status: '',\r\n    path: '',\r\n    loading: false,\r\n}\r\n\r\nfunction changePictureReducer(state = initialStateChangePicture, action) {\r\n    switch (action.type) {\r\n        case CHANGE_PICTURES_BEGIN:\r\n            return Object.assign({}, state, {\r\n                picturesArr: [],\r\n                hasError: false,\r\n                error: '',\r\n                message: '',\r\n                status: '',\r\n                path: '',\r\n                loading: true,\r\n            })\r\n        case CHANGE_PICTURES_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                picturesArr: [...action.payload],\r\n                hasError: false,\r\n                error: '',\r\n                message: '',\r\n                status: '',\r\n                path: '',\r\n                loading: false,\r\n            })\r\n        case CHANGE_PICTURES_ERROR:\r\n            return Object.assign({}, state, {\r\n                picturesArr: [],\r\n                hasError: true,\r\n                error: action.error,\r\n                message: action.message,\r\n                status: action.status,\r\n                path: action.path,\r\n                loading: false,\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport {\r\n    addPictureReducer, removePictureReducer, fetchPictureReducer, changePictureReducer\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import{requester}from'../../infrastructure';import{FETCH_ALLMESSAGES_SUCCESS,FETCH_ALLMESSAGES_BEGIN,FETCH_ALLMESSAGES_ERROR,ADD_MESSAGE,FETCH_UNREADMESSAGES_SUCCESS,FETCH_UNREADMESSAGES_BEGIN,FETCH_UNREADMESSAGES_ERROR,LOAD_USER_MESSAGES}from'./actionTypes';// fetchAllMessages\nconst fetchAllMessagesSuccess=allMessages=>{return{type:FETCH_ALLMESSAGES_SUCCESS,payload:allMessages};};const fetchAllMessagesBegin=()=>{return{type:FETCH_ALLMESSAGES_BEGIN};};const fetchAllMessagesError=(error,message,status,path)=>{return{type:FETCH_ALLMESSAGES_ERROR,error,message,status,path};};const fetchAllMessagesAction=chatUserId=>{return dispatch=>{dispatch(fetchAllMessagesBegin());return requester.get('/message/all/'+chatUserId,response=>{if(response.error){const{error,message,status,path}=response;dispatch(fetchAllMessagesError(error,message,status,path));}else{dispatch(fetchAllMessagesSuccess(response));dispatch(fetchAllUnreadMessagesAction());}}).catch(err=>{if(err.status===403&&err.message==='Your JWT token is expired. Please log in!'){localStorage.clear();}dispatch(fetchAllMessagesError('',`Error: ${err.message}`,err.status,''));});};};const addMessageAction=messageBody=>{return{type:ADD_MESSAGE,payload:messageBody};};// fetchAllUnreadMessages\nconst fetchAllUnreadMessagesSuccess=allUnreadMessages=>{return{type:FETCH_UNREADMESSAGES_SUCCESS,payload:allUnreadMessages};};const fetchAllUnreadMessagesBegin=()=>{return{type:FETCH_UNREADMESSAGES_BEGIN};};const fetchAllUnreadMessagesError=(error,message,status,path)=>{return{type:FETCH_UNREADMESSAGES_ERROR,error,message,status,path};};const fetchAllUnreadMessagesAction=()=>{return dispatch=>{dispatch(fetchAllUnreadMessagesBegin());return requester.get('/message/friend',response=>{if(response.error){const{error,message,status,path}=response;dispatch(fetchAllUnreadMessagesError(error,message,status,path));}else{dispatch(fetchAllUnreadMessagesSuccess(response));}}).catch(err=>{if(err.status===403&&err.message==='Your JWT token is expired. Please log in!'){localStorage.clear();}dispatch(fetchAllUnreadMessagesError('',`Error: ${err.message}`,err.status,''));});};};// LoadUserMessages and showUserChatBox\nconst triggerMessageLoadAction=userData=>{return{type:LOAD_USER_MESSAGES,payload:userData};};export{fetchAllMessagesAction,addMessageAction,fetchAllUnreadMessagesAction,triggerMessageLoadAction};","map":{"version":3,"names":["requester","FETCH_ALLMESSAGES_SUCCESS","FETCH_ALLMESSAGES_BEGIN","FETCH_ALLMESSAGES_ERROR","ADD_MESSAGE","FETCH_UNREADMESSAGES_SUCCESS","FETCH_UNREADMESSAGES_BEGIN","FETCH_UNREADMESSAGES_ERROR","LOAD_USER_MESSAGES","fetchAllMessagesSuccess","allMessages","type","payload","fetchAllMessagesBegin","fetchAllMessagesError","error","message","status","path","fetchAllMessagesAction","chatUserId","dispatch","get","response","fetchAllUnreadMessagesAction","catch","err","localStorage","clear","addMessageAction","messageBody","fetchAllUnreadMessagesSuccess","allUnreadMessages","fetchAllUnreadMessagesBegin","fetchAllUnreadMessagesError","triggerMessageLoadAction","userData"],"sources":["C:/Users/rijul/Downloads/Alumni/Alumani/Client/src/store/actions/messageActions.js"],"sourcesContent":["import { requester } from '../../infrastructure';\nimport {\n    FETCH_ALLMESSAGES_SUCCESS, FETCH_ALLMESSAGES_BEGIN, FETCH_ALLMESSAGES_ERROR, ADD_MESSAGE,\n    FETCH_UNREADMESSAGES_SUCCESS, FETCH_UNREADMESSAGES_BEGIN, FETCH_UNREADMESSAGES_ERROR, LOAD_USER_MESSAGES,\n} from './actionTypes';\n\n// fetchAllMessages\nconst fetchAllMessagesSuccess = (allMessages) => {\n    return {\n        type: FETCH_ALLMESSAGES_SUCCESS,\n        payload: allMessages\n    }\n}\n\nconst fetchAllMessagesBegin = () => {\n    return {\n        type: FETCH_ALLMESSAGES_BEGIN,\n    }\n}\n\nconst fetchAllMessagesError = (error, message, status, path) => {\n    return {\n        type: FETCH_ALLMESSAGES_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst fetchAllMessagesAction = (chatUserId) => {\n    return (dispatch) => {\n        dispatch(fetchAllMessagesBegin())\n        return requester.get('/message/all/' + chatUserId, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(fetchAllMessagesError(error, message, status, path));\n            } else {\n                dispatch(fetchAllMessagesSuccess(response));\n                dispatch(fetchAllUnreadMessagesAction());\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(fetchAllMessagesError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\nconst addMessageAction = (messageBody) => {\n    return {\n        type: ADD_MESSAGE,\n        payload: messageBody\n    }\n}\n\n// fetchAllUnreadMessages\nconst fetchAllUnreadMessagesSuccess = (allUnreadMessages) => {\n    return {\n        type: FETCH_UNREADMESSAGES_SUCCESS,\n        payload: allUnreadMessages\n    }\n}\n\nconst fetchAllUnreadMessagesBegin = () => {\n    return {\n        type: FETCH_UNREADMESSAGES_BEGIN,\n    }\n}\n\nconst fetchAllUnreadMessagesError = (error, message, status, path) => {\n    return {\n        type: FETCH_UNREADMESSAGES_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst fetchAllUnreadMessagesAction = () => {\n    return (dispatch) => {\n        dispatch(fetchAllUnreadMessagesBegin())\n        return requester.get('/message/friend', (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(fetchAllUnreadMessagesError(error, message, status, path));\n            } else {\n                dispatch(fetchAllUnreadMessagesSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(fetchAllUnreadMessagesError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// LoadUserMessages and showUserChatBox\nconst triggerMessageLoadAction = (userData) => {\n    return {\n        type: LOAD_USER_MESSAGES,\n        payload: userData\n    }\n}\n\nexport { fetchAllMessagesAction, addMessageAction, fetchAllUnreadMessagesAction, triggerMessageLoadAction };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
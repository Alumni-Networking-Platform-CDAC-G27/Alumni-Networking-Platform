{"ast":null,"code":"import { REMOVE_COMMENT_BEGIN, REMOVE_COMMENT_SUCCESS, REMOVE_COMMENT_ERROR, ADDLIKE_COMMENT_SUCCESS, ADDLIKE_COMMENT_BEGIN, ADDLIKE_COMMENT_ERROR, CREATE_COMMENT_SUCCESS, CREATE_COMMENT_BEGIN, CREATE_COMMENT_ERROR } from '../actions/actionTypes';\n\n// createCommentReducer\nconst initialStateCreateComment = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst createCommentReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateCreateComment;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case CREATE_COMMENT_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case CREATE_COMMENT_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n    case CREATE_COMMENT_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\n\n// removeCommentReducer\nconst initialStateRemoveComment = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst removeCommentReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateRemoveComment;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case REMOVE_COMMENT_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case REMOVE_COMMENT_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n    case REMOVE_COMMENT_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\n\n// addLikeCommentReducer\nconst initialStateAddLikeComment = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst addLikeCommentReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateAddLikeComment;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADDLIKE_COMMENT_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case ADDLIKE_COMMENT_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n    case ADDLIKE_COMMENT_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\nexport { createCommentReducer, removeCommentReducer, addLikeCommentReducer };","map":{"version":3,"names":["REMOVE_COMMENT_BEGIN","REMOVE_COMMENT_SUCCESS","REMOVE_COMMENT_ERROR","ADDLIKE_COMMENT_SUCCESS","ADDLIKE_COMMENT_BEGIN","ADDLIKE_COMMENT_ERROR","CREATE_COMMENT_SUCCESS","CREATE_COMMENT_BEGIN","CREATE_COMMENT_ERROR","initialStateCreateComment","hasError","error","message","status","path","loading","createCommentReducer","state","arguments","length","undefined","action","type","Object","assign","payload","initialStateRemoveComment","removeCommentReducer","initialStateAddLikeComment","addLikeCommentReducer"],"sources":["C:/Users/rijul/Downloads/Alumni/Alumani/Client/src/store/reducers/commentReducer.js"],"sourcesContent":["import {\n    REMOVE_COMMENT_BEGIN, REMOVE_COMMENT_SUCCESS, REMOVE_COMMENT_ERROR,\n    ADDLIKE_COMMENT_SUCCESS, ADDLIKE_COMMENT_BEGIN, ADDLIKE_COMMENT_ERROR,\n    CREATE_COMMENT_SUCCESS, CREATE_COMMENT_BEGIN, CREATE_COMMENT_ERROR,\n} from '../actions/actionTypes';\n\n\n// createCommentReducer\nconst initialStateCreateComment = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst createCommentReducer = (state = initialStateCreateComment, action) => {\n    switch (action.type) {\n        case CREATE_COMMENT_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case CREATE_COMMENT_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case CREATE_COMMENT_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// removeCommentReducer\nconst initialStateRemoveComment = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst removeCommentReducer = (state = initialStateRemoveComment, action) => {\n    switch (action.type) {\n        case REMOVE_COMMENT_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case REMOVE_COMMENT_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case REMOVE_COMMENT_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// addLikeCommentReducer\nconst initialStateAddLikeComment = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst addLikeCommentReducer = (state = initialStateAddLikeComment, action) => {\n    switch (action.type) {\n        case ADDLIKE_COMMENT_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case ADDLIKE_COMMENT_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case ADDLIKE_COMMENT_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\nexport { createCommentReducer, removeCommentReducer, addLikeCommentReducer }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{Component,Fragment}from'react';import{NavLink}from'react-router-dom';import{userService}from'../../infrastructure';import{toast}from'react-toastify';import{ToastComponent}from'../common';import MessageNavBarRow from'./MessageNavbarRow';import'./css/MessageNavbarRow.css';import'./css/Navbar.css';import{connect}from'react-redux';import{fetchAllUnreadMessagesAction,triggerMessageLoadAction}from'../../store/actions/messageActions';import{searchResultsAction}from'../../store/actions/userActions';class Navbar extends Component{constructor(props){super(props);this.getAllFriendMessages=()=>{if(this.state.showDropdown==='show-dropdown'){this.changeMessaboxVisibility();return;}this.props.loadAllUnreadMessages();this.setState({showDropdown:'show-dropdown'});};this.triggerMessageLoad=(id,firstName,lastName,profilePicUrl,event)=>{this.changeMessaboxVisibility();const userData={id,firstName,lastName,profilePicUrl};this.props.triggerMessageLoad(userData);};this.handleBlur=()=>event=>{this.setState({showDropdown:''});};this.changeMessaboxVisibility=()=>{if(this.state.showDropdown===''){this.setState({showDropdown:'show-dropdown'});}else{this.setState({showDropdown:''});}};this.getUnreadMessagesCount=()=>{let count=this.props.allUnreadMessages.reduce((a,b)=>{return a+b.count;},0);if(count>0){this.setState({unreadMessages:count,displayMessageCount:true});}else{this.setState({unreadMessages:0,displayMessageCount:false});}};this.state={search:'',showDropdown:'',unreadMessages:0,displayMessageCount:true,allUnreadMessages:[]};this.searchFriend=this.searchFriend.bind(this);this.onChangeHandler=this.onChangeHandler.bind(this);this.getAllFriendMessages=this.getAllFriendMessages.bind(this);this.triggerMessageLoad=this.triggerMessageLoad.bind(this);this.handleBlur=this.handleBlur.bind(this);this.changeMessaboxVisibility=this.changeMessaboxVisibility.bind(this);}componentDidUpdate(prevProps,prevState){const loading=this.props.fetchAllUnreadMessages.loading;if(!loading&&!this.props.fetchAllUnreadMessages.hasError&&this.props.fetchAllUnreadMessages!==prevProps.fetchAllUnreadMessages){this.setState({displayMessageCount:true},()=>{this.getUnreadMessagesCount();});}const errorMessage=this.getErrorMessage(prevProps);const successMessage=this.getSuccessMessage(prevProps);if(errorMessage){toast.error(/*#__PURE__*/React.createElement(ToastComponent.errorToast,{text:errorMessage}),{position:toast.POSITION.TOP_RIGHT});}else if(successMessage){toast.success(/*#__PURE__*/React.createElement(ToastComponent.successToast,{text:successMessage}),{position:toast.POSITION.TOP_RIGHT});}}getSuccessMessage(prevProps){if(!this.props.fetchAllUnreadMessages.hasError&&this.props.fetchAllUnreadMessages.message&&this.props.fetchAllUnreadMessages!==prevProps.fetchAllUnreadMessages){return this.props.fetchAllLogs.message;}else if(!this.props.searchResultsData.hasError&&this.props.searchResultsData.message&&this.props.searchResultsData!==prevProps.searchResultsData){return this.props.searchResultsData.message;}return null;}getErrorMessage(prevProps){if(this.props.fetchAllUnreadMessages.hasError&&prevProps.fetchAllUnreadMessages.error!==this.props.fetchAllUnreadMessages.error){return this.props.fetchAllUnreadMessages.message||'Server Error';}else if(this.props.searchResultsData.hasError&&prevProps.searchResultsData.error!==this.props.searchResultsData.error){return this.props.searchResultsData.message||'Server Error';}return null;}searchFriend(event){event.preventDefault();const loggedInUserId=this.props.loggedInUserData.id;const search=this.state.search;this.props.searchResult(loggedInUserId,search);return this.props.history.push({pathname:\"/home/users/search\"});}onChangeHandler(event){this.setState({[event.target.name]:event.target.value});}render(){const isAdmin=userService.isAdmin();const isRoot=userService.isRoot();const userId=userService.getUserId();const{loggedIn,onLogout}=this.props;const showDropdown=this.state.showDropdown;let pathname=this.props.location.pathname!==\"/\";const isFrendRequestsArrEmpty=this.props.friendRequestsArr.length>0;let messages=/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"dropdown-messagebox-header\",onClick:this.changeHeight},/*#__PURE__*/React.createElement(\"h5\",{className:\"dropdown-chat-title\",style:{color:' #333'}},\"There are no messages for you!\")));if(this.props.allUnreadMessages.length>0){messages=/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"messagebox-navbar-container\"},this.props.allUnreadMessages.map(message=>/*#__PURE__*/React.createElement(MessageNavBarRow,Object.assign({key:message.id},message,{triggerMessageLoad:this.triggerMessageLoad,className:\"dropdown-item\"})))));}return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",name:\"main-nav-toggle\",id:\"main-nav-toggle\"}),/*#__PURE__*/React.createElement(\"header\",{className:\"site-header\"},/*#__PURE__*/React.createElement(\"section\",{className:\"navbar-section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"navbar-wrapper\"},/*#__PURE__*/React.createElement(\"div\",{className:\"nav-searchbar-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"site-logo\"},/*#__PURE__*/React.createElement(NavLink,{to:\"/\",className:\"nav-link text-center leading-tight\"},/*#__PURE__*/React.createElement(\"div\",null,\"Alumni\"),/*#__PURE__*/React.createElement(\"div\",null,\"Networking\"),/*#__PURE__*/React.createElement(\"div\",null,\"Platform\"))),loggedIn&&/*#__PURE__*/React.createElement(\"form\",{className:\"form-inline my-2 my-lg-0\",onSubmit:this.searchFriend},/*#__PURE__*/React.createElement(\"input\",{className:\"form-control mr-sm-2\",type:\"search\",placeholder:\"Search\",\"aria-label\":\"Search\",name:\"search\",id:\"search\",value:this.state.search,onChange:this.onChangeHandler}),/*#__PURE__*/React.createElement(\"button\",{className:\"btn button-navbar-outline my-2 my-sm-0\",type:\"submit\"},\"Search\"))),/*#__PURE__*/React.createElement(\"label\",{id:\"toggle\",htmlFor:\"main-nav-toggle\",style:{'marginBottom':'0'}},/*#__PURE__*/React.createElement(\"span\",null,\"Menu\")),/*#__PURE__*/React.createElement(\"nav\",{className:\"nav-main\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"nav-ul\"},loggedIn&&/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(NavLink,{exact:true,to:`/home/profile/${userId}`,className:\"nav-link  fas fa-user tooltipCustom\"},\" \",userService.getUsername(),/*#__PURE__*/React.createElement(\"span\",{className:\"tooltiptextCustom\"},\"Profile\"))),loggedIn&&/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(NavLink,{exact:true,to:`/home/comments/${userId}`,className:\"nav-link \"},\"Home\")),loggedIn&&/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(NavLink,{exact:true,to:`/home/findFriends/${userId}`,className:\"nav-link \"},\"Find friends!\")),loggedIn&&/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(NavLink,{exact:true,to:`/home/friendRequests/${userId}`,className:\"nav-link tooltipCustom\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-user-friends\"}),isFrendRequestsArrEmpty&&/*#__PURE__*/React.createElement(\"span\",{id:\"icon-badge-container-friend-requests\"},this.props.friendRequestsArr.length),/*#__PURE__*/React.createElement(\"span\",{className:\"tooltiptextCustom\",id:\"friend-requests-tooltip\"},\"Friend Requests\"))),loggedIn&&pathname&&/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\",id:\"onclick-wrapper\",onClick:this.getAllFriendMessages,onBlur:this.handleBlur('onclick-wrapper')},/*#__PURE__*/React.createElement(\"div\",{className:\"icon-badge-wrapper\"},/*#__PURE__*/React.createElement(NavLink,{className:\"fas fa-envelope tooltipCustom nav-link\",to:\"#\"},/*#__PURE__*/React.createElement(\"span\",{className:\"tooltiptextCustom\"},\"Messages\")),this.state.displayMessageCount&&/*#__PURE__*/React.createElement(\"span\",{id:\"icon-badge-container-messages\"},this.state.unreadMessages)),/*#__PURE__*/React.createElement(\"div\",{className:`dropdown-container ${showDropdown}`},/*#__PURE__*/React.createElement(\"div\",{className:\"dropdown-messagebox-header\",onClick:this.changeHeight},/*#__PURE__*/React.createElement(\"div\",{className:\"dropdown-messagebox-chat-icon\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-envelope\"})),/*#__PURE__*/React.createElement(\"h4\",{className:\"dropdown-chat-title\",style:{color:' #333'}},\"Messages\")),messages)),loggedIn&&(isRoot||isAdmin)&&/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(NavLink,{exact:true,to:`/home/logs/${userId}`,className:\"nav-link\"},\" Logs\")),loggedIn&&/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(NavLink,{exact:true,to:\"#\",className:\"nav-link \",onClick:onLogout},\"Logout\")),!loggedIn&&/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(NavLink,{exact:true,to:\"/login\",className:\"nav-link\"},\"Login\")),!loggedIn&&/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(NavLink,{exact:true,to:\"/register\",className:\"nav-link\"},\"Register\"))))))));}}const mapStateToProps=state=>{return{timeLineUserData:state.timeLineUserData,loggedInUserData:state.loggedInUserData,fetchAllUnreadMessages:state.fetchAllUnreadMessages,allUnreadMessages:state.fetchAllUnreadMessages.allUnreadMessages,searchResultsData:state.searchResults,friendRequestsArr:state.findFriends.userWaitingForAcceptingRequest};};const mapDispatchToProps=dispatch=>{return{triggerMessageLoad:userData=>{dispatch(triggerMessageLoadAction(userData));},searchResult:(loggedInUserId,search)=>{dispatch(searchResultsAction(loggedInUserId,search));},loadAllUnreadMessages:()=>{dispatch(fetchAllUnreadMessagesAction());}};};export default connect(mapStateToProps,mapDispatchToProps)(Navbar);","map":{"version":3,"names":["React","Component","Fragment","NavLink","userService","toast","ToastComponent","MessageNavBarRow","connect","fetchAllUnreadMessagesAction","triggerMessageLoadAction","searchResultsAction","Navbar","constructor","props","getAllFriendMessages","state","showDropdown","changeMessaboxVisibility","loadAllUnreadMessages","setState","triggerMessageLoad","id","firstName","lastName","profilePicUrl","event","userData","handleBlur","getUnreadMessagesCount","count","allUnreadMessages","reduce","a","b","unreadMessages","displayMessageCount","search","searchFriend","bind","onChangeHandler","componentDidUpdate","prevProps","prevState","loading","fetchAllUnreadMessages","hasError","errorMessage","getErrorMessage","successMessage","getSuccessMessage","error","createElement","errorToast","text","position","POSITION","TOP_RIGHT","success","successToast","message","fetchAllLogs","searchResultsData","preventDefault","loggedInUserId","loggedInUserData","searchResult","history","push","pathname","target","name","value","render","isAdmin","isRoot","userId","getUserId","loggedIn","onLogout","location","isFrendRequestsArrEmpty","friendRequestsArr","length","messages","className","onClick","changeHeight","style","color","map","Object","assign","key","type","to","onSubmit","placeholder","onChange","htmlFor","exact","getUsername","onBlur","mapStateToProps","timeLineUserData","searchResults","findFriends","userWaitingForAcceptingRequest","mapDispatchToProps","dispatch"],"sources":["C:/Users/rijul/Downloads/Alumni/Alumani/Client/src/components/home/NavBar.jsx"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { userService } from '../../infrastructure';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport MessageNavBarRow from './MessageNavbarRow';\nimport './css/MessageNavbarRow.css';\nimport './css/Navbar.css';\n\nimport { connect } from 'react-redux';\nimport { fetchAllUnreadMessagesAction, triggerMessageLoadAction } from '../../store/actions/messageActions';\nimport { searchResultsAction } from '../../store/actions/userActions';\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            search: '',\n            showDropdown: '',\n            unreadMessages: 0,\n            displayMessageCount: true,\n            allUnreadMessages: [],\n        }\n\n        this.searchFriend = this.searchFriend.bind(this);\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.getAllFriendMessages = this.getAllFriendMessages.bind(this);\n        this.triggerMessageLoad = this.triggerMessageLoad.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.changeMessaboxVisibility = this.changeMessaboxVisibility.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const loading = this.props.fetchAllUnreadMessages.loading;\n\n        if (!loading && !this.props.fetchAllUnreadMessages.hasError && this.props.fetchAllUnreadMessages !== prevProps.fetchAllUnreadMessages) {\n            this.setState({\n                displayMessageCount: true,\n            }, () => {\n                this.getUnreadMessagesCount();\n            })\n        }\n\n        const errorMessage = this.getErrorMessage(prevProps);\n        const successMessage = this.getSuccessMessage(prevProps)\n\n        if (errorMessage) {\n            toast.error(<ToastComponent.errorToast text={errorMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        } else if (successMessage) {\n            toast.success(<ToastComponent.successToast text={successMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n    }\n\n    getSuccessMessage(prevProps) {\n        if (!this.props.fetchAllUnreadMessages.hasError && this.props.fetchAllUnreadMessages.message && this.props.fetchAllUnreadMessages !== prevProps.fetchAllUnreadMessages) {\n            return this.props.fetchAllLogs.message;\n        }\n        else if (!this.props.searchResultsData.hasError && this.props.searchResultsData.message && this.props.searchResultsData !== prevProps.searchResultsData) {\n            return this.props.searchResultsData.message;\n        }\n\n        return null;\n    }\n\n    getErrorMessage(prevProps) {\n        if (this.props.fetchAllUnreadMessages.hasError && prevProps.fetchAllUnreadMessages.error !== this.props.fetchAllUnreadMessages.error) {\n            return this.props.fetchAllUnreadMessages.message || 'Server Error';\n        }\n        else if (this.props.searchResultsData.hasError && prevProps.searchResultsData.error !== this.props.searchResultsData.error) {\n            return this.props.searchResultsData.message || 'Server Error';\n        }\n\n        return null;\n    }\n\n    searchFriend(event) {\n        event.preventDefault();\n\n        const loggedInUserId = this.props.loggedInUserData.id;\n        const search = this.state.search;\n\n        this.props.searchResult(loggedInUserId, search);\n        return this.props.history.push({ pathname: \"/home/users/search\" });\n    }\n\n    onChangeHandler(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    getAllFriendMessages = () => {\n        if (this.state.showDropdown === 'show-dropdown') {\n            this.changeMessaboxVisibility();\n            return;\n        }\n\n        this.props.loadAllUnreadMessages();\n        this.setState({ showDropdown: 'show-dropdown' })\n    }\n\n    triggerMessageLoad = (id, firstName, lastName, profilePicUrl, event) => {\n        this.changeMessaboxVisibility();\n        const userData = { id, firstName, lastName, profilePicUrl }\n        this.props.triggerMessageLoad(userData);\n    }\n\n    handleBlur = () => (event) => {\n        this.setState({\n            showDropdown: '',\n        });\n    }\n\n    changeMessaboxVisibility = () => {\n        if (this.state.showDropdown === '') {\n            this.setState({ showDropdown: 'show-dropdown' })\n        } else {\n            this.setState({ showDropdown: '' })\n        }\n    }\n\n    getUnreadMessagesCount = () => {\n        let count = this.props.allUnreadMessages.reduce((a, b) => {\n            return a + b.count;\n        }, 0)\n      \n        if (count > 0) {\n            this.setState({\n                unreadMessages: count,\n                displayMessageCount: true,\n            })\n        } else {\n            this.setState({\n                unreadMessages: 0,\n                displayMessageCount: false,\n\n            })\n        }\n    }\n\n    render() {\n        const isAdmin = userService.isAdmin();\n        const isRoot = userService.isRoot();\n        const userId = userService.getUserId();\n\n        const { loggedIn, onLogout } = this.props;\n        const showDropdown = this.state.showDropdown;\n        let pathname = this.props.location.pathname !== \"/\";\n\n        const isFrendRequestsArrEmpty = this.props.friendRequestsArr.length > 0\n\n        let messages = (\n            <Fragment>\n                <div className=\"dropdown-messagebox-header\" onClick={this.changeHeight}>\n                    <h5 className=\"dropdown-chat-title\" style={{ color: ' #333' }}>\n                        There are no messages for you!\n                    </h5>\n                </div>\n            </Fragment>\n        )\n\n        if (this.props.allUnreadMessages.length > 0) {\n            messages = (\n                <Fragment>\n                    <div className=\"messagebox-navbar-container\">\n                        {this.props.allUnreadMessages.map(message =>\n                            <MessageNavBarRow\n                                key={message.id}\n                                {...message}\n                                triggerMessageLoad={this.triggerMessageLoad}\n                                className=\"dropdown-item\"\n                            />\n                        )}\n                    </div>\n                </Fragment>\n            )\n        }\n\n        return (\n            <Fragment >\n                <input type=\"checkbox\" name=\"main-nav-toggle\" id=\"main-nav-toggle\" />\n                <header className=\"site-header\">\n                    <section className=\"navbar-section\">\n                        <div className=\"navbar-wrapper\">\n                            <div className=\"nav-searchbar-container\">\n                                <div className=\"site-logo\">\n                                    {/* <NavLink to=\"/\" className=\"nav-link \" >Alumni Networking Platform</NavLink> */}\n                                  <NavLink to=\"/\" className=\"nav-link text-center leading-tight\">\n  <div>Alumni</div>\n  <div>Networking</div>\n  <div>Platform</div>\n</NavLink>\n\n                                </div>\n                                {loggedIn && <form className=\"form-inline my-2 my-lg-0\" onSubmit={this.searchFriend}>\n                                    <input\n                                        className=\"form-control mr-sm-2\"\n                                        type=\"search\"\n                                        placeholder=\"Search\"\n                                        aria-label=\"Search\"\n                                        name=\"search\"\n                                        id=\"search\"\n                                        value={this.state.search}\n                                        onChange={this.onChangeHandler}\n                                    />\n\n                                    <button className=\"btn button-navbar-outline my-2 my-sm-0\" type=\"submit\">Search</button>\n                                </form>}\n                            </div>\n\n                            <label id=\"toggle\" htmlFor=\"main-nav-toggle\" style={{ 'marginBottom': '0' }}><span>Menu</span></label>\n\n                            <nav className=\"nav-main\">\n                                <ul className=\"nav-ul\">\n                                    {loggedIn && <li className=\"nav-item\"><NavLink exact to={`/home/profile/${userId}`} className=\"nav-link  fas fa-user tooltipCustom\"  > {userService.getUsername()}<span className=\"tooltiptextCustom\">Profile</span></NavLink></li>}\n\n                                    {loggedIn && <li className=\"nav-item\"><NavLink exact to={`/home/comments/${userId}`} className=\"nav-link \">Home</NavLink></li>}\n                                    {loggedIn && <li className=\"nav-item\"><NavLink exact to={`/home/findFriends/${userId}`} className=\"nav-link \" >Find friends!</NavLink></li>}\n\n\n                                    {loggedIn &&\n                                        <li className=\"nav-item\">\n                                            <NavLink exact to={`/home/friendRequests/${userId}`} className=\"nav-link tooltipCustom\">\n                                                <i className=\"fas fa-user-friends\"></i>\n                                                {isFrendRequestsArrEmpty && <span id=\"icon-badge-container-friend-requests\">{this.props.friendRequestsArr.length}</span>}\n                                                {/* <i id=\"icon-badge-container-friend-requests\" data-count=\"2\" className=\"fas fa-user-friends\"></i> */}\n                                                <span className=\"tooltiptextCustom\" id=\"friend-requests-tooltip\">Friend Requests</span>\n                                            </NavLink>\n                                        </li>}\n\n                                    {loggedIn && pathname &&\n                                        <li className=\"nav-item\"\n                                            id=\"onclick-wrapper\"\n                                            onClick={this.getAllFriendMessages}\n                                            onBlur={this.handleBlur('onclick-wrapper')}\n                                        >\n                                            <div className=\"icon-badge-wrapper\">\n                                                <NavLink className=\"fas fa-envelope tooltipCustom nav-link\" to=\"#\">\n                                                    <span className=\"tooltiptextCustom\">Messages</span>\n                                                </NavLink>\n                                                {this.state.displayMessageCount && <span id=\"icon-badge-container-messages\">{this.state.unreadMessages}</span>}\n                                            </div>\n\n                                            <div className={`dropdown-container ${showDropdown}`}>\n                                                <div className=\"dropdown-messagebox-header\" onClick={this.changeHeight}>\n                                                    <div className=\"dropdown-messagebox-chat-icon\">\n                                                        <i className=\"fas fa-envelope\"></i>\n                                                    </div>\n                                                    <h4 className=\"dropdown-chat-title\" style={{ color: ' #333' }}>\n                                                        Messages\n                                                    </h4>\n                                                </div>\n                                                {messages}\n                                            </div>\n                                        </li>\n                                    }\n\n                                    {(loggedIn && (isRoot || isAdmin)) && <li className=\"nav-item\"><NavLink exact to={`/home/logs/${userId}`} className=\"nav-link\"> Logs</NavLink></li>}\n                                    {loggedIn && <li className=\"nav-item\"><NavLink exact to=\"#\" className=\"nav-link \" onClick={onLogout} >Logout</NavLink></li>}\n                                    {!loggedIn && <li className=\"nav-item\"><NavLink exact to=\"/login\" className=\"nav-link\" >Login</NavLink></li>}\n                                    {!loggedIn && <li className=\"nav-item\"><NavLink exact to=\"/register\" className=\"nav-link\" >Register</NavLink></li>}\n                                </ul>\n                            </nav>\n                        </div>\n                    </section>\n                </header>\n            </Fragment >\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        timeLineUserData: state.timeLineUserData,\n        loggedInUserData: state.loggedInUserData,\n\n        fetchAllUnreadMessages: state.fetchAllUnreadMessages,\n        allUnreadMessages: state.fetchAllUnreadMessages.allUnreadMessages,\n\n        searchResultsData: state.searchResults,\n\n        friendRequestsArr: state.findFriends.userWaitingForAcceptingRequest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        triggerMessageLoad: (userData) => { dispatch(triggerMessageLoadAction(userData)) },\n        searchResult: (loggedInUserId, search) => { dispatch(searchResultsAction(loggedInUserId, search)) },\n        loadAllUnreadMessages: () => { dispatch(fetchAllUnreadMessagesAction()) },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
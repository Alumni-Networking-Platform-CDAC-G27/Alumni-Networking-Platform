{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Administrator\\\\Documents\\\\0011_Final_PROJECT\\\\Alumni-Networking-Platform\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { FETCH_ALLMESSAGES_BEGIN, FETCH_ALLMESSAGES_SUCCESS, FETCH_ALLMESSAGES_ERROR, ADD_MESSAGE, FETCH_UNREADMESSAGES_SUCCESS, FETCH_UNREADMESSAGES_BEGIN, FETCH_UNREADMESSAGES_ERROR, LOAD_USER_MESSAGES } from '../actions/actionTypes';\n\n// fetchAllMessagesReducer\nvar initialStateAllChatFriends = {\n  allMessagesArr: [],\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nfunction fetchAllMessagesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateAllChatFriends;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FETCH_ALLMESSAGES_BEGIN:\n      return Object.assign({}, state, {\n        allMessagesArr: [],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case FETCH_ALLMESSAGES_SUCCESS:\n      return Object.assign({}, state, {\n        allMessagesArr: _toConsumableArray(action.payload),\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      });\n    case FETCH_ALLMESSAGES_ERROR:\n      return Object.assign({}, state, {\n        allMessagesArr: [],\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    case ADD_MESSAGE:\n      return Object.assign({}, state, {\n        allMessagesArr: [].concat(_toConsumableArray(state.allMessagesArr), [action.payload]),\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}\n\n// fetchAllUnreadMessagesReducer\nvar initialStateAllUnreadMessages = {\n  allUnreadMessages: [],\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nfunction fetchAllUnreadMessagesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateAllUnreadMessages;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FETCH_UNREADMESSAGES_BEGIN:\n      return Object.assign({}, state, {\n        allUnreadMessages: [],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case FETCH_UNREADMESSAGES_SUCCESS:\n      return Object.assign({}, state, {\n        allUnreadMessages: _toConsumableArray(action.payload),\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      });\n    case FETCH_UNREADMESSAGES_ERROR:\n      return Object.assign({}, state, {\n        allUnreadMessages: [],\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}\n\n// triggerMessageLoadAction\nfunction triggerMessageLoadReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LOAD_USER_MESSAGES:\n      return action.payload;\n    default:\n      return state;\n  }\n}\nexport { fetchAllMessagesReducer, fetchAllUnreadMessagesReducer, triggerMessageLoadReducer };","map":{"version":3,"names":["FETCH_ALLMESSAGES_BEGIN","FETCH_ALLMESSAGES_SUCCESS","FETCH_ALLMESSAGES_ERROR","ADD_MESSAGE","FETCH_UNREADMESSAGES_SUCCESS","FETCH_UNREADMESSAGES_BEGIN","FETCH_UNREADMESSAGES_ERROR","LOAD_USER_MESSAGES","initialStateAllChatFriends","allMessagesArr","hasError","error","message","status","path","loading","fetchAllMessagesReducer","state","arguments","length","undefined","action","type","Object","assign","_toConsumableArray","payload","concat","initialStateAllUnreadMessages","allUnreadMessages","fetchAllUnreadMessagesReducer","triggerMessageLoadReducer"],"sources":["C:/Users/Administrator/Documents/0011_Final_PROJECT/Alumni-Networking-Platform/Client/src/store/reducers/messagesReducer.js"],"sourcesContent":["import {\n    FETCH_ALLMESSAGES_BEGIN, FETCH_ALLMESSAGES_SUCCESS, FETCH_ALLMESSAGES_ERROR, ADD_MESSAGE,\n    FETCH_UNREADMESSAGES_SUCCESS, FETCH_UNREADMESSAGES_BEGIN, FETCH_UNREADMESSAGES_ERROR, \n    LOAD_USER_MESSAGES,\n} from '../actions/actionTypes';\n\n// fetchAllMessagesReducer\nconst initialStateAllChatFriends = {\n    allMessagesArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nfunction fetchAllMessagesReducer(state = initialStateAllChatFriends, action) {\n    switch (action.type) {\n        case FETCH_ALLMESSAGES_BEGIN:\n            return Object.assign({}, state, {\n                allMessagesArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FETCH_ALLMESSAGES_SUCCESS:\n            return Object.assign({}, state, {\n                allMessagesArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case FETCH_ALLMESSAGES_ERROR:\n            return Object.assign({}, state, {\n                allMessagesArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        case ADD_MESSAGE:\n            return Object.assign({}, state, {\n                allMessagesArr: [...state.allMessagesArr, action.payload],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n\n    }\n}\n\n// fetchAllUnreadMessagesReducer\nconst initialStateAllUnreadMessages = {\n    allUnreadMessages: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nfunction fetchAllUnreadMessagesReducer(state = initialStateAllUnreadMessages, action) {\n    switch (action.type) {\n        case FETCH_UNREADMESSAGES_BEGIN:\n            return Object.assign({}, state, {\n                allUnreadMessages: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FETCH_UNREADMESSAGES_SUCCESS:\n            return Object.assign({}, state, {\n                allUnreadMessages: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case FETCH_UNREADMESSAGES_ERROR:\n            return Object.assign({}, state, {\n                allUnreadMessages: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n\n    }\n}\n\n// triggerMessageLoadAction\nfunction triggerMessageLoadReducer(state = {}, action) {\n    switch (action.type) {\n        case LOAD_USER_MESSAGES:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport {\n    fetchAllMessagesReducer, fetchAllUnreadMessagesReducer, triggerMessageLoadReducer,\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nrequire('./shims');\nvar URL = require('url-parse'),\n  inherits = require('inherits'),\n  JSON3 = require('json3'),\n  random = require('./utils/random'),\n  escape = require('./utils/escape'),\n  urlUtils = require('./utils/url'),\n  eventUtils = require('./utils/event'),\n  transport = require('./utils/transport'),\n  objectUtils = require('./utils/object'),\n  browser = require('./utils/browser'),\n  log = require('./utils/log'),\n  Event = require('./event/event'),\n  EventTarget = require('./event/eventtarget'),\n  loc = require('./location'),\n  CloseEvent = require('./event/close'),\n  TransportMessageEvent = require('./event/trans-message'),\n  InfoReceiver = require('./info-receiver');\nvar debug = function () {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:main');\n}\nvar transports;\n\n// follow constructor steps defined at http://dev.w3.org/html5/websockets/#the-websocket-interface\nfunction SockJS(url, protocols, options) {\n  if (!(this instanceof SockJS)) {\n    return new SockJS(url, protocols, options);\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'SockJS: 1 argument required, but only 0 present\");\n  }\n  EventTarget.call(this);\n  this.readyState = SockJS.CONNECTING;\n  this.extensions = '';\n  this.protocol = '';\n\n  // non-standard extension\n  options = options || {};\n  if (options.protocols_whitelist) {\n    log.warn(\"'protocols_whitelist' is DEPRECATED. Use 'transports' instead.\");\n  }\n  this._transportsWhitelist = options.transports;\n  this._transportOptions = options.transportOptions || {};\n  var sessionId = options.sessionId || 8;\n  if (typeof sessionId === 'function') {\n    this._generateSessionId = sessionId;\n  } else if (typeof sessionId === 'number') {\n    this._generateSessionId = function () {\n      return random.string(sessionId);\n    };\n  } else {\n    throw new TypeError('If sessionId is used in the options, it needs to be a number or a function.');\n  }\n  this._server = options.server || random.numberString(1000);\n\n  // Step 1 of WS spec - parse and validate the url. Issue #8\n  var parsedUrl = new URL(url);\n  if (!parsedUrl.host || !parsedUrl.protocol) {\n    throw new SyntaxError(\"The URL '\" + url + \"' is invalid\");\n  } else if (parsedUrl.hash) {\n    throw new SyntaxError('The URL must not contain a fragment');\n  } else if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n    throw new SyntaxError(\"The URL's scheme must be either 'http:' or 'https:'. '\" + parsedUrl.protocol + \"' is not allowed.\");\n  }\n  var secure = parsedUrl.protocol === 'https:';\n  // Step 2 - don't allow secure origin with an insecure protocol\n  if (loc.protocol === 'https:' && !secure) {\n    throw new Error('SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS');\n  }\n\n  // Step 3 - check port access - no need here\n  // Step 4 - parse protocols argument\n  if (!protocols) {\n    protocols = [];\n  } else if (!Array.isArray(protocols)) {\n    protocols = [protocols];\n  }\n\n  // Step 5 - check protocols argument\n  var sortedProtocols = protocols.sort();\n  sortedProtocols.forEach(function (proto, i) {\n    if (!proto) {\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is invalid.\");\n    }\n    if (i < sortedProtocols.length - 1 && proto === sortedProtocols[i + 1]) {\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is duplicated.\");\n    }\n  });\n\n  // Step 6 - convert origin\n  var o = urlUtils.getOrigin(loc.href);\n  this._origin = o ? o.toLowerCase() : null;\n\n  // remove the trailing slash\n  parsedUrl.set('pathname', parsedUrl.pathname.replace(/\\/+$/, ''));\n\n  // store the sanitized url\n  this.url = parsedUrl.href;\n  debug('using url', this.url);\n\n  // Step 7 - start connection in background\n  // obtain server info\n  // http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html#section-26\n  this._urlInfo = {\n    nullOrigin: !browser.hasDomain(),\n    sameOrigin: urlUtils.isOriginEqual(this.url, loc.href),\n    sameScheme: urlUtils.isSchemeEqual(this.url, loc.href)\n  };\n  this._ir = new InfoReceiver(this.url, this._urlInfo);\n  this._ir.once('finish', this._receiveInfo.bind(this));\n}\ninherits(SockJS, EventTarget);\nfunction userSetCode(code) {\n  return code === 1000 || code >= 3000 && code <= 4999;\n}\nSockJS.prototype.close = function (code, reason) {\n  // Step 1\n  if (code && !userSetCode(code)) {\n    throw new Error('InvalidAccessError: Invalid code');\n  }\n  // Step 2.4 states the max is 123 bytes, but we are just checking length\n  if (reason && reason.length > 123) {\n    throw new SyntaxError('reason argument has an invalid length');\n  }\n\n  // Step 3.1\n  if (this.readyState === SockJS.CLOSING || this.readyState === SockJS.CLOSED) {\n    return;\n  }\n\n  // TODO look at docs to determine how to set this\n  var wasClean = true;\n  this._close(code || 1000, reason || 'Normal closure', wasClean);\n};\nSockJS.prototype.send = function (data) {\n  // #13 - convert anything non-string to string\n  // TODO this currently turns objects into [object Object]\n  if (typeof data !== 'string') {\n    data = '' + data;\n  }\n  if (this.readyState === SockJS.CONNECTING) {\n    throw new Error('InvalidStateError: The connection has not been established yet');\n  }\n  if (this.readyState !== SockJS.OPEN) {\n    return;\n  }\n  this._transport.send(escape.quote(data));\n};\nSockJS.version = require('./version');\nSockJS.CONNECTING = 0;\nSockJS.OPEN = 1;\nSockJS.CLOSING = 2;\nSockJS.CLOSED = 3;\nSockJS.prototype._receiveInfo = function (info, rtt) {\n  debug('_receiveInfo', rtt);\n  this._ir = null;\n  if (!info) {\n    this._close(1002, 'Cannot connect to server');\n    return;\n  }\n\n  // establish a round-trip timeout (RTO) based on the\n  // round-trip time (RTT)\n  this._rto = this.countRTO(rtt);\n  // allow server to override url used for the actual transport\n  this._transUrl = info.base_url ? info.base_url : this.url;\n  info = objectUtils.extend(info, this._urlInfo);\n  debug('info', info);\n  // determine list of desired and supported transports\n  var enabledTransports = transports.filterToEnabled(this._transportsWhitelist, info);\n  this._transports = enabledTransports.main;\n  debug(this._transports.length + ' enabled transports');\n  this._connect();\n};\nSockJS.prototype._connect = function () {\n  for (var Transport = this._transports.shift(); Transport; Transport = this._transports.shift()) {\n    debug('attempt', Transport.transportName);\n    if (Transport.needBody) {\n      if (!global.document.body || typeof global.document.readyState !== 'undefined' && global.document.readyState !== 'complete' && global.document.readyState !== 'interactive') {\n        debug('waiting for body');\n        this._transports.unshift(Transport);\n        eventUtils.attachEvent('load', this._connect.bind(this));\n        return;\n      }\n    }\n\n    // calculate timeout based on RTO and round trips. Default to 5s\n    var timeoutMs = this._rto * Transport.roundTrips || 5000;\n    this._transportTimeoutId = setTimeout(this._transportTimeout.bind(this), timeoutMs);\n    debug('using timeout', timeoutMs);\n    var transportUrl = urlUtils.addPath(this._transUrl, '/' + this._server + '/' + this._generateSessionId());\n    var options = this._transportOptions[Transport.transportName];\n    debug('transport url', transportUrl);\n    var transportObj = new Transport(transportUrl, this._transUrl, options);\n    transportObj.on('message', this._transportMessage.bind(this));\n    transportObj.once('close', this._transportClose.bind(this));\n    transportObj.transportName = Transport.transportName;\n    this._transport = transportObj;\n    return;\n  }\n  this._close(2000, 'All transports failed', false);\n};\nSockJS.prototype._transportTimeout = function () {\n  debug('_transportTimeout');\n  if (this.readyState === SockJS.CONNECTING) {\n    if (this._transport) {\n      this._transport.close();\n    }\n    this._transportClose(2007, 'Transport timed out');\n  }\n};\nSockJS.prototype._transportMessage = function (msg) {\n  debug('_transportMessage', msg);\n  var self = this,\n    type = msg.slice(0, 1),\n    content = msg.slice(1),\n    payload;\n\n  // first check for messages that don't need a payload\n  switch (type) {\n    case 'o':\n      this._open();\n      return;\n    case 'h':\n      this.dispatchEvent(new Event('heartbeat'));\n      debug('heartbeat', this.transport);\n      return;\n  }\n  if (content) {\n    try {\n      payload = JSON3.parse(content);\n    } catch (e) {\n      debug('bad json', content);\n    }\n  }\n  if (typeof payload === 'undefined') {\n    debug('empty payload', content);\n    return;\n  }\n  switch (type) {\n    case 'a':\n      if (Array.isArray(payload)) {\n        payload.forEach(function (p) {\n          debug('message', self.transport, p);\n          self.dispatchEvent(new TransportMessageEvent(p));\n        });\n      }\n      break;\n    case 'm':\n      debug('message', this.transport, payload);\n      this.dispatchEvent(new TransportMessageEvent(payload));\n      break;\n    case 'c':\n      if (Array.isArray(payload) && payload.length === 2) {\n        this._close(payload[0], payload[1], true);\n      }\n      break;\n  }\n};\nSockJS.prototype._transportClose = function (code, reason) {\n  debug('_transportClose', this.transport, code, reason);\n  if (this._transport) {\n    this._transport.removeAllListeners();\n    this._transport = null;\n    this.transport = null;\n  }\n  if (!userSetCode(code) && code !== 2000 && this.readyState === SockJS.CONNECTING) {\n    this._connect();\n    return;\n  }\n  this._close(code, reason);\n};\nSockJS.prototype._open = function () {\n  debug('_open', this._transport.transportName, this.readyState);\n  if (this.readyState === SockJS.CONNECTING) {\n    if (this._transportTimeoutId) {\n      clearTimeout(this._transportTimeoutId);\n      this._transportTimeoutId = null;\n    }\n    this.readyState = SockJS.OPEN;\n    this.transport = this._transport.transportName;\n    this.dispatchEvent(new Event('open'));\n    debug('connected', this.transport);\n  } else {\n    // The server might have been restarted, and lost track of our\n    // connection.\n    this._close(1006, 'Server lost session');\n  }\n};\nSockJS.prototype._close = function (code, reason, wasClean) {\n  debug('_close', this.transport, code, reason, wasClean, this.readyState);\n  var forceFail = false;\n  if (this._ir) {\n    forceFail = true;\n    this._ir.close();\n    this._ir = null;\n  }\n  if (this._transport) {\n    this._transport.close();\n    this._transport = null;\n    this.transport = null;\n  }\n  if (this.readyState === SockJS.CLOSED) {\n    throw new Error('InvalidStateError: SockJS has already been closed');\n  }\n  this.readyState = SockJS.CLOSING;\n  setTimeout(function () {\n    this.readyState = SockJS.CLOSED;\n    if (forceFail) {\n      this.dispatchEvent(new Event('error'));\n    }\n    var e = new CloseEvent('close');\n    e.wasClean = wasClean || false;\n    e.code = code || 1000;\n    e.reason = reason;\n    this.dispatchEvent(e);\n    this.onmessage = this.onclose = this.onerror = null;\n    debug('disconnected');\n  }.bind(this), 0);\n};\n\n// See: http://www.erg.abdn.ac.uk/~gerrit/dccp/notes/ccid2/rto_estimator/\n// and RFC 2988.\nSockJS.prototype.countRTO = function (rtt) {\n  // In a local environment, when using IE8/9 and the `jsonp-polling`\n  // transport the time needed to establish a connection (the time that pass\n  // from the opening of the transport to the call of `_dispatchOpen`) is\n  // around 200msec (the lower bound used in the article above) and this\n  // causes spurious timeouts. For this reason we calculate a value slightly\n  // larger than that used in the article.\n  if (rtt > 100) {\n    return 4 * rtt; // rto > 400msec\n  }\n  return 300 + rtt; // 300msec < rto <= 400msec\n};\nmodule.exports = function (availableTransports) {\n  transports = transport(availableTransports);\n  require('./iframe-bootstrap')(SockJS, availableTransports);\n  return SockJS;\n};","map":{"version":3,"names":["require","URL","inherits","JSON3","random","escape","urlUtils","eventUtils","transport","objectUtils","browser","log","Event","EventTarget","loc","CloseEvent","TransportMessageEvent","InfoReceiver","debug","process","env","NODE_ENV","transports","SockJS","url","protocols","options","arguments","length","TypeError","call","readyState","CONNECTING","extensions","protocol","protocols_whitelist","warn","_transportsWhitelist","_transportOptions","transportOptions","sessionId","_generateSessionId","string","_server","server","numberString","parsedUrl","host","SyntaxError","hash","secure","Error","Array","isArray","sortedProtocols","sort","forEach","proto","i","o","getOrigin","href","_origin","toLowerCase","set","pathname","replace","_urlInfo","nullOrigin","hasDomain","sameOrigin","isOriginEqual","sameScheme","isSchemeEqual","_ir","once","_receiveInfo","bind","userSetCode","code","prototype","close","reason","CLOSING","CLOSED","wasClean","_close","send","data","OPEN","_transport","quote","version","info","rtt","_rto","countRTO","_transUrl","base_url","extend","enabledTransports","filterToEnabled","_transports","main","_connect","Transport","shift","transportName","needBody","global","document","body","unshift","attachEvent","timeoutMs","roundTrips","_transportTimeoutId","setTimeout","_transportTimeout","transportUrl","addPath","transportObj","on","_transportMessage","_transportClose","msg","self","type","slice","content","payload","_open","dispatchEvent","parse","e","p","removeAllListeners","clearTimeout","forceFail","onmessage","onclose","onerror","module","exports","availableTransports"],"sources":["C:/Users/Administrator/Documents/0011_Final_PROJECT/Alumni-Networking-Platform/Client/node_modules/sockjs-client/lib/main.js"],"sourcesContent":["'use strict';\r\n\r\nrequire('./shims');\r\n\r\nvar URL = require('url-parse')\r\n  , inherits = require('inherits')\r\n  , JSON3 = require('json3')\r\n  , random = require('./utils/random')\r\n  , escape = require('./utils/escape')\r\n  , urlUtils = require('./utils/url')\r\n  , eventUtils = require('./utils/event')\r\n  , transport = require('./utils/transport')\r\n  , objectUtils = require('./utils/object')\r\n  , browser = require('./utils/browser')\r\n  , log = require('./utils/log')\r\n  , Event = require('./event/event')\r\n  , EventTarget = require('./event/eventtarget')\r\n  , loc = require('./location')\r\n  , CloseEvent = require('./event/close')\r\n  , TransportMessageEvent = require('./event/trans-message')\r\n  , InfoReceiver = require('./info-receiver')\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:main');\r\n}\r\n\r\nvar transports;\r\n\r\n// follow constructor steps defined at http://dev.w3.org/html5/websockets/#the-websocket-interface\r\nfunction SockJS(url, protocols, options) {\r\n  if (!(this instanceof SockJS)) {\r\n    return new SockJS(url, protocols, options);\r\n  }\r\n  if (arguments.length < 1) {\r\n    throw new TypeError(\"Failed to construct 'SockJS: 1 argument required, but only 0 present\");\r\n  }\r\n  EventTarget.call(this);\r\n\r\n  this.readyState = SockJS.CONNECTING;\r\n  this.extensions = '';\r\n  this.protocol = '';\r\n\r\n  // non-standard extension\r\n  options = options || {};\r\n  if (options.protocols_whitelist) {\r\n    log.warn(\"'protocols_whitelist' is DEPRECATED. Use 'transports' instead.\");\r\n  }\r\n  this._transportsWhitelist = options.transports;\r\n  this._transportOptions = options.transportOptions || {};\r\n\r\n  var sessionId = options.sessionId || 8;\r\n  if (typeof sessionId === 'function') {\r\n    this._generateSessionId = sessionId;\r\n  } else if (typeof sessionId === 'number') {\r\n    this._generateSessionId = function() {\r\n      return random.string(sessionId);\r\n    };\r\n  } else {\r\n    throw new TypeError('If sessionId is used in the options, it needs to be a number or a function.');\r\n  }\r\n\r\n  this._server = options.server || random.numberString(1000);\r\n\r\n  // Step 1 of WS spec - parse and validate the url. Issue #8\r\n  var parsedUrl = new URL(url);\r\n  if (!parsedUrl.host || !parsedUrl.protocol) {\r\n    throw new SyntaxError(\"The URL '\" + url + \"' is invalid\");\r\n  } else if (parsedUrl.hash) {\r\n    throw new SyntaxError('The URL must not contain a fragment');\r\n  } else if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\r\n    throw new SyntaxError(\"The URL's scheme must be either 'http:' or 'https:'. '\" + parsedUrl.protocol + \"' is not allowed.\");\r\n  }\r\n\r\n  var secure = parsedUrl.protocol === 'https:';\r\n  // Step 2 - don't allow secure origin with an insecure protocol\r\n  if (loc.protocol === 'https:' && !secure) {\r\n    throw new Error('SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS');\r\n  }\r\n\r\n  // Step 3 - check port access - no need here\r\n  // Step 4 - parse protocols argument\r\n  if (!protocols) {\r\n    protocols = [];\r\n  } else if (!Array.isArray(protocols)) {\r\n    protocols = [protocols];\r\n  }\r\n\r\n  // Step 5 - check protocols argument\r\n  var sortedProtocols = protocols.sort();\r\n  sortedProtocols.forEach(function(proto, i) {\r\n    if (!proto) {\r\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is invalid.\");\r\n    }\r\n    if (i < (sortedProtocols.length - 1) && proto === sortedProtocols[i + 1]) {\r\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is duplicated.\");\r\n    }\r\n  });\r\n\r\n  // Step 6 - convert origin\r\n  var o = urlUtils.getOrigin(loc.href);\r\n  this._origin = o ? o.toLowerCase() : null;\r\n\r\n  // remove the trailing slash\r\n  parsedUrl.set('pathname', parsedUrl.pathname.replace(/\\/+$/, ''));\r\n\r\n  // store the sanitized url\r\n  this.url = parsedUrl.href;\r\n  debug('using url', this.url);\r\n\r\n  // Step 7 - start connection in background\r\n  // obtain server info\r\n  // http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html#section-26\r\n  this._urlInfo = {\r\n    nullOrigin: !browser.hasDomain()\r\n  , sameOrigin: urlUtils.isOriginEqual(this.url, loc.href)\r\n  , sameScheme: urlUtils.isSchemeEqual(this.url, loc.href)\r\n  };\r\n\r\n  this._ir = new InfoReceiver(this.url, this._urlInfo);\r\n  this._ir.once('finish', this._receiveInfo.bind(this));\r\n}\r\n\r\ninherits(SockJS, EventTarget);\r\n\r\nfunction userSetCode(code) {\r\n  return code === 1000 || (code >= 3000 && code <= 4999);\r\n}\r\n\r\nSockJS.prototype.close = function(code, reason) {\r\n  // Step 1\r\n  if (code && !userSetCode(code)) {\r\n    throw new Error('InvalidAccessError: Invalid code');\r\n  }\r\n  // Step 2.4 states the max is 123 bytes, but we are just checking length\r\n  if (reason && reason.length > 123) {\r\n    throw new SyntaxError('reason argument has an invalid length');\r\n  }\r\n\r\n  // Step 3.1\r\n  if (this.readyState === SockJS.CLOSING || this.readyState === SockJS.CLOSED) {\r\n    return;\r\n  }\r\n\r\n  // TODO look at docs to determine how to set this\r\n  var wasClean = true;\r\n  this._close(code || 1000, reason || 'Normal closure', wasClean);\r\n};\r\n\r\nSockJS.prototype.send = function(data) {\r\n  // #13 - convert anything non-string to string\r\n  // TODO this currently turns objects into [object Object]\r\n  if (typeof data !== 'string') {\r\n    data = '' + data;\r\n  }\r\n  if (this.readyState === SockJS.CONNECTING) {\r\n    throw new Error('InvalidStateError: The connection has not been established yet');\r\n  }\r\n  if (this.readyState !== SockJS.OPEN) {\r\n    return;\r\n  }\r\n  this._transport.send(escape.quote(data));\r\n};\r\n\r\nSockJS.version = require('./version');\r\n\r\nSockJS.CONNECTING = 0;\r\nSockJS.OPEN = 1;\r\nSockJS.CLOSING = 2;\r\nSockJS.CLOSED = 3;\r\n\r\nSockJS.prototype._receiveInfo = function(info, rtt) {\r\n  debug('_receiveInfo', rtt);\r\n  this._ir = null;\r\n  if (!info) {\r\n    this._close(1002, 'Cannot connect to server');\r\n    return;\r\n  }\r\n\r\n  // establish a round-trip timeout (RTO) based on the\r\n  // round-trip time (RTT)\r\n  this._rto = this.countRTO(rtt);\r\n  // allow server to override url used for the actual transport\r\n  this._transUrl = info.base_url ? info.base_url : this.url;\r\n  info = objectUtils.extend(info, this._urlInfo);\r\n  debug('info', info);\r\n  // determine list of desired and supported transports\r\n  var enabledTransports = transports.filterToEnabled(this._transportsWhitelist, info);\r\n  this._transports = enabledTransports.main;\r\n  debug(this._transports.length + ' enabled transports');\r\n\r\n  this._connect();\r\n};\r\n\r\nSockJS.prototype._connect = function() {\r\n  for (var Transport = this._transports.shift(); Transport; Transport = this._transports.shift()) {\r\n    debug('attempt', Transport.transportName);\r\n    if (Transport.needBody) {\r\n      if (!global.document.body ||\r\n          (typeof global.document.readyState !== 'undefined' &&\r\n            global.document.readyState !== 'complete' &&\r\n            global.document.readyState !== 'interactive')) {\r\n        debug('waiting for body');\r\n        this._transports.unshift(Transport);\r\n        eventUtils.attachEvent('load', this._connect.bind(this));\r\n        return;\r\n      }\r\n    }\r\n\r\n    // calculate timeout based on RTO and round trips. Default to 5s\r\n    var timeoutMs = (this._rto * Transport.roundTrips) || 5000;\r\n    this._transportTimeoutId = setTimeout(this._transportTimeout.bind(this), timeoutMs);\r\n    debug('using timeout', timeoutMs);\r\n\r\n    var transportUrl = urlUtils.addPath(this._transUrl, '/' + this._server + '/' + this._generateSessionId());\r\n    var options = this._transportOptions[Transport.transportName];\r\n    debug('transport url', transportUrl);\r\n    var transportObj = new Transport(transportUrl, this._transUrl, options);\r\n    transportObj.on('message', this._transportMessage.bind(this));\r\n    transportObj.once('close', this._transportClose.bind(this));\r\n    transportObj.transportName = Transport.transportName;\r\n    this._transport = transportObj;\r\n\r\n    return;\r\n  }\r\n  this._close(2000, 'All transports failed', false);\r\n};\r\n\r\nSockJS.prototype._transportTimeout = function() {\r\n  debug('_transportTimeout');\r\n  if (this.readyState === SockJS.CONNECTING) {\r\n    if (this._transport) {\r\n      this._transport.close();\r\n    }\r\n\r\n    this._transportClose(2007, 'Transport timed out');\r\n  }\r\n};\r\n\r\nSockJS.prototype._transportMessage = function(msg) {\r\n  debug('_transportMessage', msg);\r\n  var self = this\r\n    , type = msg.slice(0, 1)\r\n    , content = msg.slice(1)\r\n    , payload\r\n    ;\r\n\r\n  // first check for messages that don't need a payload\r\n  switch (type) {\r\n    case 'o':\r\n      this._open();\r\n      return;\r\n    case 'h':\r\n      this.dispatchEvent(new Event('heartbeat'));\r\n      debug('heartbeat', this.transport);\r\n      return;\r\n  }\r\n\r\n  if (content) {\r\n    try {\r\n      payload = JSON3.parse(content);\r\n    } catch (e) {\r\n      debug('bad json', content);\r\n    }\r\n  }\r\n\r\n  if (typeof payload === 'undefined') {\r\n    debug('empty payload', content);\r\n    return;\r\n  }\r\n\r\n  switch (type) {\r\n    case 'a':\r\n      if (Array.isArray(payload)) {\r\n        payload.forEach(function(p) {\r\n          debug('message', self.transport, p);\r\n          self.dispatchEvent(new TransportMessageEvent(p));\r\n        });\r\n      }\r\n      break;\r\n    case 'm':\r\n      debug('message', this.transport, payload);\r\n      this.dispatchEvent(new TransportMessageEvent(payload));\r\n      break;\r\n    case 'c':\r\n      if (Array.isArray(payload) && payload.length === 2) {\r\n        this._close(payload[0], payload[1], true);\r\n      }\r\n      break;\r\n  }\r\n};\r\n\r\nSockJS.prototype._transportClose = function(code, reason) {\r\n  debug('_transportClose', this.transport, code, reason);\r\n  if (this._transport) {\r\n    this._transport.removeAllListeners();\r\n    this._transport = null;\r\n    this.transport = null;\r\n  }\r\n\r\n  if (!userSetCode(code) && code !== 2000 && this.readyState === SockJS.CONNECTING) {\r\n    this._connect();\r\n    return;\r\n  }\r\n\r\n  this._close(code, reason);\r\n};\r\n\r\nSockJS.prototype._open = function() {\r\n  debug('_open', this._transport.transportName, this.readyState);\r\n  if (this.readyState === SockJS.CONNECTING) {\r\n    if (this._transportTimeoutId) {\r\n      clearTimeout(this._transportTimeoutId);\r\n      this._transportTimeoutId = null;\r\n    }\r\n    this.readyState = SockJS.OPEN;\r\n    this.transport = this._transport.transportName;\r\n    this.dispatchEvent(new Event('open'));\r\n    debug('connected', this.transport);\r\n  } else {\r\n    // The server might have been restarted, and lost track of our\r\n    // connection.\r\n    this._close(1006, 'Server lost session');\r\n  }\r\n};\r\n\r\nSockJS.prototype._close = function(code, reason, wasClean) {\r\n  debug('_close', this.transport, code, reason, wasClean, this.readyState);\r\n  var forceFail = false;\r\n\r\n  if (this._ir) {\r\n    forceFail = true;\r\n    this._ir.close();\r\n    this._ir = null;\r\n  }\r\n  if (this._transport) {\r\n    this._transport.close();\r\n    this._transport = null;\r\n    this.transport = null;\r\n  }\r\n\r\n  if (this.readyState === SockJS.CLOSED) {\r\n    throw new Error('InvalidStateError: SockJS has already been closed');\r\n  }\r\n\r\n  this.readyState = SockJS.CLOSING;\r\n  setTimeout(function() {\r\n    this.readyState = SockJS.CLOSED;\r\n\r\n    if (forceFail) {\r\n      this.dispatchEvent(new Event('error'));\r\n    }\r\n\r\n    var e = new CloseEvent('close');\r\n    e.wasClean = wasClean || false;\r\n    e.code = code || 1000;\r\n    e.reason = reason;\r\n\r\n    this.dispatchEvent(e);\r\n    this.onmessage = this.onclose = this.onerror = null;\r\n    debug('disconnected');\r\n  }.bind(this), 0);\r\n};\r\n\r\n// See: http://www.erg.abdn.ac.uk/~gerrit/dccp/notes/ccid2/rto_estimator/\r\n// and RFC 2988.\r\nSockJS.prototype.countRTO = function(rtt) {\r\n  // In a local environment, when using IE8/9 and the `jsonp-polling`\r\n  // transport the time needed to establish a connection (the time that pass\r\n  // from the opening of the transport to the call of `_dispatchOpen`) is\r\n  // around 200msec (the lower bound used in the article above) and this\r\n  // causes spurious timeouts. For this reason we calculate a value slightly\r\n  // larger than that used in the article.\r\n  if (rtt > 100) {\r\n    return 4 * rtt; // rto > 400msec\r\n  }\r\n  return 300 + rtt; // 300msec < rto <= 400msec\r\n};\r\n\r\nmodule.exports = function(availableTransports) {\r\n  transports = transport(availableTransports);\r\n  require('./iframe-bootstrap')(SockJS, availableTransports);\r\n  return SockJS;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
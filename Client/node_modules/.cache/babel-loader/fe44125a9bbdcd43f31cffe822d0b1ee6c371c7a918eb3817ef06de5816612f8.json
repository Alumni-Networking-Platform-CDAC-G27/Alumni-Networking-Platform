{"ast":null,"code":"import { FETCH_LOGGEDIN_USERDATA_BEGIN, FETCH_LOGGEDIN_USERDATA_SUCCESS, FETCH_LOGGEDIN_USERDATA_ERROR, UPDATE_LOGGEDIN_USERDATA, FETCH_TIMELINE_USERDATA_BEGIN, FETCH_TIMELINE_USERDATA_SUCCESS, FETCH_TIMELINE_USERDATA_ERROR, UPDATE_TIMELINE_USERDATA, FETCH_ALLCHATFRIENDS_BEGIN, FETCH_ALLCHATFRIENDS_SUCCESS, FETCH_ALLCHATFRIENDS_ERROR, EDIT_USERSTATUS, FETCH_ALLFRIENDS_BEGIN, FETCH_ALLFRIENDS_SUCCESS, FETCH_ALLFRIENDS_ERROR, UPDATE_USER_SUCCESS, UPDATE_USER_BEGIN, UPDATE_USER_ERROR, FETCH_ALLUSERS_SUCCESS, FETCH_ALLUSERS_BEGIN, FETCH_ALLUSERS_ERROR, PROMOTE_USER_SUCCESS, PROMOTE_USER_BEGIN, PROMOTE_USER_ERROR, DEMOTE_USER_SUCCESS, DEMOTE_USER_BEGIN, DEMOTE_USER_ERROR, CHANGE_USERROLE, CHANGE_TIMELINE_USERDATA_SUCCESS, CHANGE_TIMELINE_USERDATA_BEGIN, CHANGE_TIMELINE_USERDATA_ERROR, CHANGE_ALLFRIENDS_SUCCESS, CHANGE_ALLFRIENDS_BEGIN, CHANGE_ALLFRIENDS_ERROR, UPDATE_ALL_FRIENDS, REMOVE_FRIEND_SUCCESS, REMOVE_FRIEND_BEGIN, REMOVE_FRIEND_ERROR, DELETE_USER_SUCCESS, DELETE_USER_BEGIN, DELETE_USER_ERROR, FIND_FRIENDS_SUCCESS, FIND_FRIENDS_BEGIN, FIND_FRIENDS_ERROR, ADD_FRIEND_SUCCESS, ADD_FRIEND_BEGIN, ADD_FRIEND_ERROR, CANCEL_REQUEST_SUCCESS, CANCEL_REQUEST_BEGIN, CANCEL_REQUEST_ERROR, CONFIRM_REQUEST_SUCCESS, CONFIRM_REQUEST_BEGIN, CONFIRM_REQUEST_ERROR, SEARCH_RESULTS_SUCCESS, SEARCH_RESULTS_BEGIN, SEARCH_RESULTS_ERROR } from '../actions/actionTypes';\nimport placeholder_user_image from '../../assets/images/placeholder.png';\nimport default_background_image from '../../assets/images/default-background-image.jpg';\n\n// loggedInUserDataReducer\nconst initialStateLoggedInUserData = {\n  id: '',\n  username: '',\n  email: '',\n  firstName: '',\n  lastName: '',\n  address: '',\n  city: '',\n  search: '',\n  category: '',\n  profilePicUrl: placeholder_user_image,\n  backgroundImageUrl: default_background_image,\n  authority: '',\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst loggedInUserDataReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateLoggedInUserData;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FETCH_LOGGEDIN_USERDATA_BEGIN:\n      return Object.assign({}, state, initialStateLoggedInUserData, {\n        loading: true\n      });\n    case FETCH_LOGGEDIN_USERDATA_SUCCESS:\n      return Object.assign({}, state, action.payload, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      });\n    case FETCH_LOGGEDIN_USERDATA_ERROR:\n      return Object.assign({}, state, initialStateLoggedInUserData, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    case UPDATE_LOGGEDIN_USERDATA:\n      return {\n        ...state,\n        ...action.payload,\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\n// timeLineUserDataReducer\nconst initialStateTimeLineUserData = {\n  id: '',\n  username: '',\n  email: '',\n  firstName: '',\n  lastName: '',\n  address: '',\n  city: '',\n  search: '',\n  category: '',\n  profilePicUrl: placeholder_user_image,\n  backgroundImageUrl: default_background_image,\n  authority: '',\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst timeLineUserDataReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateTimeLineUserData;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FETCH_TIMELINE_USERDATA_BEGIN:\n      return Object.assign({}, state, initialStateTimeLineUserData, {\n        loading: true\n      });\n    case FETCH_TIMELINE_USERDATA_SUCCESS:\n      return Object.assign({}, state, action.payload, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      });\n    case FETCH_TIMELINE_USERDATA_ERROR:\n      return Object.assign({}, state, initialStateTimeLineUserData, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    case UPDATE_TIMELINE_USERDATA:\n      return {\n        ...state,\n        ...action.payload,\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\n// fetchAllChatFriendsReducer\nconst initialStateAllChatFriends = {\n  friendsChatArr: [],\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst fetchAllChatFriendsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateAllChatFriends;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FETCH_ALLCHATFRIENDS_BEGIN:\n      return Object.assign({}, state, {\n        friendsChatArr: [],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case FETCH_ALLCHATFRIENDS_SUCCESS:\n      return Object.assign({}, state, {\n        friendsChatArr: [...action.payload],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      });\n    case FETCH_ALLCHATFRIENDS_ERROR:\n      return Object.assign({}, state, {\n        friendsChatArr: [],\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    case EDIT_USERSTATUS:\n      return updateUserStatus(state, action.payload);\n    default:\n      return state;\n  }\n};\nconst updateUserStatus = (state, data) => {\n  const {\n    id,\n    online\n  } = data;\n  const newFriendsChatArr = state.friendsChatArr.map(friend => {\n    if (friend.id !== id) {\n      return friend;\n    }\n    return {\n      ...friend,\n      online\n    };\n  });\n  return Object.assign({}, state, {\n    friendsChatArr: [...newFriendsChatArr],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false\n  });\n};\n\n// updateUserReducer\nconst initialStateUpdateUser = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst updateUserReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateUpdateUser;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case UPDATE_USER_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case UPDATE_USER_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n    case UPDATE_USER_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\n\n// fetchAllUsersReducer\nconst initialStateAllUsers = {\n  userArr: [],\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst fetchAllUsersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateAllUsers;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FETCH_ALLUSERS_BEGIN:\n      return Object.assign({}, state, {\n        userArr: [],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case FETCH_ALLUSERS_SUCCESS:\n      return Object.assign({}, state, {\n        userArr: [...action.payload],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      });\n    case FETCH_ALLUSERS_ERROR:\n      return Object.assign({}, state, {\n        userArr: [],\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    case CHANGE_USERROLE:\n      return updateUserRole(state, action.payload);\n    case DELETE_USER_SUCCESS:\n      return removeUser(state, action.deletedUserId);\n    default:\n      return state;\n  }\n};\nconst removeUser = (state, deletedUserId) => {\n  const userArr = state.userArr.filter(user => user.id !== deletedUserId);\n  return Object.assign({}, state, {\n    userArr: [...userArr],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false\n  });\n};\nconst updateUserRole = (state, data) => {\n  const {\n    id,\n    role\n  } = data;\n  const newUserArr = state.userArr.map(user => {\n    if (user.id !== id) {\n      return user;\n    }\n    return {\n      ...user,\n      role\n    };\n  });\n  return Object.assign({}, state, {\n    userArr: [...newUserArr],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false\n  });\n};\n\n// deleteUser\nconst initialStateDeleteUser = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst deleteUserReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateDeleteUser;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case DELETE_USER_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case DELETE_USER_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n    case DELETE_USER_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\n\n// promoteUserReducer\nconst initialStatePromoteUser = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst promoteUserReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStatePromoteUser;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case PROMOTE_USER_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case PROMOTE_USER_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n    case PROMOTE_USER_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\n\n// demoteUserReducer\nconst initialStateDemoteUser = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst demoteUserReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateDemoteUser;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case DEMOTE_USER_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case DEMOTE_USER_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n    case DEMOTE_USER_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\n\n// changeTimeLineUserDataReducer\nconst initialStateChangeTimeLineUserData = {\n  id: '',\n  username: '',\n  email: '',\n  firstName: '',\n  lastName: '',\n  address: '',\n  city: '',\n  search: '',\n  category: '',\n  profilePicUrl: placeholder_user_image,\n  backgroundImageUrl: default_background_image,\n  authority: '',\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst changeTimeLineUserDataReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateChangeTimeLineUserData;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case CHANGE_TIMELINE_USERDATA_BEGIN:\n      return Object.assign({}, state, initialStateTimeLineUserData, {\n        loading: true\n      });\n    case CHANGE_TIMELINE_USERDATA_SUCCESS:\n      return Object.assign({}, state, action.payload, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      });\n    case CHANGE_TIMELINE_USERDATA_ERROR:\n      return Object.assign({}, state, initialStateTimeLineUserData, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\n\n// fetchAllFriendsReducer\nconst initialStateAllFriends = {\n  friendsArr: [],\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst fetchAllFriendsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateAllFriends;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FETCH_ALLFRIENDS_BEGIN:\n      return Object.assign({}, state, {\n        friendsArr: [],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case FETCH_ALLFRIENDS_SUCCESS:\n      return Object.assign({}, state, {\n        friendsArr: [...action.payload],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      });\n    case FETCH_ALLFRIENDS_ERROR:\n      return Object.assign({}, state, {\n        friendsArr: [],\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    case UPDATE_ALL_FRIENDS:\n      return Object.assign({}, state, {\n        friendsArr: [...action.payload],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      });\n    case REMOVE_FRIEND_SUCCESS:\n      return Object.assign({}, state, {\n        friendsArr: removeFriend(state, action.friendToRemoveId),\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\nconst removeFriend = (state, friendToRemoveId) => {\n  return state.friendsArr.filter(friend => friend.id !== friendToRemoveId);\n};\n\n// changeAllFriendsReducer\nconst initialStateChangeAllFriends = {\n  friendsArr: [],\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst changeAllFriendsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateChangeAllFriends;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case CHANGE_ALLFRIENDS_BEGIN:\n      return Object.assign({}, state, {\n        friendsArr: [],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case CHANGE_ALLFRIENDS_SUCCESS:\n      return Object.assign({}, state, {\n        friendsArr: [...action.payload],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      });\n    case CHANGE_ALLFRIENDS_ERROR:\n      return Object.assign({}, state, {\n        friendsArr: [],\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\n\n// removeFriendReducer\nconst initialStateRemoveFriend = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst removeFriendReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateRemoveFriend;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case REMOVE_FRIEND_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case REMOVE_FRIEND_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n    case REMOVE_FRIEND_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\n\n// findFriends\nconst initialStateFindFriends = {\n  friendsCandidatesArr: [],\n  userWaitingForAcceptingRequest: [],\n  usersReceivedRequestFromCurrentUser: [],\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst findFriendsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateFindFriends;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FIND_FRIENDS_BEGIN:\n      return Object.assign({}, state, {\n        friendsCandidatesArr: [],\n        userWaitingForAcceptingRequest: [],\n        usersReceivedRequestFromCurrentUser: [],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case FIND_FRIENDS_SUCCESS:\n      return setFindFriendsSuccessState(state, action.payload);\n    case FIND_FRIENDS_ERROR:\n      return Object.assign({}, state, {\n        friendsCandidatesArr: [],\n        userWaitingForAcceptingRequest: [],\n        usersReceivedRequestFromCurrentUser: [],\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    case ADD_FRIEND_SUCCESS:\n      return sendUserRequest(state, action.friendCandidateId);\n    case CANCEL_REQUEST_SUCCESS:\n      return cancelRequest(state, action.friendToRejectId);\n    case CONFIRM_REQUEST_SUCCESS:\n      return confirmRequest(state, action.friendToAcceptId);\n    default:\n      return state;\n  }\n};\nconst setFindFriendsSuccessState = (state, response) => {\n  const friendsCandidatesArr = response.filter(user => user.status !== 0 && user.status !== 1);\n  const userWaitingForAcceptingRequest = response.filter(user => user.status === 0 && user.starterOfAction === true);\n  const usersReceivedRequestFromCurrentUser = response.filter(user => user.status === 0 && user.starterOfAction === false);\n  return Object.assign({}, state, {\n    friendsCandidatesArr: friendsCandidatesArr,\n    userWaitingForAcceptingRequest: userWaitingForAcceptingRequest,\n    usersReceivedRequestFromCurrentUser: usersReceivedRequestFromCurrentUser,\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false\n  });\n};\nconst sendUserRequest = (state, friendCandidateId) => {\n  const userToAddIndex = state.friendsCandidatesArr.findIndex(user => user.id === friendCandidateId);\n  const userToAdd = state.friendsCandidatesArr[userToAddIndex];\n  const friendsCandidatesArr = state.friendsCandidatesArr.filter(user => user.id !== friendCandidateId);\n  const usersReceivedRequestFromCurrentUser = [...state.usersReceivedRequestFromCurrentUser, userToAdd];\n  return Object.assign({}, state, {\n    friendsCandidatesArr: friendsCandidatesArr,\n    userWaitingForAcceptingRequest: state.userWaitingForAcceptingRequest.slice(),\n    usersReceivedRequestFromCurrentUser: usersReceivedRequestFromCurrentUser,\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false\n  });\n};\nconst cancelRequest = (state, friendToRejectId) => {\n  let friendsCandidatesArr = state.friendsCandidatesArr.slice();\n  let userWaitingForAcceptingRequest = state.userWaitingForAcceptingRequest.slice();\n  let usersReceivedRequestFromCurrentUser = state.usersReceivedRequestFromCurrentUser.slice();\n  let userToCancelIndex = usersReceivedRequestFromCurrentUser.findIndex(user => user.id === friendToRejectId);\n  if (userToCancelIndex > -1) {\n    const userToCancel = usersReceivedRequestFromCurrentUser[userToCancelIndex];\n    usersReceivedRequestFromCurrentUser = usersReceivedRequestFromCurrentUser.filter(user => user.id !== friendToRejectId);\n    friendsCandidatesArr = [...friendsCandidatesArr, userToCancel];\n  } else {\n    userToCancelIndex = userWaitingForAcceptingRequest.findIndex(user => user.id === friendToRejectId);\n    const userToCancel = userWaitingForAcceptingRequest[userToCancelIndex];\n    userWaitingForAcceptingRequest = userWaitingForAcceptingRequest.filter(user => user.id !== friendToRejectId);\n    friendsCandidatesArr = [...friendsCandidatesArr, userToCancel];\n  }\n  return Object.assign({}, state, {\n    friendsCandidatesArr,\n    userWaitingForAcceptingRequest,\n    usersReceivedRequestFromCurrentUser,\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false\n  });\n};\nconst confirmRequest = (state, friendToAcceptId) => {\n  const userWaitingForAcceptingRequest = state.userWaitingForAcceptingRequest.filter(user => user.id !== friendToAcceptId);\n  return Object.assign({}, state, {\n    friendsCandidatesArr: state.friendsCandidatesArr.slice(),\n    userWaitingForAcceptingRequest,\n    usersReceivedRequestFromCurrentUser: state.usersReceivedRequestFromCurrentUser.slice(),\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false\n  });\n};\n\n// addFriend\nconst initialStateAddFriend = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst addfriendReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateAddFriend;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_FRIEND_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case ADD_FRIEND_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n    case ADD_FRIEND_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\n\n// cancelRequest\nconst initialStateCancelRequest = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst cancelRequestReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateCancelRequest;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case CANCEL_REQUEST_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case CANCEL_REQUEST_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n    case CANCEL_REQUEST_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\n\n// confirmRequestReducer\nconst initialStateConfirmRequest = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst confirmRequestReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateConfirmRequest;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case CONFIRM_REQUEST_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case CONFIRM_REQUEST_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n    case CONFIRM_REQUEST_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\n\n// searchResults\nconst initialStateSearchResults = {\n  friendsArrSearch: [],\n  friendsCandidatesArr: [],\n  userWaitingForAcceptingRequest: [],\n  usersReceivedRequestFromCurrentUser: [],\n  search: '',\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\nconst searchResultsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateSearchResults;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SEARCH_RESULTS_BEGIN:\n      return Object.assign({}, state, {\n        friendsArrSearch: [],\n        friendsCandidatesArr: [],\n        userWaitingForAcceptingRequest: [],\n        usersReceivedRequestFromCurrentUser: [],\n        search: '',\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n    case SEARCH_RESULTS_SUCCESS:\n      return setSearchResultsSuccessState(state, action.payload, action.search);\n    case SEARCH_RESULTS_ERROR:\n      return Object.assign({}, state, {\n        friendsArrSearch: [],\n        friendsCandidatesArr: [],\n        userWaitingForAcceptingRequest: [],\n        usersReceivedRequestFromCurrentUser: [],\n        search: action.search,\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n    case ADD_FRIEND_SUCCESS:\n      return searchResultsSendUserRequest(state, action.friendCandidateId);\n    case CANCEL_REQUEST_SUCCESS:\n      return searchResultsCancelRequest(state, action.friendToRejectId);\n    case CONFIRM_REQUEST_SUCCESS:\n      return searchResultsConfirmRequest(state, action.friendToAcceptId);\n    case REMOVE_FRIEND_SUCCESS:\n      return searchResultsRemoveFriend(state, action.friendToRemoveId);\n    default:\n      return state;\n  }\n};\nconst setSearchResultsSuccessState = (state, response, search) => {\n  const friendsArrSearch = response.filter(user => user.status === 1);\n  const friendsCandidatesArr = response.filter(user => user.status !== 0 && user.status !== 1);\n  const userWaitingForAcceptingRequest = response.filter(user => user.status === 0 && user.starterOfAction === true);\n  const usersReceivedRequestFromCurrentUser = response.filter(user => user.status === 0 && user.starterOfAction === false);\n  return Object.assign({}, state, {\n    friendsArrSearch,\n    friendsCandidatesArr,\n    userWaitingForAcceptingRequest,\n    usersReceivedRequestFromCurrentUser,\n    search,\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false\n  });\n};\nconst searchResultsSendUserRequest = (state, friendCandidateId) => {\n  const userToAddIndex = state.friendsCandidatesArr.findIndex(user => user.id === friendCandidateId);\n  if (userToAddIndex > -1) {\n    const userToAdd = state.friendsCandidatesArr[userToAddIndex];\n    const friendsCandidatesArr = state.friendsCandidatesArr.filter(user => user.id !== friendCandidateId);\n    const usersReceivedRequestFromCurrentUser = [...state.usersReceivedRequestFromCurrentUser, userToAdd];\n    return Object.assign({}, state, {\n      friendsArrSearch: state.friendsArrSearch.slice(),\n      friendsCandidatesArr: friendsCandidatesArr,\n      userWaitingForAcceptingRequest: state.userWaitingForAcceptingRequest.slice(),\n      usersReceivedRequestFromCurrentUser: usersReceivedRequestFromCurrentUser,\n      search: state.search,\n      hasError: false,\n      error: '',\n      message: '',\n      status: '',\n      path: '',\n      loading: false\n    });\n  } else {\n    return state;\n  }\n};\nconst searchResultsCancelRequest = (state, friendToRejectId) => {\n  let friendsArrSearch = state.friendsArrSearch.slice();\n  let friendsCandidatesArr = state.friendsCandidatesArr.slice();\n  let userWaitingForAcceptingRequest = state.userWaitingForAcceptingRequest.slice();\n  let usersReceivedRequestFromCurrentUser = state.usersReceivedRequestFromCurrentUser.slice();\n  let userToCancelIndex = usersReceivedRequestFromCurrentUser.findIndex(user => user.id === friendToRejectId);\n  if (userToCancelIndex > -1) {\n    const userToCancel = usersReceivedRequestFromCurrentUser[userToCancelIndex];\n    usersReceivedRequestFromCurrentUser = usersReceivedRequestFromCurrentUser.filter(user => user.id !== friendToRejectId);\n    friendsCandidatesArr = [...friendsCandidatesArr, userToCancel];\n  } else {\n    userToCancelIndex = userWaitingForAcceptingRequest.findIndex(user => user.id === friendToRejectId);\n    const userToCancel = userWaitingForAcceptingRequest[userToCancelIndex];\n    userWaitingForAcceptingRequest = userWaitingForAcceptingRequest.filter(user => user.id !== friendToRejectId);\n    friendsCandidatesArr = [...friendsCandidatesArr, userToCancel];\n  }\n  return Object.assign({}, state, {\n    friendsArrSearch,\n    friendsCandidatesArr,\n    userWaitingForAcceptingRequest,\n    usersReceivedRequestFromCurrentUser,\n    search: state.search,\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false\n  });\n};\nconst searchResultsConfirmRequest = (state, friendToAcceptId) => {\n  let friendsArrSearch = state.friendsArrSearch.slice();\n  const userToAcceptIndex = state.userWaitingForAcceptingRequest.findIndex(user => user.id === friendToAcceptId);\n  if (userToAcceptIndex > -1) {\n    const userToAccept = state.userWaitingForAcceptingRequest[userToAcceptIndex];\n    friendsArrSearch = [...friendsArrSearch, userToAccept];\n    const userWaitingForAcceptingRequest = state.userWaitingForAcceptingRequest.filter(user => user.id !== friendToAcceptId);\n    return Object.assign({}, state, {\n      friendsArrSearch,\n      friendsCandidatesArr: state.friendsCandidatesArr.slice(),\n      userWaitingForAcceptingRequest,\n      usersReceivedRequestFromCurrentUser: state.usersReceivedRequestFromCurrentUser.slice(),\n      search: state.search,\n      hasError: false,\n      error: '',\n      message: '',\n      status: '',\n      path: '',\n      loading: false\n    });\n  } else {\n    return state;\n  }\n};\nconst searchResultsRemoveFriend = (state, friendToRemoveId) => {\n  let friendsArrSearch = state.friendsArrSearch.slice();\n  const userToRemoveIndex = friendsArrSearch.findIndex(user => user.id === friendToRemoveId);\n  if (userToRemoveIndex > -1) {\n    const userToRemove = friendsArrSearch[userToRemoveIndex];\n    friendsArrSearch = state.friendsArrSearch.filter(friend => friend.id !== friendToRemoveId);\n    const friendsCandidatesArr = [...state.friendsCandidatesArr, userToRemove];\n    return Object.assign({}, state, {\n      friendsArrSearch,\n      friendsCandidatesArr,\n      userWaitingForAcceptingRequest: state.userWaitingForAcceptingRequest,\n      usersReceivedRequestFromCurrentUser: state.usersReceivedRequestFromCurrentUser,\n      search: state.search,\n      hasError: false,\n      error: '',\n      message: '',\n      status: '',\n      path: '',\n      loading: false\n    });\n  } else {\n    return state;\n  }\n};\nexport { fetchAllChatFriendsReducer, loggedInUserDataReducer, timeLineUserDataReducer, fetchAllFriendsReducer, updateUserReducer, fetchAllUsersReducer, promoteUserReducer, demoteUserReducer, changeTimeLineUserDataReducer, changeAllFriendsReducer, removeFriendReducer, deleteUserReducer, findFriendsReducer, addfriendReducer, cancelRequestReducer, confirmRequestReducer, searchResultsReducer };","map":{"version":3,"names":["FETCH_LOGGEDIN_USERDATA_BEGIN","FETCH_LOGGEDIN_USERDATA_SUCCESS","FETCH_LOGGEDIN_USERDATA_ERROR","UPDATE_LOGGEDIN_USERDATA","FETCH_TIMELINE_USERDATA_BEGIN","FETCH_TIMELINE_USERDATA_SUCCESS","FETCH_TIMELINE_USERDATA_ERROR","UPDATE_TIMELINE_USERDATA","FETCH_ALLCHATFRIENDS_BEGIN","FETCH_ALLCHATFRIENDS_SUCCESS","FETCH_ALLCHATFRIENDS_ERROR","EDIT_USERSTATUS","FETCH_ALLFRIENDS_BEGIN","FETCH_ALLFRIENDS_SUCCESS","FETCH_ALLFRIENDS_ERROR","UPDATE_USER_SUCCESS","UPDATE_USER_BEGIN","UPDATE_USER_ERROR","FETCH_ALLUSERS_SUCCESS","FETCH_ALLUSERS_BEGIN","FETCH_ALLUSERS_ERROR","PROMOTE_USER_SUCCESS","PROMOTE_USER_BEGIN","PROMOTE_USER_ERROR","DEMOTE_USER_SUCCESS","DEMOTE_USER_BEGIN","DEMOTE_USER_ERROR","CHANGE_USERROLE","CHANGE_TIMELINE_USERDATA_SUCCESS","CHANGE_TIMELINE_USERDATA_BEGIN","CHANGE_TIMELINE_USERDATA_ERROR","CHANGE_ALLFRIENDS_SUCCESS","CHANGE_ALLFRIENDS_BEGIN","CHANGE_ALLFRIENDS_ERROR","UPDATE_ALL_FRIENDS","REMOVE_FRIEND_SUCCESS","REMOVE_FRIEND_BEGIN","REMOVE_FRIEND_ERROR","DELETE_USER_SUCCESS","DELETE_USER_BEGIN","DELETE_USER_ERROR","FIND_FRIENDS_SUCCESS","FIND_FRIENDS_BEGIN","FIND_FRIENDS_ERROR","ADD_FRIEND_SUCCESS","ADD_FRIEND_BEGIN","ADD_FRIEND_ERROR","CANCEL_REQUEST_SUCCESS","CANCEL_REQUEST_BEGIN","CANCEL_REQUEST_ERROR","CONFIRM_REQUEST_SUCCESS","CONFIRM_REQUEST_BEGIN","CONFIRM_REQUEST_ERROR","SEARCH_RESULTS_SUCCESS","SEARCH_RESULTS_BEGIN","SEARCH_RESULTS_ERROR","placeholder_user_image","default_background_image","initialStateLoggedInUserData","id","username","email","firstName","lastName","address","city","search","category","profilePicUrl","backgroundImageUrl","authority","hasError","error","message","status","path","loading","loggedInUserDataReducer","state","arguments","length","undefined","action","type","Object","assign","payload","initialStateTimeLineUserData","timeLineUserDataReducer","initialStateAllChatFriends","friendsChatArr","fetchAllChatFriendsReducer","updateUserStatus","data","online","newFriendsChatArr","map","friend","initialStateUpdateUser","updateUserReducer","initialStateAllUsers","userArr","fetchAllUsersReducer","updateUserRole","removeUser","deletedUserId","filter","user","role","newUserArr","initialStateDeleteUser","deleteUserReducer","initialStatePromoteUser","promoteUserReducer","initialStateDemoteUser","demoteUserReducer","initialStateChangeTimeLineUserData","changeTimeLineUserDataReducer","initialStateAllFriends","friendsArr","fetchAllFriendsReducer","removeFriend","friendToRemoveId","initialStateChangeAllFriends","changeAllFriendsReducer","initialStateRemoveFriend","removeFriendReducer","initialStateFindFriends","friendsCandidatesArr","userWaitingForAcceptingRequest","usersReceivedRequestFromCurrentUser","findFriendsReducer","setFindFriendsSuccessState","sendUserRequest","friendCandidateId","cancelRequest","friendToRejectId","confirmRequest","friendToAcceptId","response","starterOfAction","userToAddIndex","findIndex","userToAdd","slice","userToCancelIndex","userToCancel","initialStateAddFriend","addfriendReducer","initialStateCancelRequest","cancelRequestReducer","initialStateConfirmRequest","confirmRequestReducer","initialStateSearchResults","friendsArrSearch","searchResultsReducer","setSearchResultsSuccessState","searchResultsSendUserRequest","searchResultsCancelRequest","searchResultsConfirmRequest","searchResultsRemoveFriend","userToAcceptIndex","userToAccept","userToRemoveIndex","userToRemove"],"sources":["C:/Users/rijul/Downloads/Alumni/Alumani/Client/src/store/reducers/userReducer.js"],"sourcesContent":["import {\n    FETCH_LOGGEDIN_USERDATA_BEGIN, FETCH_LOGGEDIN_USERDATA_SUCCESS, FETCH_LOGGEDIN_USERDATA_ERROR, UPDATE_LOGGEDIN_USERDATA,\n    FETCH_TIMELINE_USERDATA_BEGIN, FETCH_TIMELINE_USERDATA_SUCCESS, FETCH_TIMELINE_USERDATA_ERROR, UPDATE_TIMELINE_USERDATA,\n    FETCH_ALLCHATFRIENDS_BEGIN, FETCH_ALLCHATFRIENDS_SUCCESS, FETCH_ALLCHATFRIENDS_ERROR, EDIT_USERSTATUS,\n    FETCH_ALLFRIENDS_BEGIN, FETCH_ALLFRIENDS_SUCCESS, FETCH_ALLFRIENDS_ERROR,\n    UPDATE_USER_SUCCESS, UPDATE_USER_BEGIN, UPDATE_USER_ERROR,\n    FETCH_ALLUSERS_SUCCESS, FETCH_ALLUSERS_BEGIN, FETCH_ALLUSERS_ERROR,\n    PROMOTE_USER_SUCCESS, PROMOTE_USER_BEGIN, PROMOTE_USER_ERROR,\n    DEMOTE_USER_SUCCESS, DEMOTE_USER_BEGIN, DEMOTE_USER_ERROR, CHANGE_USERROLE,\n    CHANGE_TIMELINE_USERDATA_SUCCESS, CHANGE_TIMELINE_USERDATA_BEGIN, CHANGE_TIMELINE_USERDATA_ERROR,\n    CHANGE_ALLFRIENDS_SUCCESS, CHANGE_ALLFRIENDS_BEGIN, CHANGE_ALLFRIENDS_ERROR, UPDATE_ALL_FRIENDS,\n    REMOVE_FRIEND_SUCCESS, REMOVE_FRIEND_BEGIN, REMOVE_FRIEND_ERROR,\n    DELETE_USER_SUCCESS, DELETE_USER_BEGIN, DELETE_USER_ERROR,\n    FIND_FRIENDS_SUCCESS, FIND_FRIENDS_BEGIN, FIND_FRIENDS_ERROR,\n    ADD_FRIEND_SUCCESS, ADD_FRIEND_BEGIN, ADD_FRIEND_ERROR,\n    CANCEL_REQUEST_SUCCESS, CANCEL_REQUEST_BEGIN, CANCEL_REQUEST_ERROR,\n    CONFIRM_REQUEST_SUCCESS, CONFIRM_REQUEST_BEGIN, CONFIRM_REQUEST_ERROR,\n    SEARCH_RESULTS_SUCCESS, SEARCH_RESULTS_BEGIN, SEARCH_RESULTS_ERROR,\n} from '../actions/actionTypes';\n\nimport placeholder_user_image from '../../assets/images/placeholder.png';\nimport default_background_image from '../../assets/images/default-background-image.jpg';\n\n// loggedInUserDataReducer\nconst initialStateLoggedInUserData = {\n    id: '',\n    username: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    address: '',\n    city: '',\n    search: '',\n    category: '',\n    profilePicUrl: placeholder_user_image,\n    backgroundImageUrl: default_background_image,\n    authority: '',\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst loggedInUserDataReducer = (state = initialStateLoggedInUserData, action) => {\n    switch (action.type) {\n        case FETCH_LOGGEDIN_USERDATA_BEGIN:\n            return Object.assign({},\n                state,\n                initialStateLoggedInUserData,\n                { loading: true }\n            )\n        case FETCH_LOGGEDIN_USERDATA_SUCCESS:\n            return Object.assign({},\n                state,\n                action.payload,\n                {\n                    hasError: false,\n                    error: '',\n                    message: '',\n                    status: '',\n                    path: '',\n                    loading: false,\n                }\n            )\n        case FETCH_LOGGEDIN_USERDATA_ERROR:\n            return Object.assign({},\n                state,\n                initialStateLoggedInUserData,\n                {\n                    hasError: true,\n                    error: action.error,\n                    message: action.message,\n                    status: action.status,\n                    path: action.path,\n                    loading: false,\n                }\n            )\n        case UPDATE_LOGGEDIN_USERDATA:\n            return {\n                ...state,\n                ...action.payload,\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            };\n        default:\n            return state\n    }\n}\n\n// timeLineUserDataReducer\nconst initialStateTimeLineUserData = {\n    id: '',\n    username: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    address: '',\n    city: '',\n    search: '',\n    category: '',\n    profilePicUrl: placeholder_user_image,\n    backgroundImageUrl: default_background_image,\n    authority: '',\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst timeLineUserDataReducer = (state = initialStateTimeLineUserData, action) => {\n    switch (action.type) {\n        case FETCH_TIMELINE_USERDATA_BEGIN:\n            return Object.assign({},\n                state,\n                initialStateTimeLineUserData,\n                { loading: true }\n            )\n        case FETCH_TIMELINE_USERDATA_SUCCESS:\n            return Object.assign({},\n                state,\n                action.payload,\n                {\n                    hasError: false,\n                    error: '',\n                    message: '',\n                    status: '',\n                    path: '',\n                    loading: false,\n                }\n            )\n        case FETCH_TIMELINE_USERDATA_ERROR:\n            return Object.assign({},\n                state,\n                initialStateTimeLineUserData,\n                {\n                    hasError: true,\n                    error: action.error,\n                    message: action.message,\n                    status: action.status,\n                    path: action.path,\n                    loading: false,\n                }\n            )\n        case UPDATE_TIMELINE_USERDATA:\n            return {\n                ...state,\n                ...action.payload,\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            };\n        default:\n            return state\n    }\n}\n\n// fetchAllChatFriendsReducer\nconst initialStateAllChatFriends = {\n    friendsChatArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst fetchAllChatFriendsReducer = (state = initialStateAllChatFriends, action) => {\n    switch (action.type) {\n        case FETCH_ALLCHATFRIENDS_BEGIN:\n            return Object.assign({}, state, {\n                friendsChatArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FETCH_ALLCHATFRIENDS_SUCCESS:\n            return Object.assign({}, state, {\n                friendsChatArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case FETCH_ALLCHATFRIENDS_ERROR:\n            return Object.assign({}, state, {\n                friendsChatArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        case EDIT_USERSTATUS:\n            return updateUserStatus(state, action.payload)\n        default:\n            return state\n    }\n}\n\nconst updateUserStatus = (state, data) => {\n    const { id, online } = data;\n\n    const newFriendsChatArr = state.friendsChatArr.map((friend) => {\n        if (friend.id !== id) {\n            return friend\n        }\n\n        return {\n            ...friend, online\n        }\n    })\n\n    return Object.assign({}, state, {\n        friendsChatArr: [...newFriendsChatArr],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n}\n\n// updateUserReducer\nconst initialStateUpdateUser = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst updateUserReducer = (state = initialStateUpdateUser, action) => {\n    switch (action.type) {\n        case UPDATE_USER_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case UPDATE_USER_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case UPDATE_USER_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// fetchAllUsersReducer\nconst initialStateAllUsers = {\n    userArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst fetchAllUsersReducer = (state = initialStateAllUsers, action) => {\n    switch (action.type) {\n        case FETCH_ALLUSERS_BEGIN:\n            return Object.assign({}, state, {\n                userArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FETCH_ALLUSERS_SUCCESS:\n            return Object.assign({}, state, {\n                userArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case FETCH_ALLUSERS_ERROR:\n            return Object.assign({}, state, {\n                userArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        case CHANGE_USERROLE:\n            return updateUserRole(state, action.payload)\n        case DELETE_USER_SUCCESS:\n            return removeUser(state, action.deletedUserId)\n        default:\n            return state\n    }\n}\n\nconst removeUser = (state, deletedUserId) => {\n    const userArr = state.userArr.filter(user => user.id !== deletedUserId);\n\n    return Object.assign({}, state, {\n        userArr: [...userArr],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n}\n\nconst updateUserRole = (state, data) => {\n    const { id, role } = data;\n\n    const newUserArr = state.userArr.map((user) => {\n        if (user.id !== id) {\n            return user\n        }\n\n        return {\n            ...user, role\n        }\n    })\n\n    return Object.assign({}, state, {\n        userArr: [...newUserArr],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n}\n\n// deleteUser\nconst initialStateDeleteUser = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst deleteUserReducer = (state = initialStateDeleteUser, action) => {\n    switch (action.type) {\n        case DELETE_USER_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case DELETE_USER_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case DELETE_USER_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// promoteUserReducer\nconst initialStatePromoteUser = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst promoteUserReducer = (state = initialStatePromoteUser, action) => {\n    switch (action.type) {\n        case PROMOTE_USER_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case PROMOTE_USER_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case PROMOTE_USER_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// demoteUserReducer\nconst initialStateDemoteUser = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst demoteUserReducer = (state = initialStateDemoteUser, action) => {\n    switch (action.type) {\n        case DEMOTE_USER_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case DEMOTE_USER_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case DEMOTE_USER_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// changeTimeLineUserDataReducer\nconst initialStateChangeTimeLineUserData = {\n    id: '',\n    username: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    address: '',\n    city: '',\n    search: '',\n    category: '',\n    profilePicUrl: placeholder_user_image,\n    backgroundImageUrl: default_background_image,\n    authority: '',\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst changeTimeLineUserDataReducer = (state = initialStateChangeTimeLineUserData, action) => {\n    switch (action.type) {\n        case CHANGE_TIMELINE_USERDATA_BEGIN:\n            return Object.assign({},\n                state,\n                initialStateTimeLineUserData,\n                { loading: true }\n            )\n        case CHANGE_TIMELINE_USERDATA_SUCCESS:\n            return Object.assign({},\n                state,\n                action.payload,\n                {\n                    hasError: false,\n                    error: '',\n                    message: '',\n                    status: '',\n                    path: '',\n                    loading: false,\n                }\n            )\n        case CHANGE_TIMELINE_USERDATA_ERROR:\n            return Object.assign({},\n                state,\n                initialStateTimeLineUserData,\n                {\n                    hasError: true,\n                    error: action.error,\n                    message: action.message,\n                    status: action.status,\n                    path: action.path,\n                    loading: false,\n                }\n            )\n        default:\n            return state\n    }\n}\n\n// fetchAllFriendsReducer\nconst initialStateAllFriends = {\n    friendsArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst fetchAllFriendsReducer = (state = initialStateAllFriends, action) => {\n    switch (action.type) {\n        case FETCH_ALLFRIENDS_BEGIN:\n            return Object.assign({}, state, {\n                friendsArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FETCH_ALLFRIENDS_SUCCESS:\n            return Object.assign({}, state, {\n                friendsArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case FETCH_ALLFRIENDS_ERROR:\n            return Object.assign({}, state, {\n                friendsArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        case UPDATE_ALL_FRIENDS:\n            return Object.assign({}, state, {\n                friendsArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case REMOVE_FRIEND_SUCCESS:\n            return Object.assign({}, state, {\n                friendsArr: removeFriend(state, action.friendToRemoveId),\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\nconst removeFriend = (state, friendToRemoveId) => {\n    return state.friendsArr.filter(friend => friend.id !== friendToRemoveId);\n}\n\n// changeAllFriendsReducer\nconst initialStateChangeAllFriends = {\n    friendsArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst changeAllFriendsReducer = (state = initialStateChangeAllFriends, action) => {\n    switch (action.type) {\n        case CHANGE_ALLFRIENDS_BEGIN:\n            return Object.assign({}, state, {\n                friendsArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case CHANGE_ALLFRIENDS_SUCCESS:\n            return Object.assign({}, state, {\n                friendsArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case CHANGE_ALLFRIENDS_ERROR:\n            return Object.assign({}, state, {\n                friendsArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// removeFriendReducer\nconst initialStateRemoveFriend = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst removeFriendReducer = (state = initialStateRemoveFriend, action) => {\n    switch (action.type) {\n        case REMOVE_FRIEND_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case REMOVE_FRIEND_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case REMOVE_FRIEND_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// findFriends\nconst initialStateFindFriends = {\n    friendsCandidatesArr: [],\n    userWaitingForAcceptingRequest: [],\n    usersReceivedRequestFromCurrentUser: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst findFriendsReducer = (state = initialStateFindFriends, action) => {\n    switch (action.type) {\n        case FIND_FRIENDS_BEGIN:\n            return Object.assign({}, state, {\n                friendsCandidatesArr: [],\n                userWaitingForAcceptingRequest: [],\n                usersReceivedRequestFromCurrentUser: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FIND_FRIENDS_SUCCESS:\n            return setFindFriendsSuccessState(state, action.payload)\n        case FIND_FRIENDS_ERROR:\n            return Object.assign({}, state, {\n                friendsCandidatesArr: [],\n                userWaitingForAcceptingRequest: [],\n                usersReceivedRequestFromCurrentUser: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        case ADD_FRIEND_SUCCESS:\n            return sendUserRequest(state, action.friendCandidateId);\n        case CANCEL_REQUEST_SUCCESS:\n            return cancelRequest(state, action.friendToRejectId);\n        case CONFIRM_REQUEST_SUCCESS:\n            return confirmRequest(state, action.friendToAcceptId);\n        default:\n            return state\n    }\n}\n\nconst setFindFriendsSuccessState = (state, response) => {\n    const friendsCandidatesArr = response.filter(user => user.status !== 0 && user.status !== 1);\n    const userWaitingForAcceptingRequest = response.filter(user => user.status === 0 && user.starterOfAction === true);\n    const usersReceivedRequestFromCurrentUser = response.filter(user => user.status === 0 && user.starterOfAction === false);\n\n    return Object.assign({}, state, {\n        friendsCandidatesArr: friendsCandidatesArr,\n        userWaitingForAcceptingRequest: userWaitingForAcceptingRequest,\n        usersReceivedRequestFromCurrentUser: usersReceivedRequestFromCurrentUser,\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n}\n\nconst sendUserRequest = (state, friendCandidateId) => {\n    const userToAddIndex = state.friendsCandidatesArr.findIndex(user => user.id === friendCandidateId);\n    const userToAdd = state.friendsCandidatesArr[userToAddIndex];\n\n    const friendsCandidatesArr = state.friendsCandidatesArr.filter(user => user.id !== friendCandidateId);\n    const usersReceivedRequestFromCurrentUser = [...state.usersReceivedRequestFromCurrentUser, userToAdd]\n\n    return Object.assign({}, state, {\n        friendsCandidatesArr: friendsCandidatesArr,\n        userWaitingForAcceptingRequest: state.userWaitingForAcceptingRequest.slice(),\n        usersReceivedRequestFromCurrentUser: usersReceivedRequestFromCurrentUser,\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n\n}\n\nconst cancelRequest = (state, friendToRejectId) => {\n    let friendsCandidatesArr = state.friendsCandidatesArr.slice();\n    let userWaitingForAcceptingRequest = state.userWaitingForAcceptingRequest.slice();\n    let usersReceivedRequestFromCurrentUser = state.usersReceivedRequestFromCurrentUser.slice();\n\n    let userToCancelIndex = usersReceivedRequestFromCurrentUser.findIndex(user => user.id === friendToRejectId);\n\n    if (userToCancelIndex > -1) {\n        const userToCancel = usersReceivedRequestFromCurrentUser[userToCancelIndex];\n        usersReceivedRequestFromCurrentUser = usersReceivedRequestFromCurrentUser.filter(user => user.id !== friendToRejectId);\n        friendsCandidatesArr = [...friendsCandidatesArr, userToCancel]\n    } else {\n        userToCancelIndex = userWaitingForAcceptingRequest.findIndex(user => user.id === friendToRejectId);\n        const userToCancel = userWaitingForAcceptingRequest[userToCancelIndex];\n        userWaitingForAcceptingRequest = userWaitingForAcceptingRequest.filter(user => user.id !== friendToRejectId);\n        friendsCandidatesArr = [...friendsCandidatesArr, userToCancel]\n    }\n\n    return Object.assign({}, state, {\n        friendsCandidatesArr,\n        userWaitingForAcceptingRequest,\n        usersReceivedRequestFromCurrentUser,\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n\n}\n\nconst confirmRequest = (state, friendToAcceptId) => {\n    const userWaitingForAcceptingRequest = state.userWaitingForAcceptingRequest.filter(user => user.id !== friendToAcceptId);\n\n    return Object.assign({}, state, {\n        friendsCandidatesArr: state.friendsCandidatesArr.slice(),\n        userWaitingForAcceptingRequest,\n        usersReceivedRequestFromCurrentUser: state.usersReceivedRequestFromCurrentUser.slice(),\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n\n}\n\n// addFriend\nconst initialStateAddFriend = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst addfriendReducer = (state = initialStateAddFriend, action) => {\n    switch (action.type) {\n        case ADD_FRIEND_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case ADD_FRIEND_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case ADD_FRIEND_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// cancelRequest\nconst initialStateCancelRequest = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst cancelRequestReducer = (state = initialStateCancelRequest, action) => {\n    switch (action.type) {\n        case CANCEL_REQUEST_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case CANCEL_REQUEST_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case CANCEL_REQUEST_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// confirmRequestReducer\nconst initialStateConfirmRequest = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst confirmRequestReducer = (state = initialStateConfirmRequest, action) => {\n    switch (action.type) {\n        case CONFIRM_REQUEST_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case CONFIRM_REQUEST_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case CONFIRM_REQUEST_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// searchResults\nconst initialStateSearchResults = {\n    friendsArrSearch: [],\n    friendsCandidatesArr: [],\n    userWaitingForAcceptingRequest: [],\n    usersReceivedRequestFromCurrentUser: [],\n    search: '',\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst searchResultsReducer = (state = initialStateSearchResults, action) => {\n    switch (action.type) {\n        case SEARCH_RESULTS_BEGIN:\n            return Object.assign({}, state, {\n                friendsArrSearch: [],\n                friendsCandidatesArr: [],\n                userWaitingForAcceptingRequest: [],\n                usersReceivedRequestFromCurrentUser: [],\n                search: '',\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case SEARCH_RESULTS_SUCCESS:\n            return setSearchResultsSuccessState(state, action.payload, action.search)\n        case SEARCH_RESULTS_ERROR:\n            return Object.assign({}, state, {\n                friendsArrSearch: [],\n                friendsCandidatesArr: [],\n                userWaitingForAcceptingRequest: [],\n                usersReceivedRequestFromCurrentUser: [],\n                search: action.search,\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        case ADD_FRIEND_SUCCESS:\n            return searchResultsSendUserRequest(state, action.friendCandidateId);\n        case CANCEL_REQUEST_SUCCESS:\n            return searchResultsCancelRequest(state, action.friendToRejectId);\n        case CONFIRM_REQUEST_SUCCESS:\n            return searchResultsConfirmRequest(state, action.friendToAcceptId);\n        case REMOVE_FRIEND_SUCCESS:\n            return searchResultsRemoveFriend(state, action.friendToRemoveId)\n        default:\n            return state\n    }\n}\n\nconst setSearchResultsSuccessState = (state, response, search) => {\n    const friendsArrSearch = response.filter(user => user.status === 1);\n    const friendsCandidatesArr = response.filter(user => user.status !== 0 && user.status !== 1);\n    const userWaitingForAcceptingRequest = response.filter(user => user.status === 0 && user.starterOfAction === true);\n    const usersReceivedRequestFromCurrentUser = response.filter(user => user.status === 0 && user.starterOfAction === false);\n\n    return Object.assign({}, state, {\n        friendsArrSearch,\n        friendsCandidatesArr,\n        userWaitingForAcceptingRequest,\n        usersReceivedRequestFromCurrentUser,\n        search,\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n}\n\nconst searchResultsSendUserRequest = (state, friendCandidateId) => {\n    const userToAddIndex = state.friendsCandidatesArr.findIndex(user => user.id === friendCandidateId);\n\n    if (userToAddIndex > -1) {\n        const userToAdd = state.friendsCandidatesArr[userToAddIndex];\n\n        const friendsCandidatesArr = state.friendsCandidatesArr.filter(user => user.id !== friendCandidateId);\n        const usersReceivedRequestFromCurrentUser = [...state.usersReceivedRequestFromCurrentUser, userToAdd]\n\n        return Object.assign({}, state, {\n            friendsArrSearch: state.friendsArrSearch.slice(),\n            friendsCandidatesArr: friendsCandidatesArr,\n            userWaitingForAcceptingRequest: state.userWaitingForAcceptingRequest.slice(),\n            usersReceivedRequestFromCurrentUser: usersReceivedRequestFromCurrentUser,\n            search: state.search,\n            hasError: false,\n            error: '',\n            message: '',\n            status: '',\n            path: '',\n            loading: false,\n        })\n    } else {\n        return state;\n    }\n\n}\n\nconst searchResultsCancelRequest = (state, friendToRejectId) => {\n    let friendsArrSearch = state.friendsArrSearch.slice();\n    let friendsCandidatesArr = state.friendsCandidatesArr.slice();\n    let userWaitingForAcceptingRequest = state.userWaitingForAcceptingRequest.slice();\n    let usersReceivedRequestFromCurrentUser = state.usersReceivedRequestFromCurrentUser.slice();\n\n    let userToCancelIndex = usersReceivedRequestFromCurrentUser.findIndex(user => user.id === friendToRejectId);\n\n    if (userToCancelIndex > -1) {\n        const userToCancel = usersReceivedRequestFromCurrentUser[userToCancelIndex];\n        usersReceivedRequestFromCurrentUser = usersReceivedRequestFromCurrentUser.filter(user => user.id !== friendToRejectId);\n        friendsCandidatesArr = [...friendsCandidatesArr, userToCancel]\n    } else {\n        userToCancelIndex = userWaitingForAcceptingRequest.findIndex(user => user.id === friendToRejectId);\n        const userToCancel = userWaitingForAcceptingRequest[userToCancelIndex];\n        userWaitingForAcceptingRequest = userWaitingForAcceptingRequest.filter(user => user.id !== friendToRejectId);\n        friendsCandidatesArr = [...friendsCandidatesArr, userToCancel]\n    }\n\n    return Object.assign({}, state, {\n        friendsArrSearch,\n        friendsCandidatesArr,\n        userWaitingForAcceptingRequest,\n        usersReceivedRequestFromCurrentUser,\n        search: state.search,\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false,\n    })\n\n}\n\nconst searchResultsConfirmRequest = (state, friendToAcceptId) => {\n    let friendsArrSearch = state.friendsArrSearch.slice();\n\n    const userToAcceptIndex = state.userWaitingForAcceptingRequest.findIndex(user => user.id === friendToAcceptId);\n\n    if (userToAcceptIndex > -1) {\n        const userToAccept = state.userWaitingForAcceptingRequest[userToAcceptIndex];\n\n        friendsArrSearch = [...friendsArrSearch, userToAccept];\n        const userWaitingForAcceptingRequest = state.userWaitingForAcceptingRequest.filter(user => user.id !== friendToAcceptId);\n\n        return Object.assign({}, state, {\n            friendsArrSearch,\n            friendsCandidatesArr: state.friendsCandidatesArr.slice(),\n            userWaitingForAcceptingRequest,\n            usersReceivedRequestFromCurrentUser: state.usersReceivedRequestFromCurrentUser.slice(),\n            search: state.search,\n            hasError: false,\n            error: '',\n            message: '',\n            status: '',\n            path: '',\n            loading: false,\n        })\n    } else {\n        return state;\n    }\n}\n\nconst searchResultsRemoveFriend = (state, friendToRemoveId) => {\n    let friendsArrSearch = state.friendsArrSearch.slice();\n\n    const userToRemoveIndex = friendsArrSearch.findIndex(user => user.id === friendToRemoveId);\n\n    if (userToRemoveIndex > -1) {\n        const userToRemove = friendsArrSearch[userToRemoveIndex];\n        friendsArrSearch = state.friendsArrSearch.filter(friend => friend.id !== friendToRemoveId)\n\n        const friendsCandidatesArr = [...state.friendsCandidatesArr, userToRemove]\n\n        return Object.assign({}, state, {\n            friendsArrSearch,\n            friendsCandidatesArr,\n            userWaitingForAcceptingRequest: state.userWaitingForAcceptingRequest,\n            usersReceivedRequestFromCurrentUser: state.usersReceivedRequestFromCurrentUser,\n            search: state.search,\n            hasError: false,\n            error: '',\n            message: '',\n            status: '',\n            path: '',\n            loading: false,\n        })\n    } else {\n        return state;\n    }\n\n\n}\n\nexport {\n    fetchAllChatFriendsReducer,\n    loggedInUserDataReducer,\n    timeLineUserDataReducer,\n    fetchAllFriendsReducer,\n    updateUserReducer,\n    fetchAllUsersReducer,\n    promoteUserReducer,\n    demoteUserReducer,\n    changeTimeLineUserDataReducer,\n    changeAllFriendsReducer,\n    removeFriendReducer,\n    deleteUserReducer,\n    findFriendsReducer,\n    addfriendReducer,\n    cancelRequestReducer,\n    confirmRequestReducer,\n    searchResultsReducer,\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
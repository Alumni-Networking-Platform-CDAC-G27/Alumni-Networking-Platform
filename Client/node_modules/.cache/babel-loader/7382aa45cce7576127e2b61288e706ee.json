{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\salma\\\\Desktop\\\\IN DEVLOPMENT\\\\Alumani\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar BASE_URL = 'http://localhost:8000';\nvar getAuthHeader = function getAuthHeader() {\n  var token = localStorage.getItem(\"token\");\n  return token && token.length ? {\n    'Authorization': \"Bearer \".concat(token)\n  } : {};\n};\nexport default {\n  get: function get(endpoint, callback) {\n    return fetch(BASE_URL + endpoint, {\n      method: 'GET',\n      headers: _objectSpread({\n        Accept: 'application/json'\n      }, getAuthHeader())\n    }).then(checkStatus)\n    // .then(data => data.json())\n    .then(callback);\n  },\n  post: function post(endpoint, data, callback) {\n    return fetch(BASE_URL + endpoint, {\n      method: 'POST',\n      headers: _objectSpread({\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }, getAuthHeader()),\n      body: JSON.stringify(data)\n    }).then(checkStatus)\n    // .then(res => res.json())\n    .then(callback);\n  },\n  put: function put(endpoint, data, callback) {\n    return fetch(BASE_URL + endpoint, {\n      method: 'PUT',\n      headers: _objectSpread({\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }, getAuthHeader()),\n      body: JSON.stringify(data)\n    }).then(checkStatus).then(callback);\n  },\n  delete: function _delete(endpoint, data, callback) {\n    return fetch(BASE_URL + endpoint, {\n      method: 'DELETE',\n      headers: _objectSpread({\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }, getAuthHeader()),\n      body: JSON.stringify(data)\n    }).then(checkStatus).then(callback);\n  },\n  update: function update(data) {\n    return fetch(BASE_URL + '/users/update', {\n      method: 'put',\n      body: JSON.stringify(data),\n      headers: _objectSpread({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }, getAuthHeader())\n    }).then(checkStatus).then(function () {\n      return console.log('updated!!!');\n    });\n    // .catch(err => {\n    //     console.log(err)\n    // })\n  },\n  addPhoto: function addPhoto(endpoint, data, callback) {\n    return fetch(BASE_URL + endpoint, {\n      method: 'POST',\n      headers: _objectSpread({}, getAuthHeader()),\n      body: data\n    }).then(checkStatus).then(callback);\n  }\n};\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response.json();\n  } else {\n    var error = new Error(response.statusText);\n    if (response.status === 403 && response.url === BASE_URL + '/login') {\n      error.message = 'Incorrect credentials!';\n      error.response = response;\n      throw error;\n    } else if (response.status === 403 && response.type === 'cors') {\n      console.log('err response: ', response);\n      error.message = 'Your JWT token is expired. Please log in!';\n      error.status = 403;\n      error.type = 'cors';\n      throw error;\n    } else if (response.status === 400) {\n      console.log('err response: ', response);\n      error.message = 'Error: Bad request';\n      // error.message = response.message\n      error.status = 400;\n      error.type = 'cors';\n      throw error;\n    }\n    // else if (response.status === 500) {\n    //     console.log('err response: ', response)\n    //     error.message = 'Something went wrong'\n    //     error.status = 403;\n    //     error.type = 'cors'\n    //     throw error;\n    // }\n    else {\n      return response.json();\n    }\n  }\n}","map":{"version":3,"names":["BASE_URL","getAuthHeader","token","localStorage","getItem","length","concat","get","endpoint","callback","fetch","method","headers","_objectSpread","Accept","then","checkStatus","post","data","body","JSON","stringify","put","delete","update","console","log","addPhoto","response","status","json","error","Error","statusText","url","message","type"],"sources":["C:/Users/salma/Desktop/IN DEVLOPMENT/Alumani/Client/src/infrastructure/requester.js"],"sourcesContent":["const BASE_URL = 'http://localhost:8000';\n\nconst getAuthHeader = () => {\n    const token = localStorage.getItem(\"token\");\n\n    return (token && token.length)\n        ? { 'Authorization': `Bearer ${token}` }\n        : {}\n}\n\nexport default {\n    get: (endpoint, callback) => {\n        return fetch(BASE_URL + endpoint, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                ...getAuthHeader(),\n            },\n        }).then(checkStatus)\n            // .then(data => data.json())\n            .then(callback);\n    },\n\n    post: (endpoint, data, callback) => {\n        return fetch(BASE_URL + endpoint, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                ...getAuthHeader(),\n            },\n\n            body: JSON.stringify(data)\n        }).then(checkStatus)\n            // .then(res => res.json())\n            .then(callback);\n    },\n\n    put: (endpoint, data, callback) => {\n        return fetch(BASE_URL + endpoint, {\n            method: 'PUT',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                ...getAuthHeader(),\n            },\n            body: JSON.stringify(data)\n        }).then(checkStatus)\n            .then(callback);\n    },\n\n    delete: (endpoint, data, callback) => {\n        return fetch(BASE_URL + endpoint, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                ...getAuthHeader(),\n            },\n            body: JSON.stringify(data)\n        }).then(checkStatus)\n            .then(callback)\n    },\n\n    update: (data) => {\n        return fetch(BASE_URL + '/users/update', {\n            method: 'put',\n            body: JSON.stringify(data),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                ...getAuthHeader(),\n            }\n        }).then(checkStatus)\n            .then(() => console.log('updated!!!'))\n        // .catch(err => {\n        //     console.log(err)\n        // })\n\n    },\n\n    addPhoto: (endpoint, data, callback) => {\n        return fetch(BASE_URL + endpoint, {\n            method: 'POST',\n            headers: {\n                ...getAuthHeader()\n            },\n            body: data\n        }).then(checkStatus)\n            .then(callback)\n    }\n}\n\nfunction checkStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n        return response.json()\n    } else {\n        var error = new Error(response.statusText);\n        if (response.status === 403 && response.url === (BASE_URL + '/login')) {\n            error.message = 'Incorrect credentials!';\n            error.response = response;\n            throw error;\n        } else if (response.status === 403 && response.type === 'cors') {\n            console.log('err response: ', response)\n            error.message = 'Your JWT token is expired. Please log in!'\n            error.status = 403;\n            error.type = 'cors'\n            throw error;\n        } else if (response.status === 400) {\n            console.log('err response: ', response)\n            error.message = 'Error: Bad request'\n            // error.message = response.message\n            error.status = 400;\n            error.type = 'cors'\n            throw error;\n        }\n        // else if (response.status === 500) {\n        //     console.log('err response: ', response)\n        //     error.message = 'Something went wrong'\n        //     error.status = 403;\n        //     error.type = 'cors'\n        //     throw error;\n        // }\n        else {\n            return response.json();\n        }\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
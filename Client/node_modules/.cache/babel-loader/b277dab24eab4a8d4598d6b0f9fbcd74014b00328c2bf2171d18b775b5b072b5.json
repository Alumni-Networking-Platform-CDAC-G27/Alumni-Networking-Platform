{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rijul\\\\Downloads\\\\Alumni\\\\Alumani\\\\Client\\\\src\\\\components\\\\home\\\\MessageBox.js\";\nimport React, { Component, Fragment } from 'react';\nimport { userService } from '../../infrastructure';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport FriendChatBox from './FriendChatBox';\nimport FriendMessage from './FriendMessage';\nimport '../user/css/UserAllPage.css';\nimport './css/MessageBox.css';\nimport { connect } from 'react-redux';\nimport { fetchAllChatFriendsAction, updateUserStatusAction } from '../../store/actions/userActions';\nimport { fetchAllMessagesAction, addMessageAction, fetchAllUnreadMessagesAction } from '../../store/actions/messageActions';\nimport Stomp from \"stompjs\";\nimport SockJS from \"sockjs-client\";\nclass MessageBox extends Component {\n  constructor(props) {\n    super(props);\n    this.initializeWebSocketConnection = () => {\n      const ws = new SockJS(this.serverUrl);\n      this.stompClient = Stomp.over(ws);\n      const headers = this.getAuthHeader();\n      this.stompClient.connect(headers, frame => {\n        if (this._isMounted) {\n          this.setState({\n            clientConnected: true\n          });\n          this.stompClient.subscribe(\"/user/queue/position-update\", message => {\n            if (message.body) {\n              const messageBody = JSON.parse(message.body);\n              if (this._isMounted && (messageBody.fromUserId === this.state.chatUserId || messageBody.fromUserId === userService.getUserId())) {\n                this.props.addMessage(messageBody);\n              }\n              if (messageBody.fromUserId !== userService.getUserId()) {\n                const formattedUserNames = userService.formatUsername(messageBody.fromUserFirstName, messageBody.fromUserLastName);\n                toast.info(/*#__PURE__*/React.createElement(ToastComponent.infoToast, {\n                  text: `You have a new message from ${formattedUserNames}!`,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 40\n                  }\n                }), {\n                  position: toast.POSITION.TOP_RIGHT\n                });\n                this.props.loadAllUnreadMessages();\n              }\n            }\n          });\n          this.stompClient.subscribe(\"/chat/login\", message => {\n            if (message.body) {\n              const parsedBody = JSON.parse(message.body);\n              this.changeUserOnlineStatus(parsedBody);\n            }\n          });\n          this.stompClient.subscribe(\"/chat/logout\", message => {\n            if (message.body) {\n              const parsedBody = JSON.parse(message.body);\n              this.changeUserOnlineStatus(parsedBody);\n            }\n          });\n        }\n      }, () => {\n        toast.error(/*#__PURE__*/React.createElement(ToastComponent.errorToast, {\n          text: `Lost connection to ${this.serverUrl}. Refresh the page to reconnect.`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }\n        }), {\n          position: toast.POSITION.TOP_RIGHT\n        });\n\n        //// Callback for automatically reconnecting to the server\n        // setTimeout(() => {\n        //     toast.error(<ToastComponent.errorToast text={`Lost connection to ${this.serverUrl}. Trying to reconnect.`} />, {\n        //         position: toast.POSITION.TOP_RIGHT\n        //     });\n        //     this.initializeWebSocketConnection();\n        // }, 10000);\n      });\n    };\n    this.getAuthHeader = () => {\n      const token = localStorage.getItem(\"token\");\n      return token && token.length ? {\n        'Authorization': `Bearer ${token}`\n      } : {};\n    };\n    this.getAllMessages = chatUserId => {\n      this.props.fetchAllMessages(chatUserId);\n    };\n    this.loadAllChatFriends = () => {\n      const userId = userService.getUserId();\n      this.props.loadAllChatFriends(userId);\n    };\n    this.handleBlur = field => event => {\n      this.setState({\n        touched: {\n          ...this.state.touched,\n          [field]: true\n        }\n      });\n    };\n    this.validate = content => {\n      return {\n        content: content.length === 0\n      };\n    };\n    this.changeHeight = () => {\n      const userBoxHeight = this.state.userBoxHeight;\n      if (userBoxHeight === '') {\n        this.setState({\n          userBoxHeight: 'toggle'\n        });\n      } else {\n        this.setState({\n          userBoxHeight: ''\n        });\n      }\n    };\n    this.changeChatBoxHeight = () => {\n      const chatBoxHeight = this.state.chatBoxHeight;\n      if (chatBoxHeight === '') {\n        this.setState({\n          chatBoxHeight: 'toggle-chat-container'\n        });\n      } else {\n        this.setState({\n          chatBoxHeight: ''\n        });\n      }\n    };\n    this.changeChatBoxDisplay = () => {\n      const chatBoxDisplay = this.state.chatBoxDisplay;\n      if (chatBoxDisplay === '') {\n        this.setState({\n          chatBoxDisplay: 'display-none'\n        });\n      } else {\n        this.setState({\n          chatBoxDisplay: ''\n        });\n      }\n    };\n    this.showUserChatBox = (data, event) => {\n      const {\n        id,\n        firstName,\n        lastName,\n        profilePicUrl\n      } = data;\n      let chatUserNameFormatted = userService.formatUsername(firstName, lastName, 18);\n      this.setState({\n        chatUserId: id,\n        chatUserFirstName: firstName,\n        chatUserLastName: lastName,\n        chatUserNameFormatted,\n        chatUserProfilePicUrl: profilePicUrl,\n        shouldScrollDown: true,\n        chatBoxDisplay: '',\n        chatBoxHeight: '',\n        content: ''\n      }, () => {\n        this.getAllMessages(id);\n      });\n    };\n    this.closeUserChatBox = () => {\n      this.setState({\n        chatBoxDisplay: 'display-none'\n      });\n    };\n    this.getOnlineUserCount = () => {\n      let usersCount = this.props.friendsChatArr.filter(user => {\n        return user.online === true;\n      });\n      return usersCount.length;\n    };\n    this.state = {\n      loggedInUserId: '',\n      chatUserId: '',\n      chatUserFirstName: '',\n      chatUserLastName: '',\n      chatUserNameFormatted: '',\n      chatUserProfilePicUrl: '',\n      userBoxHeight: 'toggle',\n      chatBoxHeight: '',\n      chatBoxDisplay: 'display-none',\n      content: '',\n      shouldScrollDown: false,\n      friendsArrLength: 0,\n      clientConnected: false,\n      touched: {\n        content: false\n      }\n    };\n    this._isMounted = false;\n    this.serverUrl = userService.getBaseUrl() + '/socket';\n    this.stompClient = null;\n    this.handleBlur = this.handleBlur.bind(this);\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    this.showUserChatBox = this.showUserChatBox.bind(this);\n    this.changeChatBoxDisplay = this.changeChatBoxDisplay.bind(this);\n    this.getAllMessages = this.getAllMessages.bind(this);\n    this.loadAllChatFriends = this.loadAllChatFriends.bind(this);\n  }\n  componentDidMount() {\n    const userId = userService.getUserId();\n    this.setState({\n      loggedInUserId: userId\n    });\n    this.initializeWebSocketConnection();\n    this.loadAllChatFriends();\n    this._isMounted = true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.allMessagesArr !== prevProps.allMessagesArr) {\n      this.setState({\n        content: ''\n      }, () => {\n        if (this.state.shouldScrollDown) {\n          this.scrollDown();\n        } else {\n          this.setState({\n            shouldScrollDown: true\n          }, this.scrollTop());\n        }\n      });\n    }\n    if (this.props.friendsChatArr.length !== prevProps.friendsChatArr.length) {\n      this.setState({\n        chatBoxDisplay: 'display-none'\n      });\n    }\n    if (this.props.triggerMessageLoad !== prevProps.triggerMessageLoad) {\n      const userData = this.props.triggerMessageLoad;\n      this.showUserChatBox(userData);\n    }\n    const errorMessage = this.getErrorMessage(prevProps, prevState);\n    const successMessage = this.getSuccessMessage(prevProps, prevState);\n    if (errorMessage) {\n      toast.error(/*#__PURE__*/React.createElement(ToastComponent.errorToast, {\n        text: errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }), {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    } else if (successMessage) {\n      toast.success(/*#__PURE__*/React.createElement(ToastComponent.successToast, {\n        text: successMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 27\n        }\n      }), {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n  }\n  componentWillUnmount() {\n    this.stompClient.disconnect();\n    this._isMounted = false;\n  }\n  getSuccessMessage(prevProps, prevState) {\n    if (!this.props.fetchAllChatFriends.hasError && this.props.fetchAllChatFriends.message && this.props.fetchAllChatFriends !== prevProps.fetchAllChatFriends) {\n      return this.props.fetchAllChatFriends.message;\n    } else if (!this.props.fetchAllMessages.hasError && this.props.fetchAllMessages.message && this.props.fetchAllMessages !== prevProps.fetchAllMessages) {\n      return this.props.fetchAllMessages.message;\n    }\n    return null;\n  }\n  getErrorMessage(prevProps, prevState) {\n    if (this.props.fetchAllChatFriends.hasError && prevProps.fetchAllChatFriends.error !== this.props.fetchAllChatFriends.error) {\n      return this.props.fetchAllChatFriends.message || 'Server Error';\n    } else if (this.props.fetchAllMessages.hasError && prevProps.fetchAllMessages.error !== this.props.fetchAllMessages.error) {\n      return this.props.fetchAllMessages.message || 'Server Error';\n    }\n    return null;\n  }\n  sendMessage(payload) {\n    this.stompClient.send(\"/app/message\", {}, JSON.stringify(payload));\n    this.setState({\n      content: ''\n    });\n  }\n  onSubmitHandler(event) {\n    event.preventDefault();\n    if (!this.canBeSubmitted()) {\n      return;\n    }\n    const {\n      chatUserId: toUserId,\n      content\n    } = this.state;\n    if (this.state.clientConnected) {\n      this.sendMessage({\n        toUserId,\n        content\n      });\n    } else {\n      toast.error(/*#__PURE__*/React.createElement(ToastComponent.errorToast, {\n        text: `StompClient is disconnected`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }\n      }), {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n  }\n  onChangeHandler(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  canBeSubmitted() {\n    const {\n      content\n    } = this.state;\n    const errors = this.validate(content);\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\n    return !isDisabled;\n  }\n  scrollToBottom() {\n    const e = document.getElementById('chat-content');\n    e.scrollTop = e.scrollHeight - e.getBoundingClientRect().height;\n  }\n  scrollTop() {\n    const container = document.getElementById('chat-content');\n    container.scrollTop = 0;\n  }\n  scrollDown() {\n    const container = document.getElementById('chat-content');\n    container.scrollTop = container.scrollHeight;\n  }\n  changeUserOnlineStatus(webSocketMessage) {\n    const {\n      userId: id,\n      online\n    } = webSocketMessage;\n    this.props.updateUserStatus({\n      id,\n      online\n    });\n  }\n  render() {\n    if (!this.state.clientConnected) {\n      console.log('Connecting...');\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"text-center pt-5 mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 20\n        }\n      }, \"Connecting...\");\n    }\n    const {\n      content\n    } = this.state;\n    const errors = this.validate(content);\n    const isEnabled = !Object.keys(errors).some(x => errors[x]);\n    const displayButon = isEnabled ? '' : 'hidden';\n    const loggedInUserFirstName = userService.getFirstName();\n    const userBoxHeight = this.state.userBoxHeight;\n    const chatBoxHeight = this.state.chatBoxHeight;\n    const chatBoxDisplay = this.state.chatBoxDisplay;\n    const {\n      chatUserProfilePicUrl,\n      chatUserNameFormatted\n    } = this.state;\n    const imageClassUserPick = userService.getImageSize(chatUserProfilePicUrl);\n    const firstNameFormatted = userService.formatUsername(loggedInUserFirstName);\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: `messagebox-container ${userBoxHeight}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messagebox-header\",\n      onClick: this.changeHeight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messagebox-chat-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-location-arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"chat-title\",\n      style: {\n        color: ' #333'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 25\n      }\n    }, \"Chat \\u2022 \", this.getOnlineUserCount())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messagebox-friendsChatArr-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 21\n      }\n    }, this.props.friendsChatArr.map(friend => /*#__PURE__*/React.createElement(FriendChatBox, Object.assign({\n      key: friend.id,\n      showUserChatBox: this.showUserChatBox\n    }, friend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 29\n      }\n    }))))), /*#__PURE__*/React.createElement(\"section\", {\n      className: `chat-container ${chatBoxHeight} ${chatBoxDisplay}`,\n      id: \"chat-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-friend-container\",\n      onClick: this.changeChatBoxHeight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-friend-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: imageClassUserPick,\n      src: chatUserProfilePicUrl,\n      alt: \"bender\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-username-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chat-username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 29\n      }\n    }, chatUserNameFormatted))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"close-button-container\",\n      onClick: this.closeUserChatBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn chat-uiButtonGroup chat-fbPhotoCurationControl  chat-delete-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 114\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-content\",\n      id: \"chat-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 25\n      }\n    }, this.props.allMessagesArr.map(message => /*#__PURE__*/React.createElement(FriendMessage, Object.assign({\n      key: message.id\n    }, message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-area-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      id: \"chat-textarea-form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n      name: \"content\",\n      id: \"content\",\n      className: \"chat-textarea\",\n      value: this.state.content,\n      onChange: this.onChangeHandler,\n      onBlur: this.handleBlur('content'),\n      \"aria-describedby\": \"contentHelp\",\n      placeholder: `Type your message, ${firstNameFormatted}?`,\n      maxRows: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      disabled: !isEnabled,\n      style: {\n        'visibility': `${displayButon}`\n      },\n      type: \"submit\",\n      className: \"btn fas fa-location-arrow App-button-primary send-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 45\n      }\n    })))))))));\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    friendsChatArr: state.fetchAllChatFriends.friendsChatArr,\n    fetchAllChatFriends: state.fetchAllChatFriends,\n    allMessagesArr: state.fetchAllMessages.allMessagesArr,\n    fetchAllMessages: state.fetchAllMessages,\n    triggerMessageLoad: state.triggerMessageLoad\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadAllChatFriends: userId => {\n      dispatch(fetchAllChatFriendsAction(userId));\n    },\n    fetchAllMessages: chatUserId => {\n      dispatch(fetchAllMessagesAction(chatUserId));\n    },\n    updateUserStatus: userData => {\n      dispatch(updateUserStatusAction(userData));\n    },\n    addMessage: messageBody => {\n      dispatch(addMessageAction(messageBody));\n    },\n    loadAllUnreadMessages: () => {\n      dispatch(fetchAllUnreadMessagesAction());\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBox);","map":{"version":3,"names":["React","Component","Fragment","userService","toast","ToastComponent","TextareaAutosize","FriendChatBox","FriendMessage","connect","fetchAllChatFriendsAction","updateUserStatusAction","fetchAllMessagesAction","addMessageAction","fetchAllUnreadMessagesAction","Stomp","SockJS","MessageBox","constructor","props","initializeWebSocketConnection","ws","serverUrl","stompClient","over","headers","getAuthHeader","frame","_isMounted","setState","clientConnected","subscribe","message","body","messageBody","JSON","parse","fromUserId","state","chatUserId","getUserId","addMessage","formattedUserNames","formatUsername","fromUserFirstName","fromUserLastName","info","createElement","infoToast","text","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","position","POSITION","TOP_RIGHT","loadAllUnreadMessages","parsedBody","changeUserOnlineStatus","error","errorToast","token","localStorage","getItem","length","getAllMessages","fetchAllMessages","loadAllChatFriends","userId","handleBlur","field","event","touched","validate","content","changeHeight","userBoxHeight","changeChatBoxHeight","chatBoxHeight","changeChatBoxDisplay","chatBoxDisplay","showUserChatBox","data","id","firstName","lastName","profilePicUrl","chatUserNameFormatted","chatUserFirstName","chatUserLastName","chatUserProfilePicUrl","shouldScrollDown","closeUserChatBox","getOnlineUserCount","usersCount","friendsChatArr","filter","user","online","loggedInUserId","friendsArrLength","getBaseUrl","bind","onChangeHandler","onSubmitHandler","componentDidMount","componentDidUpdate","prevProps","prevState","allMessagesArr","scrollDown","scrollTop","triggerMessageLoad","userData","errorMessage","getErrorMessage","successMessage","getSuccessMessage","success","successToast","componentWillUnmount","disconnect","fetchAllChatFriends","hasError","sendMessage","payload","send","stringify","preventDefault","canBeSubmitted","toUserId","target","name","value","errors","isDisabled","Object","keys","some","x","scrollToBottom","e","document","getElementById","scrollHeight","getBoundingClientRect","height","container","webSocketMessage","updateUserStatus","render","console","log","className","isEnabled","displayButon","loggedInUserFirstName","getFirstName","imageClassUserPick","getImageSize","firstNameFormatted","onClick","style","color","map","friend","assign","key","src","alt","onSubmit","onChange","onBlur","placeholder","maxRows","disabled","type","mapStateToProps","mapDispatchToProps","dispatch"],"sources":["C:/Users/rijul/Downloads/Alumni/Alumani/Client/src/components/home/MessageBox.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { userService } from '../../infrastructure';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport FriendChatBox from './FriendChatBox';\nimport FriendMessage from './FriendMessage';\nimport '../user/css/UserAllPage.css';\nimport './css/MessageBox.css';\nimport { connect } from 'react-redux';\nimport { fetchAllChatFriendsAction, updateUserStatusAction } from '../../store/actions/userActions';\nimport { fetchAllMessagesAction, addMessageAction, fetchAllUnreadMessagesAction } from '../../store/actions/messageActions';\n\nimport Stomp from \"stompjs\";\nimport SockJS from \"sockjs-client\";\n\nclass MessageBox extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            loggedInUserId: '',\n            chatUserId: '',\n            chatUserFirstName: '',\n            chatUserLastName: '',\n            chatUserNameFormatted: '',\n            chatUserProfilePicUrl: '',\n            userBoxHeight: 'toggle',\n            chatBoxHeight: '',\n            chatBoxDisplay: 'display-none',\n            content: '',\n            shouldScrollDown: false,\n            friendsArrLength: 0,\n            clientConnected: false,\n            touched: {\n                content: false,\n            }\n        };\n\n        this._isMounted = false;\n\n        this.serverUrl = userService.getBaseUrl() + '/socket'\n        this.stompClient = null;\n\n        this.handleBlur = this.handleBlur.bind(this);\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\n        this.showUserChatBox = this.showUserChatBox.bind(this);\n        this.changeChatBoxDisplay = this.changeChatBoxDisplay.bind(this);\n        this.getAllMessages = this.getAllMessages.bind(this);\n        this.loadAllChatFriends = this.loadAllChatFriends.bind(this);\n    }\n\n    componentDidMount() {\n        const userId = userService.getUserId();\n        this.setState({\n            loggedInUserId: userId,\n        });\n\n        this.initializeWebSocketConnection();\n        this.loadAllChatFriends();\n\n        this._isMounted = true;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.allMessagesArr !== prevProps.allMessagesArr) {\n            this.setState({\n                content: '',\n            }, () => {\n                if (this.state.shouldScrollDown) {\n                    this.scrollDown();\n                } else {\n                    this.setState({ shouldScrollDown: true }, this.scrollTop())\n                }\n            });\n        }\n\n        if (this.props.friendsChatArr.length !== prevProps.friendsChatArr.length) {\n            this.setState({\n                chatBoxDisplay: 'display-none'\n            })\n        }\n\n        if (this.props.triggerMessageLoad !== prevProps.triggerMessageLoad) {\n            const userData = this.props.triggerMessageLoad;\n            this.showUserChatBox(userData)\n        }\n\n        const errorMessage = this.getErrorMessage(prevProps, prevState);\n        const successMessage = this.getSuccessMessage(prevProps, prevState)\n\n        if (errorMessage) {\n            toast.error(<ToastComponent.errorToast text={errorMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        } else if (successMessage) {\n            toast.success(<ToastComponent.successToast text={successMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        this.stompClient.disconnect();\n        this._isMounted = false;\n    }\n\n    getSuccessMessage(prevProps, prevState) {\n        if (!this.props.fetchAllChatFriends.hasError && this.props.fetchAllChatFriends.message && this.props.fetchAllChatFriends !== prevProps.fetchAllChatFriends) {\n            return this.props.fetchAllChatFriends.message;\n        }\n        else if (!this.props.fetchAllMessages.hasError && this.props.fetchAllMessages.message && this.props.fetchAllMessages !== prevProps.fetchAllMessages) {\n            return this.props.fetchAllMessages.message;\n        }\n        return null;\n    }\n\n    getErrorMessage(prevProps, prevState) {\n        if (this.props.fetchAllChatFriends.hasError && prevProps.fetchAllChatFriends.error !== this.props.fetchAllChatFriends.error) {\n            return this.props.fetchAllChatFriends.message || 'Server Error';\n        }\n        else if (this.props.fetchAllMessages.hasError && prevProps.fetchAllMessages.error !== this.props.fetchAllMessages.error) {\n            return this.props.fetchAllMessages.message || 'Server Error';\n        }\n\n        return null;\n    }\n\n    initializeWebSocketConnection = () => {\n        const ws = new SockJS(this.serverUrl);\n        this.stompClient = Stomp.over(ws);\n        const headers = this.getAuthHeader();\n\n        this.stompClient.connect(headers, (frame) => {\n            if (this._isMounted) {\n                this.setState({ clientConnected: true });\n                this.stompClient.subscribe(\"/user/queue/position-update\", (message) => {\n                    if (message.body) {\n                        const messageBody = JSON.parse(message.body);\n                        if (this._isMounted && (messageBody.fromUserId === this.state.chatUserId || messageBody.fromUserId === userService.getUserId())) {\n                            this.props.addMessage(messageBody)\n                        }\n\n                        if (messageBody.fromUserId !== userService.getUserId()) {\n                            const formattedUserNames = userService.formatUsername(messageBody.fromUserFirstName, messageBody.fromUserLastName)\n\n                            toast.info(<ToastComponent.infoToast text={`You have a new message from ${formattedUserNames}!`} />, {\n                                position: toast.POSITION.TOP_RIGHT\n                            });\n\n                            this.props.loadAllUnreadMessages();\n                        }\n                    }\n                });\n\n                this.stompClient.subscribe(\"/chat/login\", (message) => {\n                    if (message.body) {\n                        const parsedBody = JSON.parse(message.body);\n                        this.changeUserOnlineStatus(parsedBody);\n                    }\n                });\n\n                this.stompClient.subscribe(\"/chat/logout\", (message) => {\n                    if (message.body) {\n                        const parsedBody = JSON.parse(message.body);\n                        this.changeUserOnlineStatus(parsedBody);\n                    }\n                });\n            }\n        }, () => {\n            toast.error(<ToastComponent.errorToast text={`Lost connection to ${this.serverUrl}. Refresh the page to reconnect.`} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n\n            //// Callback for automatically reconnecting to the server\n            // setTimeout(() => {\n            //     toast.error(<ToastComponent.errorToast text={`Lost connection to ${this.serverUrl}. Trying to reconnect.`} />, {\n            //         position: toast.POSITION.TOP_RIGHT\n            //     });\n            //     this.initializeWebSocketConnection();\n            // }, 10000);\n        });\n    }\n\n    sendMessage(payload) {\n        this.stompClient.send(\"/app/message\", {}, JSON.stringify(payload));\n        this.setState({ content: '' })\n    }\n\n    getAuthHeader = () => {\n        const token = localStorage.getItem(\"token\");\n        return (token && token.length)\n            ? { 'Authorization': `Bearer ${token}` }\n            : {}\n    }\n\n    getAllMessages = (chatUserId) => {\n        this.props.fetchAllMessages(chatUserId);\n    }\n\n    loadAllChatFriends = () => {\n        const userId = userService.getUserId();\n        this.props.loadAllChatFriends(userId);\n    }\n\n    onSubmitHandler(event) {\n        event.preventDefault();\n\n        if (!this.canBeSubmitted()) {\n            return;\n        }\n\n        const { chatUserId: toUserId, content } = this.state;\n\n        if (this.state.clientConnected) {\n            this.sendMessage({ toUserId, content });\n        } else {\n            toast.error(<ToastComponent.errorToast text={`StompClient is disconnected`} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n    }\n\n    onChangeHandler(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleBlur = (field) => (event) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true }\n        });\n    }\n\n    canBeSubmitted() {\n        const { content } = this.state;\n        const errors = this.validate(content);\n        const isDisabled = Object.keys(errors).some(x => errors[x])\n        return !isDisabled;\n    }\n\n    validate = (content) => {\n        return {\n            content: content.length === 0,\n        }\n    }\n\n    changeHeight = () => {\n        const userBoxHeight = this.state.userBoxHeight;\n        if (userBoxHeight === '') {\n            this.setState({ userBoxHeight: 'toggle' })\n        } else {\n            this.setState({ userBoxHeight: '' })\n        }\n    }\n\n    changeChatBoxHeight = () => {\n        const chatBoxHeight = this.state.chatBoxHeight;\n        if (chatBoxHeight === '') {\n            this.setState({ chatBoxHeight: 'toggle-chat-container' })\n        } else {\n            this.setState({ chatBoxHeight: '' })\n        }\n    }\n\n    changeChatBoxDisplay = () => {\n        const chatBoxDisplay = this.state.chatBoxDisplay;\n        if (chatBoxDisplay === '') {\n            this.setState({ chatBoxDisplay: 'display-none' })\n        } else {\n            this.setState({ chatBoxDisplay: '' })\n        }\n    }\n\n    showUserChatBox = (data, event) => {\n        const { id, firstName, lastName, profilePicUrl } = data\n        let chatUserNameFormatted = userService.formatUsername(firstName, lastName, 18)\n        this.setState({\n            chatUserId: id,\n            chatUserFirstName: firstName,\n            chatUserLastName: lastName,\n            chatUserNameFormatted,\n            chatUserProfilePicUrl: profilePicUrl,\n            shouldScrollDown: true,\n            chatBoxDisplay: '',\n            chatBoxHeight: '',\n            content: '',\n        }, () => {\n            this.getAllMessages(id);\n        })\n    }\n\n    closeUserChatBox = () => {\n        this.setState({ chatBoxDisplay: 'display-none' })\n    }\n\n    scrollToBottom() {\n        const e = document.getElementById('chat-content');\n        e.scrollTop = e.scrollHeight - e.getBoundingClientRect().height;\n    }\n\n    scrollTop() {\n        const container = document.getElementById('chat-content');\n        container.scrollTop = 0;\n    }\n\n    scrollDown() {\n        const container = document.getElementById('chat-content');\n        container.scrollTop = container.scrollHeight\n    }\n\n    getOnlineUserCount = () => {\n        let usersCount = this.props.friendsChatArr.filter(user => { return user.online === true });\n        return usersCount.length;\n    }\n\n    changeUserOnlineStatus(webSocketMessage) {\n        const { userId: id, online } = webSocketMessage;\n        this.props.updateUserStatus({ id, online });\n    }\n\n    render() {\n        if (!this.state.clientConnected) {\n            console.log('Connecting...')\n            return <h1 className=\"text-center pt-5 mt-5\">Connecting...</h1>\n        }\n\n        const { content } = this.state;\n        const errors = this.validate(content);\n        const isEnabled = !Object.keys(errors).some(x => errors[x]);\n        const displayButon = isEnabled ? '' : 'hidden';\n        const loggedInUserFirstName = userService.getFirstName();\n        const userBoxHeight = this.state.userBoxHeight;\n        const chatBoxHeight = this.state.chatBoxHeight;\n        const chatBoxDisplay = this.state.chatBoxDisplay;\n\n        const { chatUserProfilePicUrl, chatUserNameFormatted } = this.state;\n        const imageClassUserPick = userService.getImageSize(chatUserProfilePicUrl);\n        const firstNameFormatted = userService.formatUsername(loggedInUserFirstName);\n\n        return (\n            <Fragment>\n                <section className={`messagebox-container ${userBoxHeight}`} >\n                    <div className=\"messagebox-header\" onClick={this.changeHeight}>\n                        <div className=\"messagebox-chat-icon\">\n                            <i className=\"fas fa-location-arrow\"></i>\n                        </div>\n                        <h4 className=\"chat-title\" style={{ color: ' #333' }}>\n                            Chat &bull; {this.getOnlineUserCount()}\n                        </h4>\n                    </div>\n                    <div className=\"messagebox-friendsChatArr-wrapper\">\n\n                        {this.props.friendsChatArr.map((friend) =>\n                            <FriendChatBox\n                                key={friend.id}\n                                showUserChatBox={this.showUserChatBox}\n                                {...friend}\n                            />\n                        )}\n                    </div>\n                </section>\n                <section className={`chat-container ${chatBoxHeight} ${chatBoxDisplay}`} id=\"chat-container\">\n                    <div className=\"chat-friend-container\" onClick={this.changeChatBoxHeight}>\n                        <div className=\"chat-friend-image\">\n                            <img className={imageClassUserPick} src={chatUserProfilePicUrl} alt=\"bender\" />\n                        </div>\n                        <div className=\"chat-username-container\" >\n                            <p className=\"chat-username\">{chatUserNameFormatted}</p>\n                        </div>\n                    </div>\n\n                    <div className=\"close-button-container\" onClick={this.closeUserChatBox}>\n                        <div className=\"btn chat-uiButtonGroup chat-fbPhotoCurationControl  chat-delete-button\" ><i className=\"fas fa-times\"></i></div>\n                    </div>\n\n                    <div className=\"content-wrapper\">\n\n                        <div className=\"chat-content\" id=\"chat-content\">\n                            {this.props.allMessagesArr.map((message) =>\n                                <FriendMessage\n                                    key={message.id}\n                                    {...message}\n                                />\n                            )}\n                        </div>\n                        <div className=\"chat-footer\">\n                            <div className=\"chat-input-group\">\n                                <div className=\"chat-area-container\">\n                                    <form onSubmit={this.onSubmitHandler}>\n                                        <div className=\"\" id=\"chat-textarea-form-group\">\n                                            <TextareaAutosize\n                                                name=\"content\"\n                                                id=\"content\"\n                                                className=\"chat-textarea\"\n                                                value={this.state.content}\n                                                onChange={this.onChangeHandler}\n                                                onBlur={this.handleBlur('content')}\n                                                aria-describedby=\"contentHelp\"\n                                                placeholder={`Type your message, ${firstNameFormatted}?`}\n                                                maxRows={6}\n                                            >\n                                            </TextareaAutosize>\n                                        </div>\n\n                                        <div className=\"text-center\">\n                                            <button disabled={!isEnabled} style={{ 'visibility': `${displayButon}` }} type=\"submit\" className=\"btn fas fa-location-arrow App-button-primary send-btn\"></button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </section>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        friendsChatArr: state.fetchAllChatFriends.friendsChatArr,\n        fetchAllChatFriends: state.fetchAllChatFriends,\n\n        allMessagesArr: state.fetchAllMessages.allMessagesArr,\n        fetchAllMessages: state.fetchAllMessages,\n\n        triggerMessageLoad: state.triggerMessageLoad,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadAllChatFriends: (userId) => { dispatch(fetchAllChatFriendsAction(userId)) },\n        fetchAllMessages: (chatUserId) => { dispatch(fetchAllMessagesAction(chatUserId)) },\n        updateUserStatus: (userData) => { dispatch(updateUserStatusAction(userData)) },\n        addMessage: (messageBody) => { dispatch(addMessageAction(messageBody)) },\n        loadAllUnreadMessages: () => { dispatch(fetchAllUnreadMessagesAction()) },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBox);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React from'react';import{userService}from'../../infrastructure';import placeholder_user_image from'../../assets/images/placeholder.png';import'./css/Message.css';const FriendMessage=props=>{const{content,fromUserId,time}=props;const loggedInUserId=userService.getUserId();let chatContentClass='';if(fromUserId===loggedInUserId){chatContentClass='loggedInUser';}const dayTime=props.time.hour<=12?'AM':'PM';const month=props.time.month.substring(0,1)+props.time.month.substring(1,5).toLowerCase();const hour=props.time.hour<10?'0'+props.time.hour:props.time.hour;const minute=props.time.minute<10?'0'+props.time.minute:props.time.minute;const profilePicUrl=props.fromUserProfilePicUrl||placeholder_user_image;let imgClassName='';if(profilePicUrl){imgClassName=userService.getImageSize(profilePicUrl);}return/*#__PURE__*/React.createElement(\"div\",{className:\"message-container\"},/*#__PURE__*/React.createElement(\"div\",{className:`message-image ${chatContentClass}`},/*#__PURE__*/React.createElement(\"img\",{className:imgClassName,src:profilePicUrl,alt:\"creatorPic\"})),/*#__PURE__*/React.createElement(\"div\",{className:`message-description`},/*#__PURE__*/React.createElement(\"p\",{className:`message-content ${chatContentClass}`},\" \",content,\" \"),/*#__PURE__*/React.createElement(\"div\",{className:`message-info ${chatContentClass}`},/*#__PURE__*/React.createElement(\"p\",{className:\"message-time\"},\" \",time.dayOfMonth,\" \",month,\" \",hour,\":\",minute,\" \",dayTime))));};export default FriendMessage;","map":{"version":3,"names":["React","userService","placeholder_user_image","FriendMessage","props","content","fromUserId","time","loggedInUserId","getUserId","chatContentClass","dayTime","hour","month","substring","toLowerCase","minute","profilePicUrl","fromUserProfilePicUrl","imgClassName","getImageSize","createElement","className","src","alt","dayOfMonth"],"sources":["C:/Users/rijul/Downloads/Alumni/Alumani/Client/src/components/home/FriendMessage.js"],"sourcesContent":["import React from 'react';\nimport { userService } from '../../infrastructure';\nimport placeholder_user_image from '../../assets/images/placeholder.png';\n\nimport './css/Message.css';\n\nconst FriendMessage = (props) => {\n    const { content, fromUserId, time} = props;\n    const loggedInUserId = userService.getUserId();\n\n    let chatContentClass = '';\n\n    if (fromUserId === loggedInUserId) {\n        chatContentClass = 'loggedInUser';\n    }\n\n    const dayTime = props.time.hour <= 12 ? 'AM' : 'PM';\n    const month = props.time.month.substring(0, 1) + props.time.month.substring(1, 5).toLowerCase()\n    const hour = props.time.hour < 10 ? '0' + props.time.hour : props.time.hour;\n    const minute = props.time.minute < 10 ? '0' + props.time.minute : props.time.minute;\n\n    const profilePicUrl = props.fromUserProfilePicUrl || placeholder_user_image\n\n    let imgClassName = '';\n    if (profilePicUrl) {\n        imgClassName = userService.getImageSize(profilePicUrl);\n    }\n\n    return (\n        <div className=\"message-container\">\n            <div className={`message-image ${chatContentClass}`}>\n                <img className={imgClassName} src={profilePicUrl} alt=\"creatorPic\" />\n            </div>\n            <div className={`message-description`}>\n                <p className={`message-content ${chatContentClass}`}> {content} </p>\n                <div className={`message-info ${chatContentClass}`}>\n                    <p className=\"message-time\"> {time.dayOfMonth} {month} {hour}:{minute} {dayTime}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FriendMessage;\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,sBAAsB,CAClD,MAAO,CAAAC,sBAAsB,KAAM,qCAAqC,CAExE,MAAO,mBAAmB,CAE1B,KAAM,CAAAC,aAAa,CAAIC,KAAK,EAAK,CAC7B,KAAM,CAAEC,OAAO,CAAEC,UAAU,CAAEC,IAAI,CAAC,CAAGH,KAAK,CAC1C,KAAM,CAAAI,cAAc,CAAGP,WAAW,CAACQ,SAAS,CAAC,CAAC,CAE9C,GAAI,CAAAC,gBAAgB,CAAG,EAAE,CAEzB,GAAIJ,UAAU,GAAKE,cAAc,CAAE,CAC/BE,gBAAgB,CAAG,cAAc,CACrC,CAEA,KAAM,CAAAC,OAAO,CAAGP,KAAK,CAACG,IAAI,CAACK,IAAI,EAAI,EAAE,CAAG,IAAI,CAAG,IAAI,CACnD,KAAM,CAAAC,KAAK,CAAGT,KAAK,CAACG,IAAI,CAACM,KAAK,CAACC,SAAS,CAAC,CAAC,CAAE,CAAC,CAAC,CAAGV,KAAK,CAACG,IAAI,CAACM,KAAK,CAACC,SAAS,CAAC,CAAC,CAAE,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAC/F,KAAM,CAAAH,IAAI,CAAGR,KAAK,CAACG,IAAI,CAACK,IAAI,CAAG,EAAE,CAAG,GAAG,CAAGR,KAAK,CAACG,IAAI,CAACK,IAAI,CAAGR,KAAK,CAACG,IAAI,CAACK,IAAI,CAC3E,KAAM,CAAAI,MAAM,CAAGZ,KAAK,CAACG,IAAI,CAACS,MAAM,CAAG,EAAE,CAAG,GAAG,CAAGZ,KAAK,CAACG,IAAI,CAACS,MAAM,CAAGZ,KAAK,CAACG,IAAI,CAACS,MAAM,CAEnF,KAAM,CAAAC,aAAa,CAAGb,KAAK,CAACc,qBAAqB,EAAIhB,sBAAsB,CAE3E,GAAI,CAAAiB,YAAY,CAAG,EAAE,CACrB,GAAIF,aAAa,CAAE,CACfE,YAAY,CAAGlB,WAAW,CAACmB,YAAY,CAACH,aAAa,CAAC,CAC1D,CAEA,mBACIjB,KAAA,CAAAqB,aAAA,QAAKC,SAAS,CAAC,mBAAmB,eAC9BtB,KAAA,CAAAqB,aAAA,QAAKC,SAAS,CAAE,iBAAiBZ,gBAAgB,EAAG,eAChDV,KAAA,CAAAqB,aAAA,QAAKC,SAAS,CAAEH,YAAa,CAACI,GAAG,CAAEN,aAAc,CAACO,GAAG,CAAC,YAAY,CAAE,CACnE,CAAC,cACNxB,KAAA,CAAAqB,aAAA,QAAKC,SAAS,CAAE,qBAAsB,eAClCtB,KAAA,CAAAqB,aAAA,MAAGC,SAAS,CAAE,mBAAmBZ,gBAAgB,EAAG,EAAC,GAAC,CAACL,OAAO,CAAC,GAAI,CAAC,cACpEL,KAAA,CAAAqB,aAAA,QAAKC,SAAS,CAAE,gBAAgBZ,gBAAgB,EAAG,eAC/CV,KAAA,CAAAqB,aAAA,MAAGC,SAAS,CAAC,cAAc,EAAC,GAAC,CAACf,IAAI,CAACkB,UAAU,CAAC,GAAC,CAACZ,KAAK,CAAC,GAAC,CAACD,IAAI,CAAC,GAAC,CAACI,MAAM,CAAC,GAAC,CAACL,OAAW,CAClF,CACJ,CACJ,CAAC,CAEd,CAAC,CAED,cAAe,CAAAR,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
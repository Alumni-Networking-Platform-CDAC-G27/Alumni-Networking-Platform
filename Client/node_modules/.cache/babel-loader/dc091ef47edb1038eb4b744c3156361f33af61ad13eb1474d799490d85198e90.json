{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rijul\\\\Downloads\\\\Alumni\\\\Alumani\\\\Client\\\\src\\\\components\\\\home\\\\FriendMessage.js\";\nimport React from 'react';\nimport { userService } from '../../infrastructure';\nimport placeholder_user_image from '../../assets/images/placeholder.png';\nimport './css/Message.css';\nconst FriendMessage = props => {\n  const {\n    content,\n    fromUserId,\n    time\n  } = props;\n  const loggedInUserId = userService.getUserId();\n  let chatContentClass = '';\n  if (fromUserId === loggedInUserId) {\n    chatContentClass = 'loggedInUser';\n  }\n  const dayTime = props.time.hour <= 12 ? 'AM' : 'PM';\n  const month = props.time.month.substring(0, 1) + props.time.month.substring(1, 5).toLowerCase();\n  const hour = props.time.hour < 10 ? '0' + props.time.hour : props.time.hour;\n  const minute = props.time.minute < 10 ? '0' + props.time.minute : props.time.minute;\n  const profilePicUrl = props.fromUserProfilePicUrl || placeholder_user_image;\n  let imgClassName = '';\n  if (profilePicUrl) {\n    imgClassName = userService.getImageSize(profilePicUrl);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `message-image ${chatContentClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: imgClassName,\n    src: profilePicUrl,\n    alt: \"creatorPic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `message-description`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: `message-content ${chatContentClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \" \", content, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: `message-info ${chatContentClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \" \", time.dayOfMonth, \" \", month, \" \", hour, \":\", minute, \" \", dayTime))));\n};\n_c = FriendMessage;\nexport default FriendMessage;\nvar _c;\n$RefreshReg$(_c, \"FriendMessage\");","map":{"version":3,"names":["React","userService","placeholder_user_image","FriendMessage","props","content","fromUserId","time","loggedInUserId","getUserId","chatContentClass","dayTime","hour","month","substring","toLowerCase","minute","profilePicUrl","fromUserProfilePicUrl","imgClassName","getImageSize","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","dayOfMonth","_c","$RefreshReg$"],"sources":["C:/Users/rijul/Downloads/Alumni/Alumani/Client/src/components/home/FriendMessage.js"],"sourcesContent":["import React from 'react';\nimport { userService } from '../../infrastructure';\nimport placeholder_user_image from '../../assets/images/placeholder.png';\n\nimport './css/Message.css';\n\nconst FriendMessage = (props) => {\n    const { content, fromUserId, time} = props;\n    const loggedInUserId = userService.getUserId();\n\n    let chatContentClass = '';\n\n    if (fromUserId === loggedInUserId) {\n        chatContentClass = 'loggedInUser';\n    }\n\n    const dayTime = props.time.hour <= 12 ? 'AM' : 'PM';\n    const month = props.time.month.substring(0, 1) + props.time.month.substring(1, 5).toLowerCase()\n    const hour = props.time.hour < 10 ? '0' + props.time.hour : props.time.hour;\n    const minute = props.time.minute < 10 ? '0' + props.time.minute : props.time.minute;\n\n    const profilePicUrl = props.fromUserProfilePicUrl || placeholder_user_image\n\n    let imgClassName = '';\n    if (profilePicUrl) {\n        imgClassName = userService.getImageSize(profilePicUrl);\n    }\n\n    return (\n        <div className=\"message-container\">\n            <div className={`message-image ${chatContentClass}`}>\n                <img className={imgClassName} src={profilePicUrl} alt=\"creatorPic\" />\n            </div>\n            <div className={`message-description`}>\n                <p className={`message-content ${chatContentClass}`}> {content} </p>\n                <div className={`message-info ${chatContentClass}`}>\n                    <p className=\"message-time\"> {time.dayOfMonth} {month} {hour}:{minute} {dayTime}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FriendMessage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
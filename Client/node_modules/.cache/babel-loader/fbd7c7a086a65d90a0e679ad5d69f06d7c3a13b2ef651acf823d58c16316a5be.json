{"ast":null,"code":"import{requester}from'../../infrastructure';import{REMOVE_COMMENT_BEGIN,REMOVE_COMMENT_SUCCESS,REMOVE_COMMENT_ERROR,ADDLIKE_COMMENT_SUCCESS,ADDLIKE_COMMENT_BEGIN,ADDLIKE_COMMENT_ERROR,CREATE_COMMENT_SUCCESS,CREATE_COMMENT_BEGIN,CREATE_COMMENT_ERROR}from'./actionTypes';import{fetchAllPostsAction}from'./postActions';// createComment\nconst createCommentSuccess=response=>{return{type:CREATE_COMMENT_SUCCESS,payload:response};};const createCommentBegin=()=>{return{type:CREATE_COMMENT_BEGIN};};const createCommentError=(error,message,status,path)=>{return{type:CREATE_COMMENT_ERROR,error,message,status,path};};const createCommentAction=(postId,loggedInUserId,timelineUserId,content,imageUrl)=>{const requestBody={postId,loggedInUserId,timelineUserId,content,imageUrl};return dispatch=>{dispatch(createCommentBegin());return requester.post('/comment/create',requestBody,response=>{if(response.error){const{error,message,status,path}=response;dispatch(createCommentError(error,message,status,path));}else{dispatch(createCommentSuccess(response));dispatch(fetchAllPostsAction(timelineUserId));}}).catch(err=>{if(err.status===403&&err.message==='Your JWT token is expired. Please log in!'){localStorage.clear();}dispatch(createCommentError('',`Error: ${err.message}`,err.status,''));});};};// removeComment\nconst removeCommentSuccess=response=>{return{type:REMOVE_COMMENT_SUCCESS,payload:response};};const removeCommentBegin=()=>{return{type:REMOVE_COMMENT_BEGIN};};const removeCommentError=(error,message,status,path)=>{return{type:REMOVE_COMMENT_ERROR,error,message,status,path};};const removeCommentAction=(loggedInUserId,commentToRemoveId,timelineUserId)=>{const requestBody={loggedInUserId,commentToRemoveId};return dispatch=>{dispatch(removeCommentBegin());return requester.post('/comment/remove',requestBody,response=>{if(response.error){const{error,message,status,path}=response;dispatch(removeCommentError(error,message,status,path));}else{dispatch(removeCommentSuccess(response));dispatch(fetchAllPostsAction(timelineUserId));}}).catch(err=>{if(err.status===403&&err.message==='Your JWT token is expired. Please log in!'){localStorage.clear();}dispatch(removeCommentError('',`Error: ${err.message}`,err.status,''));});};};// addLike\nconst addLikeCommentSuccess=response=>{return{type:ADDLIKE_COMMENT_SUCCESS,payload:response};};const addLikeCommentBegin=()=>{return{type:ADDLIKE_COMMENT_BEGIN};};const addLikeCommentError=(error,message,status,path)=>{return{type:ADDLIKE_COMMENT_ERROR,error,message,status,path};};const addLikeCommentAction=(loggedInUserId,commentId,timelineUserId)=>{const requestBody={commentId,loggedInUserId};return dispatch=>{dispatch(addLikeCommentBegin());return requester.post('/like/comment',requestBody,response=>{if(response.error){const{error,message,status,path}=response;dispatch(addLikeCommentError(error,message,status,path));}else{dispatch(addLikeCommentSuccess(response));dispatch(fetchAllPostsAction(timelineUserId));}}).catch(err=>{if(err.status===403&&err.message==='Your JWT token is expired. Please log in!'){localStorage.clear();}dispatch(addLikeCommentError('',`Error: ${err.message}`,err.status,''));});};};export{createCommentAction,removeCommentAction,addLikeCommentAction};","map":{"version":3,"names":["requester","REMOVE_COMMENT_BEGIN","REMOVE_COMMENT_SUCCESS","REMOVE_COMMENT_ERROR","ADDLIKE_COMMENT_SUCCESS","ADDLIKE_COMMENT_BEGIN","ADDLIKE_COMMENT_ERROR","CREATE_COMMENT_SUCCESS","CREATE_COMMENT_BEGIN","CREATE_COMMENT_ERROR","fetchAllPostsAction","createCommentSuccess","response","type","payload","createCommentBegin","createCommentError","error","message","status","path","createCommentAction","postId","loggedInUserId","timelineUserId","content","imageUrl","requestBody","dispatch","post","catch","err","localStorage","clear","removeCommentSuccess","removeCommentBegin","removeCommentError","removeCommentAction","commentToRemoveId","addLikeCommentSuccess","addLikeCommentBegin","addLikeCommentError","addLikeCommentAction","commentId"],"sources":["C:/Users/rijul/Downloads/Alumni/Alumani/Client/src/store/actions/commentActions.js"],"sourcesContent":["import { requester } from '../../infrastructure';\nimport {\n    REMOVE_COMMENT_BEGIN, REMOVE_COMMENT_SUCCESS, REMOVE_COMMENT_ERROR,\n    ADDLIKE_COMMENT_SUCCESS, ADDLIKE_COMMENT_BEGIN, ADDLIKE_COMMENT_ERROR,\n    CREATE_COMMENT_SUCCESS, CREATE_COMMENT_BEGIN, CREATE_COMMENT_ERROR,\n} from './actionTypes';\n\nimport { fetchAllPostsAction } from './postActions'\n\n// createComment\nconst createCommentSuccess = (response) => {\n    return {\n        type: CREATE_COMMENT_SUCCESS,\n        payload: response\n    }\n}\n\nconst createCommentBegin = () => {\n    return {\n        type: CREATE_COMMENT_BEGIN,\n    }\n}\n\nconst createCommentError = (error, message, status, path) => {\n    return {\n        type: CREATE_COMMENT_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst createCommentAction = (postId, loggedInUserId, timelineUserId, content, imageUrl) => {\n    const requestBody = { postId, loggedInUserId, timelineUserId, content, imageUrl }\n    return (dispatch) => {\n        dispatch(createCommentBegin())\n        return requester.post('/comment/create', requestBody, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(createCommentError(error, message, status, path));\n            } else {\n                dispatch(createCommentSuccess(response));\n                dispatch(fetchAllPostsAction(timelineUserId))\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(createCommentError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// removeComment\nconst removeCommentSuccess = (response) => {\n    return {\n        type: REMOVE_COMMENT_SUCCESS,\n        payload: response\n    }\n}\n\nconst removeCommentBegin = () => {\n    return {\n        type: REMOVE_COMMENT_BEGIN,\n    }\n}\n\nconst removeCommentError = (error, message, status, path) => {\n    return {\n        type: REMOVE_COMMENT_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst removeCommentAction = (loggedInUserId, commentToRemoveId, timelineUserId) => {\n    const requestBody = { loggedInUserId, commentToRemoveId }\n    return (dispatch) => {\n        dispatch(removeCommentBegin())\n        return requester.post('/comment/remove', requestBody, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(removeCommentError(error, message, status, path));\n            } else {\n                dispatch(removeCommentSuccess(response));\n                dispatch(fetchAllPostsAction(timelineUserId))\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(removeCommentError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n// addLike\nconst addLikeCommentSuccess = (response) => {\n    return {\n        type: ADDLIKE_COMMENT_SUCCESS,\n        payload: response\n    }\n}\n\nconst addLikeCommentBegin = () => {\n    return {\n        type: ADDLIKE_COMMENT_BEGIN,\n    }\n}\n\nconst addLikeCommentError = (error, message, status, path) => {\n    return {\n        type: ADDLIKE_COMMENT_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst addLikeCommentAction = (loggedInUserId, commentId, timelineUserId) => {\n    const requestBody = { commentId, loggedInUserId }\n    return (dispatch) => {\n        dispatch(addLikeCommentBegin())\n        return requester.post('/like/comment', requestBody, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(addLikeCommentError(error, message, status, path));\n            } else {\n                dispatch(addLikeCommentSuccess(response));\n                dispatch(fetchAllPostsAction(timelineUserId))\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(addLikeCommentError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n}\n\n\nexport { createCommentAction, removeCommentAction, addLikeCommentAction, };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}